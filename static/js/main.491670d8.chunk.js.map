{"version":3,"sources":["components/receiptcard/ReceiptCard.tsx","db/FriendlyLiteralDate.tsx","components/modal/Modal.tsx","pages/ListReceiptCards/ListReceiptCard.tsx","db/Receipt.tsx","pages/NewEditReceipt/NewEditReceipt.tsx","components/receipt/Receipt.js","components/receipt/ReceiptStub.js","pages/ReceiptsToPrint/ReceiptsToPrint.tsx","db/Database.tsx","App.tsx","index.tsx"],"names":["ReceiptCard","observer","props","className","receipt","payerName","onClick","onSelectionChangeFunc","isSelected","isSelectable","width","height","viewBox","d","referrerTo","paidValue","href","id","window","confirm","onRemove","monthAsTextMap","friendlyYearAndMonthAsText","dateAsText","date","Date","year","getFullYear","literalMonth","getMonth","Modal","showHideClassName","show","children","handleClose","ReceiptCards","database","useState","receiptsByMonth","setReceiptsByMonth","sectionModalIsVisible","setSectionModalIsVisible","pageModalIsVisible","setPageModalIsVisible","Map","receiptsSelected","setReceiptSelected","selectMode","setSelectMode","collapseds","setCollapseds","handleCloseSelectionMode","fetchReceipts","a","getAllReceipts","receipts","sort","r1","r2","dateAsTimeStamp","rByMonth","reduce","byMonth","r","array","get","push","set","useEffect","payerNameFiltering","setPayerNameFiltering","removeReceipt","deleteReceipt","then","catch","exception","alert","console","log","type","name","placeholder","value","onChange","e","target","size","batchAdd","values","batchDelete","keys","map","keyName","index","friendlyDate","key","i","v","slice","setCollapsed","length","includes","undefined","receiptId","handleOnSelectionChange","Receipt","payerAddress","paidValueAsText","payeeName","payeeCpfOrRg","payeeAddress","this","getTime","NewEditReceipt","setReceipt","isEditing","setIsEditing","getReceipt","done","receiptModel","toClone","addReceipt","updateReceipt","location","hash","handleChange","prevState","history","back","action","noValidate","htmlFor","autoFocus","payer","readOnly","payee","ReceiptStub","ReceiptsToPrint","setReceipts","print","Database","Promise","resolve","reject","dbOpenReq","indexedDB","open","onerror","err","error","onsuccess","event","result","info","onupgradeneeded","createObjectStore","autoIncrement","transaction","oncomplete","objectStore","add","put","request","delete","ids","nextId","next","nextReceipt","warn","openCursor","cursor","continue","pathSplitted","splitted","substr","split","first","second","App","loading","setLoading","currentPage","setCurrentPage","parseInt","identifier","setIdentifier","onhashchange","connect","connectDB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.491670d8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './ReceiptCard.css';\nimport Receipt from '../../db/Receipt';\n\ninterface ReceiptCardInterface {\n  receipt: Receipt;\n  onRemove: any;\n  isSelectable: boolean;\n  isSelected?: boolean;\n  onSelectionChangeFunc (isSelected: boolean): void;\n}\n\nconst ReceiptCard = observer((props: ReceiptCardInterface) => {\n\n    return (\n      <div className=\"receipt-card\">\n\n        <div className=\"receipt-card__header\">\n          <h3 className=\"receipt-card__title\">{props.receipt.payerName || \"...\"}</h3>\n\n          <div className=\"receipt-card__check_container\">\n            <div className=\"receipt-card__check\" \n            onClick={() => props.onSelectionChangeFunc(!props.isSelected)}>\n              {props.isSelectable && (<svg width=\"24px\" height=\"24px\"  \n                viewBox=\"0 0 24 24\"\n                className=\"receipt-card__check\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"></path>\n              </svg>)}\n\n              {props.isSelected && (<svg width=\"24px\" height=\"24px\"\n                viewBox=\"0 0 24 24\"\n                className=\"receipt-card__check\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\">\n                </path>\n              </svg>)}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"receipt-card__content\">\n          <p>{props.receipt.referrerTo || \"...\"}</p>\n          <span className=\"receipt-card__price\">R$ {props.receipt.paidValue || \"?\"}</span>\n        </div>\n\n        <div className=\"receipt-card__bottom\">\n          <div className=\"receipt-card__number\">\n            <span>Nº 121212</span>\n          </div>\n\n          <div className=\"line-separator\"></div>\n\n          <div className=\"receipt-card__action-bar\">\n            <a className=\"receipt-card__button\" href={\"#receipt/\" + props.receipt.id}>\n              <i className=\"fas fa-edit\"></i>\n            </a>\n            <a className=\"receipt-card__button\" href={\"#receipt-clone/\" + props.receipt.id}>\n              <i className=\"fas fa-clone\"></i>\n            </a>\n            <a className=\"receipt-card__button\" onClick={() => {\n              const answer = window.confirm(\"Realmente deseja remover esse recibo?\");\n              if (answer === true) {\n                props.onRemove(props.receipt.id)};\n              }\n            }>\n              <i className=\"fas fa-trash\"></i>\n            </a>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n)\nexport default ReceiptCard;","const monthAsTextMap:any = {\n  0: 'Janeiro',\n  1: 'Fevereiro',\n  2: 'Março',\n  3: 'Abril',\n  4: 'Maio',\n  5: 'Junho',\n  6: 'Julho',\n  7: 'Agosto',\n  8: 'Setembro',\n  9: 'Outubro',\n  10: 'Novembro',\n  11: 'Dezembro'\n}\n\n// Formated as 2021-08-20\nfunction friendlyYearAndMonthAsText(dateAsText: string) {\n  if (!dateAsText) {\n    return 'Sem data';\n  }\n\n  const date = new Date(dateAsText);\n  const year = date.getFullYear();\n  const literalMonth = monthAsTextMap[date.getMonth()];\n  if ((new Date()).getFullYear() === year) {\n    return literalMonth;\n  } else {\n    return literalMonth + ' de ' + year;\n  }\n}\n\nexport default friendlyYearAndMonthAsText;","import React from 'react';\nimport './Modal.css';\n\ninterface ModalProps {\n  handleClose: any;\n  children: any;\n  show?: boolean;\n};\n\nconst Modal = (props: ModalProps) => {\n  const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n        {props.children}\n        <a onClick={props.handleClose}>Cancelar</a><br/>\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport ReceiptCard from '../../components/receiptcard/ReceiptCard';\n\nimport Receipt  from '../../db/Receipt';\nimport './ListReceiptCard.css';\n\nimport friendlyYearAndMonthAsText from '../../db/FriendlyLiteralDate';\n\nimport Modal from '../../components/modal/Modal';\n\nconst ReceiptCards = (props: any) => {\n  const database = props.database;\n  const [receiptsByMonth, setReceiptsByMonth] = useState<Map<string, [Receipt]>>();\n  const [sectionModalIsVisible, setSectionModalIsVisible] = useState<boolean>();\n  const [pageModalIsVisible, setPageModalIsVisible] = useState<boolean>();\n  const [receiptsSelected, setReceiptSelected] = useState<Map<number, Receipt>>(new Map());\n\n  const [selectMode, setSelectMode] = useState<boolean>(false);\n  \n  const [collapseds, setCollapseds] = useState<Array<Boolean>>([]);\n  const setCollapsed = (i: number, v: boolean) => {\n    const a = collapseds.slice();\n    a[i] = v;\n    setCollapseds(a);\n  }\n\n  function handleOnSelectionChange(receiptId: number, receipt: Receipt) {\n    setReceiptSelected(new Map(receiptsSelected).set(receiptId, receipt));\n  }\n\n  function handleCloseSelectionMode() {\n    setSelectMode(false);\n    setReceiptSelected(new Map());\n  }\n\n  function handleDeleteSelection() {\n    database.batchDelete(receiptsSelected.keys())\n      .then(async() => {\n        fetchReceipts();\n        handleCloseSelectionMode();\n      })\n      .catch((exception: any) => {\n        alert(\"Não foi possível deletar os recibos por um erro inesperado.\");\n        console.log(exception);\n      });\n  }\n\n  function handleCloneSelection() {\n    database.batchAdd(receiptsSelected.values())\n      .then(async() => {\n        fetchReceipts();\n        handleCloseSelectionMode();\n      })\n      .catch((exception: any) => {\n        alert(\"Não foi possível clonar os recibo selecionados.\");\n        console.log(exception);\n      });\n  }\n\n  useEffect(() => {\n    fetchReceipts();\n  }, []);\n  \n  async function fetchReceipts() {\n    const receipts: Receipt[] = await database.getAllReceipts();\n    receipts.sort((r1, r2) => r2.dateAsTimeStamp - r1.dateAsTimeStamp)\n\n    const rByMonth = receipts.reduce((byMonth, r) => {\n      const array: [Receipt] = byMonth.get(r.date) || [];\n      array.push(r);\n      byMonth.set(r.date, array);\n      return byMonth;\n    }, new Map())\n\n    setReceiptsByMonth(rByMonth)\n  };\n  const[payerNameFiltering, setPayerNameFiltering] = useState(\"\");\n\n  function removeReceipt(id: number) {\n    // TODO GOOD CASE FOR UNIT TEST, SUCCESS MEAN DELETED AND NOT FOUND??\n    database.deleteReceipt(id)\n      .then(async() => {\n        fetchReceipts();\n      })\n      .catch((exception: any) => {\n        alert(\"Não foi possível deletar o recibo por um erro inesperado.\");\n        console.log(exception);\n      })\n  }\n\n  return (\n    <div className=\"receipts-card\">\n\n      {!selectMode && (\n      <header className=\"top-app-bar\">\n        <div className=\"top-app-bar__navigation\">\n          <a>\n            <i className=\"fas fa-home\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          Recibos Facil\n        </div>\n        \n        <div className=\"top-app-bar__right-part\">\n          <i className=\"fas fa-ellipsis-v\" onClick={() => setPageModalIsVisible(true)}></i>\n          <input \n              type=\"search\"\n              name=\"search\" \n              placeholder=\"Pesquise por nome\" \n              id=\"search\"\n              className=\"search\"\n              value={payerNameFiltering} onChange={(e) => setPayerNameFiltering(e.target.value)}\n              />\n        </div>\n      </header>)}\n\n      {selectMode && (\n      <header className=\"top-app-bar\">\n        <div className=\"top-app-bar__navigation\">\n          <a>\n            <i onClick={handleCloseSelectionMode}\n               className=\"fas fa-times\">\n            </i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          {receiptsSelected.size === 0 && (\"Selecionar recibos\")}\n          {receiptsSelected.size > 0 && (\n            receiptsSelected.size\n          )}\n          \n        </div>\n        \n        <div className=\"top-app-bar__right-part\">\n          {receiptsSelected.size > 0 && (\n            <div>\n              <i className=\"fas fa-clone\" onClick={handleCloneSelection}></i>\n              <i className=\"fas fa-trash\" onClick={handleDeleteSelection}></i>\n            </div>\n          )}\n        </div>\n      </header>)}\n\n      <Modal \n        show={pageModalIsVisible} \n        handleClose={() => {setPageModalIsVisible(false)}}>\n        <a onClick={() => {\n            setSelectMode(true);\n            setPageModalIsVisible(false); \n          }}>\n          Selecionar recibos\n        </a><br/>\n      </Modal>\n\n      <Modal show={sectionModalIsVisible} handleClose={() => {setSectionModalIsVisible(false)}}>\n        <a>Duplicar todos com a data corrente</a><br/>\n        <a>Selecionar todos</a><br/>\n        <a>Maximizar</a><br/>\n        <a>Minimizar</a><br/>\n      </Modal>\n\n      {\n        receiptsByMonth && [...receiptsByMonth.keys()].map((keyName, index) => {\n\n          const receipts: Receipt[] = receiptsByMonth.get(keyName) || [];\n          const friendlyDate = friendlyYearAndMonthAsText(keyName);\n          \n          return (\n          <div className=\"receipts-by-month-container\" key={keyName}> \n            \n            <div className=\"receipts-by-month__header\">\n              <div className=\"receipts-by-month__header__left\">\n                <i className={\"fas \" +\n                    (collapseds[index] ? \"fa-chevron-right \" : \"fa-chevron-down \")\n                  }\n                  onClick={() => setCollapsed(index, !collapseds[index])}\n                ></i>\n                <span className=\"receipts-by-month__title\">{friendlyDate}</span> \n                <span className=\"receipts-by-month__details\">{receipts.length}</span>\n              </div>\n              <div className=\"receipts-by-month__header__right\">\n                <i \n                  className=\"fas fa-ellipsis-v receipts-by-month__menu\" \n                  onClick={() => setSectionModalIsVisible(true)}></i>\n              </div>\n            </div>\n\n            <div className=\"receipts-by-month__list\">\n            {\n              receipts.map((receipt) => {\n                if (collapseds[index]) {\n                  return false;\n                }\n        \n              if (payerNameFiltering && (!receipt.payerName || !receipt.payerName.includes(payerNameFiltering))) {\n                return;\n              }\n      \n              return <ReceiptCard\n                  receipt={receipt}\n                  onRemove={removeReceipt}\n                  isSelectable={selectMode}\n                  isSelected={receiptsSelected.get(receipt.id!) !== undefined}\n                  onSelectionChangeFunc={(isSelected) => handleOnSelectionChange(receipt.id!, receipt)}\n                />\n              })\n            }\n            </div>\n          </div>)\n        })\n      } \n    </div>\n  );\n}\n\nexport default ReceiptCards;","class Receipt {\n  id: number | undefined;\n  payerName?: string;\n  payerAddress?: string;\n  referrerTo?: string;\n  paidValue?: number;\n  paidValueAsText?: string;\n  date?: Date;\n  payeeName?: string;\n  payeeCpfOrRg?: string;\n  payeeAddress?: string;\n\n  get dateAsTimeStamp() {\n    if (this.date) {\n      const d: Date = new Date(this.date);\n      return d.getTime();\n    }\n    return 9007199254740991;\n  }\n}\n\n\nexport default Receipt;","import React, { useState, useEffect } from 'react';\n\nimport './NewEditReceipt.css';\n\nimport Receipt from '../../db/Receipt'\nimport Database from '../../db/Database';\n\ninterface NewEditReceiptProps {\n  receiptId?: number,\n  toClone?: boolean\n  database: Database\n}\n\nconst NewEditReceipt = (props: NewEditReceiptProps) => {\n\n  const database = props.database;\n  const [receipt, setReceipt] = useState<any>(new Receipt());\n  const [isEditing, setIsEditing] = useState(false)\n\n  useEffect(() => {\n    if (props.receiptId) {\n      setIsEditing(true);\n      database.getReceipt(props.receiptId)\n        .then((receipt) => {\n          setReceipt(receipt);\n        })\n        .catch((exception) => {\n          alert(\"Não foi possível carregar o recibo.\");\n          console.log(exception);\n        });\n    };\n  }, [props.receiptId]);\n  \n  const cancel = function() {\n    window.location.hash = \"#receipt-list\";\n  };\n\n  const done = async function() {\n    const receiptModel = new Receipt();\n    \n    receiptModel.payerName = receipt.payerName;\n    receiptModel.payerAddress = receipt.payerAddress;\n    receiptModel.referrerTo = receipt.referrerTo;\n    receiptModel.paidValue = receipt.paidValue;\n    receiptModel.paidValueAsText = receipt.paidValueAsText;\n    receiptModel.date = receipt.date;\n    receiptModel.payeeName = receipt.payeeName;\n    receiptModel.payeeCpfOrRg = receipt.payeeCpfOrRg;\n    receiptModel.payeeAddress = receipt.payeeAddress;\n\n    if (isEditing && props.toClone) {\n      await database.addReceipt(receiptModel);\n    } else if (isEditing) {\n      await database.updateReceipt(receiptModel, props.receiptId!);\n    } else {\n      await database.addReceipt(receiptModel);\n    }\n    window.location.hash = \"#receipt-list\";\n  };\n\n  const handleChange = function(e: any) {\n    const {name, value} = e.target;\n\n    setReceipt((prevState: any) => {\n      let receipt = { ...prevState }; \n      receipt[name] = value;\n      return receipt;\n    })\n  };\n\n  return (\n    <div className=\"new-receipt\">\n      <header className=\"top-app-bar\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={() => (window.history.back())}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          Recibo\n        </div>\n\n        {!isEditing && \n        <div className=\"top-app-bar__right-part\">\n          <a onClick={() => cancel()}>\n            <i className=\"fas fa-times top-app-bar__icon\"></i>\n          </a>\n        </div>}\n      </header>\n\n      <form className=\"receipt-form\" name=\"receipt-form\" \n        action=\"javascript:void(0);\"\n        noValidate >\n        {/* <label htmlFor={\"receiptNumber\"}>Numero</label>\n        <input \n          type=\"text\" \n          name={\"receiptNumber\"} \n          placeholder=\"\" \n          id={\"receiptNumber\"}\n          /> */}\n\n        <div className=\"receipt-payer\">\n          \n          <h3>Recebido de</h3>\n\n          <label htmlFor={\"payerName\"}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerName\"} \n            placeholder=\"\" \n            id={\"payerName\"}\n            value={receipt.payerName} \n            onChange={handleChange}\n            autoFocus\n            />\n\n          <label htmlFor={\"referrerTo\" }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo\" } \n            placeholder=\"\" \n            id={\"referrerTo\" }\n            value={receipt.referrerTo} \n            onChange={handleChange}\n            />\n\n          <label htmlFor={\"paidValue\"}>Valor</label>\n          <input \n            className=\"u-full-width\" \n            type=\"number\"   \n            name={\"paidValue\"} \n            placeholder=\"\" \n            id={\"paidValue\"}\n            value={receipt.paidValue} \n            onChange={handleChange}\n            />\n          </div>\n\n          <label htmlFor={\"payerAddress\"}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress\"} \n            placeholder=\"\" \n            id={\"payerAddress\"}\n            value={receipt.payerAddress} \n            onChange={handleChange}\n            />\n          <div className=\"receipt-header\">\n          \n          {/* <label htmlFor={\"paidValueAsText\"}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText\"} \n            placeholder=\"\" \n            id={\"paidValueAsText\"}\n            value={receipt.paidValueAsText} onChange={(e) => receipt.paidValueAsText = e.target.value}/> */}\n\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date\"}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"date\"  \n            name={\"date\"} \n            placeholder=\"\" \n            id={\"date\"}\n            value={receipt.date} \n            onChange={handleChange}\n            />\n        </div>\n\n        \n        <div className=\"receipt-payee top-padding\">\n          <h3>Recebido por</h3>\n          <div className=\"emitentCpf\">\n            <div>\n              <label htmlFor={\"payeeName\"}>Emitente</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\" \n                name={\"payeeName\"} \n                placeholder=\"\" \n                id={\"payeeName\"}\n                value={receipt.payeeName}\n                onChange={handleChange}\n                />\n            </div>\n            <div>\n              <label htmlFor={\"payeeCpfOrRg\"}>CPF/RG</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\"   \n                name={\"payeeCpfOrRg\"} \n                placeholder=\"\" \n                id={\"payeeCpfOrRg\"}\n                value={receipt.payeeCpfOrRg} \n                onChange={handleChange}\n                />\n            </div>\n          </div>\n\n          <label htmlFor={\"payeeAddress\"}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeAddress\"} \n            placeholder=\"\" \n            id={\"payeeAddress\"}\n            value={receipt.payeeAddress} \n            onChange={handleChange}\n            />\n\n          {/* <label htmlFor={\"payeeSignature\"}>Assinatura</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeSignature\"} \n            placeholder=\"\" \n            id={\"payeeSignature\"}\n            /> */}\n        </div>\n\n        <div className=\"action-bar\">\n          <button onClick={() => done()}>\n            Pronto\n          </button>\n        </div>\n      </form>\n\n    </div>\n  );\n}\n\nexport default NewEditReceipt;","import React from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './Receipt.css';\n\nconst Receipt = observer((props) => {\n\n    return (\n      <div className=\"receipt-container\">\n        \n        <div className=\"receipt-header\">\n          <span>RECIBO</span>\n        \n          <div>\n            <label htmlFor={\"receiptNumber-\" + props.index}>Numero</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\" \n              name={\"receiptNumber-\" + props.index} \n              placeholder=\"\" \n              id={\"receiptNumber-\" + props.index}\n              />\n          </div>\n          \n          <div>\n            <label htmlFor={\"paidValue-\" + props.index}>Valor</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\"   \n              name={\"paidValue-\" + props.index} \n              placeholder=\"\" \n              id={\"paidValue-\" + props.index}\n              value={props.receipt.paidValue} onChange={(e) => props.receipt.paidValue = e.target.value}/>\n          </div>\n        </div>\n\n        <div className=\"receipt-payer\">\n          <label htmlFor={\"payer-\" + props.index}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payer-\" + props.index} \n            placeholder=\"\" \n            id={\"payer-\" + props.index}\n            value={props.receipt.payer} onChange={(e) => props.receipt.payer = e.target.value}/>\n\n          <label htmlFor={\"payerAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payerAddress-\" + props.index}\n            value={props.receipt.payerAddress} onChange={(e) => props.receipt.payerAddress = e.target.value}/>\n          \n          <label htmlFor={\"paidValueAsText-\" + props.index}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText-\" + props.index} \n            placeholder=\"\" \n            id={\"paidValueAsText-\" + props.index}\n            value={props.receipt.paidValueAsText} onChange={(e) => props.receipt.paidValueAsText = e.target.value}/>\n\n          <label htmlFor={\"referrerTo-\" + props.index }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo-\" + props.index } \n            placeholder=\"\" \n            id={\"referrerTo-\" + props.index }\n            value={props.receipt.referrerTo} onChange={(e) => props.receipt.referrerTo = e.target.value}/>\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date-\" + props.index}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"date-\" + props.index} \n            placeholder=\"\" \n            id={\"date-\" + props.index}\n            value={props.date} \n            readOnly/>\n        </div>\n\n        <div className=\"receipt-payee\">\n          <div className=\"emitentCpf\">\n            <div>\n              <label htmlFor={\"payee-\" + props.index}>Emitente</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\" \n                name={\"payee-\" + props.index} \n                placeholder=\"\" \n                id={\"payee-\" + props.index}\n                value={props.payee}\n                readOnly/>\n            </div>\n            <div>\n              <label htmlFor={\"payeeCpfOrRg-\" + props.index}>CPF/RG</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\"   \n                name={\"payeeCpfOrRg-\" + props.index} \n                placeholder=\"\" \n                id={\"payeeCpfOrRg-\" + props.index}\n                value={props.payeeCpfOrRg} \n                readOnly/>\n            </div>\n          </div>\n\n          <label htmlFor={\"payeeAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payeeAddress-\" + props.index}\n            value={props.payeeAddress} \n            readOnly/>\n\n          <label htmlFor={\"payeeSignature-\" + props.index}>Assinatura</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeSignature-\" + props.index} \n            placeholder=\"\" \n            id={\"payeeSignature-\" + props.index}\n            />\n        </div>\n      </div>\n    );\n  }\n)\nexport default Receipt;","import React from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './Receipt.css';\n\nconst ReceiptStub = observer((props) => {\n\n    return (\n      <div className=\"receipt-container\">\n        \n        <div className=\"receipt-header\">\n          <div>\n            <label htmlFor={\"receiptNumber-\" + props.index}>Numero</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\" \n              name={\"receiptNumber-\" + props.index} \n              placeholder=\"\" \n              id={\"receiptNumber-\" + props.index}\n              />\n          </div>\n          \n          <div>\n            <label htmlFor={\"paidValue-\" + props.index}>Valor</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\"   \n              name={\"paidValue-\" + props.index} \n              placeholder=\"\" \n              id={\"paidValue-\" + props.index}\n              value={props.receipt.paidValue} onChange={(e) => props.receipt.paidValue = e.target.value}/>\n          </div>\n        </div>\n\n        <div className=\"receipt-payer\">\n          <label htmlFor={\"payer-\" + props.index}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payer-\" + props.index} \n            placeholder=\"\" \n            id={\"payer-\" + props.index}\n            value={props.receipt.payer} onChange={(e) => props.receipt.payer = e.target.value}/>\n\n          <label htmlFor={\"payerAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payerAddress-\" + props.index}\n            value={props.receipt.payerAddress} onChange={(e) => props.receipt.payerAddress = e.target.value}/>\n          \n          <label htmlFor={\"paidValueAsText-\" + props.index}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText-\" + props.index} \n            placeholder=\"\" \n            id={\"paidValueAsText-\" + props.index}\n            value={props.receipt.paidValueAsText} onChange={(e) => props.receipt.paidValueAsText = e.target.value}/>\n\n          <label htmlFor={\"referrerTo-\" + props.index }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo-\" + props.index } \n            placeholder=\"\" \n            id={\"referrerTo-\" + props.index }\n            value={props.receipt.referrerTo} onChange={(e) => props.receipt.referrerTo = e.target.value}/>\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date-\" + props.index}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"date-\" + props.index} \n            placeholder=\"\" \n            id={\"date-\" + props.index}\n            value={props.date} \n            readOnly/>\n        </div>\n\n      </div>\n    );\n  }\n)\nexport default ReceiptStub;","import React, { useState, useEffect } from 'react';\nimport Receipt from '../../components/receipt/Receipt';\nimport ReceiptStub from '../../components/receipt/ReceiptStub';\nimport Database from '../../db/Database';\n\nimport './ReceiptsToPrint.css';\n\ninterface ReceiptsToPrintProps {\n  database: Database\n}\n\nconst ReceiptsToPrint = (props: ReceiptsToPrintProps) => {\n  const database = props.database;\n  const [receipts, setReceipts] = useState<any[]>([]);\n\n  useEffect(() => {\n    async function fetchReceipts() {\n      const receipts = await database.getAllReceipts();\n      setReceipts(receipts);\n    };\n    fetchReceipts();\n  }, []);\n\n  return (\n    <div className=\"receipt-to-print-list\">\n\n      <header className=\"top-app-bar no-printable\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={() => (window.history.back())}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          Imprimir\n        </div>\n      </header>\n      \n      <div className=\"action-top-bar\">\n        <button className=\"button-primary no-printable\" onClick={window.print}>\n          Imprimir\n        </button>\n      </div>\n      \n      <div className=\"\">\n        <h2>Canhotos</h2>\n        {receipts.map((receipt) => (\n          <div key={receipt.id}>\n            <ReceiptStub\n              key={receipt.id}\n              index={receipt.id}\n              payee={receipt.payeeName}\n              payeeCpfOrRg={receipt.payeeCpfOrRg}\n              payeeAddress={receipt.payeeAddress}\n              date={receipt.date}\n              receipt={receipt}\n            />\n          </div>\n        ))} \n\n        <h2>Recibos</h2>\n        {receipts.map((receipt) => (\n          <div key={receipt.id}>\n            <Receipt\n              key={receipt.id}\n              index={receipt.id}\n              payee={receipt.payeeName}\n              payeeCpfOrRg={receipt.payeeCpfOrRg}\n              payeeAddress={receipt.payeeAddress}\n              date={receipt.date}\n              receipt={receipt}\n            />\n          </div>\n        ))} \n      </div>\n    </div>\n  );\n}\n\nexport default ReceiptsToPrint;","import Receipt  from './Receipt';\n\nclass Database {\n  \n  #db: any;\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const dbOpenReq = indexedDB.open('EasyReceipts', 1);\n  \n      dbOpenReq.onerror = (err) => {\n        console.error('error creating/connecting to db', err);\n        reject('Failed to connected/create/update DB');\n      };\n  \n      dbOpenReq.onsuccess = (event: any) => {\n        this.#db = event.target?.result;\n        console.info('connected successfuly to DB')\n        resolve(\"Connected\");\n      };\n  \n      dbOpenReq.onupgradeneeded = (event: any) => {\n        this.#db = event.target?.result;\n  \n        this.#db.createObjectStore('receipt', {\n          autoIncrement: true\n        });\n      };\n    });\n  }\n\n  addReceipt(receipt: Receipt) {\n    return new Promise<void>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt'], \"readwrite\");\n\n      transaction.oncomplete = function(event: any) {\n        console.log(\"Transaction do add is done\", event);\n      };\n\n      transaction.onerror = function(event: any) {\n        console.log(\"Transaction to add erros\", event);\n        reject('Failed to add');\n      };\n\n      var objectStore = transaction.objectStore('receipt');\n      var request = objectStore.add(receipt);\n      request.onsuccess = function(event: any) {\n        console.log(\"Receipt created\", event);\n        resolve();\n      };\n    });\n  };\n\n\n  updateReceipt(receipt: Receipt, id: number) {\n    return new Promise<void>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt'], \"readwrite\");\n\n      transaction.oncomplete = function(event: any) {\n        console.log(\"Transaction do update is done\", event);\n      };\n\n      transaction.onerror = function(event: any) {\n        console.log(\"Transaction to update has erros\", event);\n        reject('Failed to update');\n      };\n\n      var objectStore = transaction.objectStore('receipt');\n      var request = objectStore.put(receipt, id);\n      request.onsuccess = function(event: any) {\n        console.log(\"Receipt created\", event);\n        resolve();\n      };\n    });\n  }\n\n  deleteReceipt(id: number) {\n    return new Promise<void>((resolve, reject) => {\n      var request = this.#db.transaction(['receipt'], \"readwrite\")\n          .objectStore('receipt')\n          .delete(id);\n\n      request.onsuccess = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      request.onerror = function(event: any) {\n        console.error('Error on deleting receipt');\n        reject();\n      };\n    })\n  };\n\n  batchDelete(ids: IterableIterator<number>) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      let nextId = ids.next();\n      while (!nextId.done) {\n        transaction.objectStore('receipt').delete(nextId.value);;\n        nextId = ids.next();\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on deleting batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  batchAdd(receipts: IterableIterator<Receipt>) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      let nextReceipt = receipts.next();\n      while (!nextReceipt.done) {\n        transaction.objectStore('receipt').add(nextReceipt.value);;\n        nextReceipt = receipts.next();\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on adding batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  //TODO: ADD class type RECEIPT when returning a receipt\n  getReceipt(id: number) {\n    return new Promise<Receipt>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt']);\n      var objectStore = transaction.objectStore('receipt');\n      var request = objectStore.get(id);\n      request.onerror = function(event: any) {\n        console.error('Error on fiding receipt');\n        reject();\n      };\n      request.onsuccess = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        if (!request.result) {\n          console.warn('Receipt not found');\n          resolve(new Receipt());\n        }\n        resolve(request.result);\n      };\n    })\n  };\n\n  // TODO RETURN RECEIPT OBJECT LIST\n  getAllReceipts() {\n    return new Promise<Receipt[]>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt']);\n      var objectStore = transaction.objectStore('receipt');\n      var receipts: Receipt[] = [];\n\n      objectStore.openCursor().onsuccess = function(event: any) {\n        var cursor = event.target.result;\n        if (cursor) {\n          const receiptModel = new Receipt();\n    \n          receiptModel.payerName = cursor.value.payerName;\n          receiptModel.payerAddress = cursor.value.payerAddress;\n          receiptModel.referrerTo = cursor.value.referrerTo;\n          receiptModel.paidValue = cursor.value.paidValue;\n          receiptModel.paidValueAsText = cursor.value.paidValueAsText;\n          receiptModel.date = cursor.value.date;\n          receiptModel.payeeName = cursor.value.payeeName;\n          receiptModel.payeeCpfOrRg = cursor.value.payeeCpfOrRg;\n          receiptModel.payeeAddress = cursor.value.payeeAddress;\n          receiptModel.id = cursor.key;\n          \n          receipts.push(receiptModel);\n          cursor.continue();\n        }\n        else {\n          console.log(\"No more entries!\");\n          resolve(receipts);\n        }\n      };\n    })\n  }\n\n  db() {\n    return this.#db;\n  }\n}\n\n//await database.connect();\nexport default Database;\n\n","import React, {useState, useEffect} from 'react';\nimport './css/Normalize.css';\nimport './css/SkeletonCustomizedByMe.css';\nimport './css/Common.css';\nimport './css/App.css';\n\nimport ReceiptCards from './pages/ListReceiptCards/ListReceiptCard';\nimport NewEditReceipt from './pages/NewEditReceipt/NewEditReceipt';\nimport ReceiptsToPrint from './pages/ReceiptsToPrint/ReceiptsToPrint';\n\nimport Database from './db/Database';\n\ndeclare global {\n  interface Window { Database: any; }\n}      \n\nfunction pathSplitted() {\n  const splitted = window.location.hash.substr(1).split('/');\n  return {\n    first: splitted[0] || '',\n    second: splitted[1] || ''\n  }\n}\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(pathSplitted().first);\n  const [identifier, setIdentifier] = useState(parseInt(pathSplitted().second));\n  function locationHashChanged() {\n    setCurrentPage(pathSplitted().first);\n    setIdentifier(parseInt(pathSplitted().second));\n  }\n  window.onhashchange = locationHashChanged;\n\n  const [database, setDatabase] = useState<Database>(new Database);\n  \n  useEffect(() => {\n    async function connectDB() {\n      await database.connect();\n      setLoading(false);\n\n      window.Database = database;\n    };\n    connectDB();\n  }, []);\n\n  return (\n    <div className=\"rootApp\">\n      <main>\n        {\n          (() => {\n\n            if (loading) {\n              return <span>Loading</span>\n            }\n\n            if (!currentPage ||  currentPage === 'receipt-list') {\n              return <ReceiptCards \n                database={database}>\n              </ReceiptCards>\n            }\n\n            if (currentPage === 'receipt-clone' && identifier) {\n              return <NewEditReceipt\n                receiptId={identifier}\n                database={database}\n                toClone\n              />\n            }\n\n            if (currentPage === 'receipt' && identifier) {\n              return <NewEditReceipt\n                receiptId={identifier}\n                database={database}\n              />\n            }\n\n            if (currentPage === 'receipt') {\n              return <NewEditReceipt\n                database={database}\n              />\n            }\n\n            if (currentPage === 'receipts-to-print') {\n              return <ReceiptsToPrint \n                database={database}/>\n            }\n\n            return \"NOTFOUND\"\n          })()\n        }\n      </main>\n\n      <footer className=\"bottom-app-bar\">\n        <a href=\"#receipt-list\">\n          <i className={\"fas fa-list \" \n            + (currentPage == 'receipt-list' || currentPage == '' ? 'opacity-half' : '')}></i>\n        </a>\n        <a href=\"#receipt\">\n          <i className={\"fas fa-plus-square \" + (currentPage == 'receipt' ? 'opacity-half' : '')}></i>\n        </a>\n        <a href=\"#receipts-to-print\">\n          <i className={\"fas fa-print  \" + (currentPage == 'receipts-to-print' ? 'opacity-half' : '')}></i>\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}