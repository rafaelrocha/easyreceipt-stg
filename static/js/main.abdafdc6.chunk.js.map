{"version":3,"sources":["db/FriendlyLiteralDate.tsx","components/receiptcard/ReceiptCard.tsx","components/modal/Modal.tsx","pages/ListReceiptCards/ByMonthReceiptCard.tsx","pages/ListReceiptCards/ListReceiptCardHeader.tsx","pages/ListReceiptCards/ListReceiptCard.tsx","db/Receipt.tsx","pages/NewEditReceipt/NewEditReceipt.tsx","components/receipt/Receipt.js","components/receipt/ReceiptStub.js","pages/ReceiptsToPrint/ReceiptsToPrint.tsx","db/Database.tsx","App.tsx","index.tsx"],"names":["monthAsTextMap","friendlyYearAndMonthAsText","dateAsText","date","Date","year","getFullYear","literalMonth","getMonth","ReceiptCard","observer","props","className","receipt","payerName","onClick","onSelectionChange","isSelected","enableSelection","width","height","viewBox","d","referrerTo","paidValue","href","id","window","confirm","onRemove","Modal","showHideClassName","show","children","handleClose","ByMonthReceiptCard","useState","collapsed","setCollapsed","modalIsVisible","setModalIsVisible","key","title","onSelectAll","receipts","length","map","payerNameFiltering","includes","undefined","receiptsSelected","get","iSelected","ListReceiptCardHeader","pageModalIsVisible","setPageModalIsVisible","onClickToEnableSelectMode","isSelectModeOn","type","name","placeholder","onChange","e","onChangeOfPayerNameToFilter","target","value","onClickToDisableSelectMode","size","onClickToCloneSelectedReceipts","onClickToDeleteSelectedReceipts","ReceiptCards","database","receiptsByMonth","setReceiptsByMonth","Map","setReceiptSelected","selectMode","setSelectMode","handleSelectAll","a","set","handleSelectionChange","receiptId","delete","handleCloseSelectionMode","fetchReceipts","getAllReceipts","sort","r1","r2","dateAsTimeStamp","rByMonth","reduce","byMonth","r","array","push","useEffect","setPayerNameFiltering","handleRemoveReceipt","deleteReceipt","then","catch","exception","alert","console","log","values","receiptsToClone","nextReceipt","next","done","arrayAdd","batchDelete","keys","keyName","index","friendlyTitle","Receipt","payerAddress","paidValueAsText","payeeName","payeeCpfOrRg","payeeAddress","this","getTime","NewEditReceipt","setReceipt","screenMode","setScreenMode","toClone","getReceipt","receiptModel","addReceipt","updateReceipt","location","hash","handleChange","prevState","history","back","action","noValidate","htmlFor","autoFocus","payer","readOnly","payee","ReceiptStub","ReceiptsToPrint","setReceipts","print","Database","Promise","resolve","reject","dbOpenReq","indexedDB","open","onerror","err","error","onsuccess","event","result","info","onupgradeneeded","createObjectStore","autoIncrement","transaction","oncomplete","objectStore","add","put","request","ids","nextId","i","warn","openCursor","cursor","continue","pathSplitted","splitted","substr","split","first","second","App","loading","setLoading","currentPage","setCurrentPage","parseInt","identifier","setIdentifier","onhashchange","connect","connectDB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abdafdc6.chunk.js","sourcesContent":["const monthAsTextMap:any = {\n  0: 'Janeiro',\n  1: 'Fevereiro',\n  2: 'Março',\n  3: 'Abril',\n  4: 'Maio',\n  5: 'Junho',\n  6: 'Julho',\n  7: 'Agosto',\n  8: 'Setembro',\n  9: 'Outubro',\n  10: 'Novembro',\n  11: 'Dezembro'\n}\n\n// Formated as 2021-08-20\nfunction friendlyYearAndMonthAsText(dateAsText: string) {\n  if (!dateAsText) {\n    return undefined;\n  }\n\n  const date = new Date(dateAsText);\n  const year = date.getFullYear();\n  const literalMonth = monthAsTextMap[date.getMonth()];\n  if ((new Date()).getFullYear() === year) {\n    return literalMonth;\n  } else {\n    return literalMonth + ' de ' + year;\n  }\n}\n\nexport default friendlyYearAndMonthAsText;","import React, { useState } from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './ReceiptCard.css';\nimport Receipt from '../../db/Receipt';\n\ninterface ReceiptCardInterface {\n  receipt: Receipt;\n  enableSelection: boolean;\n  isSelected: boolean;\n  onRemove (receiptId: number): void;\n  onSelectionChange (isSelected: boolean): void;\n}\n\nconst ReceiptCard = observer((props: ReceiptCardInterface) => {\n\n    return (\n      <div className=\"receipt-card\">\n\n        <div className=\"receipt-card__header\">\n          <h3 className=\"receipt-card__title\">{props.receipt.payerName || \"...\"}</h3>\n\n          <div className=\"receipt-card__check_container\">\n            <div className=\"receipt-card__check\" \n            onClick={() => props.onSelectionChange(!props.isSelected)}>\n              {props.enableSelection && (<svg width=\"24px\" height=\"24px\"  \n                viewBox=\"0 0 24 24\"\n                className=\"receipt-card__check\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"></path>\n              </svg>)}\n\n              {props.isSelected && (<svg width=\"24px\" height=\"24px\"\n                viewBox=\"0 0 24 24\"\n                className=\"receipt-card__check\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\">\n                </path>\n              </svg>)}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"receipt-card__content\">\n          <p>{props.receipt.referrerTo || \"...\"}</p>\n          <span className=\"receipt-card__price\">R$ {props.receipt.paidValue || \"?\"}</span>\n        </div>\n\n        <div className=\"receipt-card__bottom\">\n          <div className=\"receipt-card__number\">\n            <span>Nº 121212</span>\n          </div>\n\n          <div className=\"line-separator\"></div>\n\n          <div className=\"receipt-card__action-bar\">\n            <a className=\"receipt-card__button\" href={\"#receipt/\" + props.receipt.id}>\n              <i className=\"fas fa-edit\"></i>\n            </a>\n            <a className=\"receipt-card__button\" href={\"#receipt-clone/\" + props.receipt.id}>\n              <i className=\"fas fa-clone\"></i>\n            </a>\n            <a className=\"receipt-card__button\" onClick={() => {\n              const answer = window.confirm(\"Realmente deseja remover esse recibo?\");\n              if (answer === true) {\n                props.onRemove(props.receipt.id!)};\n              }\n            }>\n              <i className=\"fas fa-trash\"></i>\n            </a>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n)\nexport default ReceiptCard;","import React from 'react';\nimport './Modal.css';\n\ninterface ModalProps {\n  handleClose: any;\n  children: any;\n  show?: boolean;\n};\n\nconst Modal = (props: ModalProps) => {\n  const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n        {props.children}\n        <a onClick={props.handleClose}>Cancelar</a><br/>\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport Receipt  from '../../db/Receipt';\nimport ReceiptCard from '../../components/receiptcard/ReceiptCard';\n\nimport Modal from '../../components/modal/Modal';\n\ninterface ByMonthReceiptCardProps {\n  title: string;\n  receipts: Receipt[];\n  enableSelection: boolean;\n  receiptsSelected: Map<number, Receipt>;\n  payerNameFiltering: string;\n  onRemove(receiptId: number): void;\n  onSelectionChange(receiptId: number, receipt: Receipt | undefined): void;\n  onSelectAll(receipts: Receipt[]) : void;\n}\n\nconst ByMonthReceiptCard = (props: ByMonthReceiptCardProps) => {\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [modalIsVisible, setModalIsVisible] = useState<boolean>();\n\n  function handleSelectAll() {\n    props.onSelectAll(props.receipts);\n    setModalIsVisible(false);\n  }\n  return (\n    <div className=\"receipts-by-month-container\" key={props.title}> \n      \n      <Modal show={modalIsVisible} handleClose={() => {setModalIsVisible(false)}}>\n        <a onClick={handleSelectAll}>\n          Selecionar todos\n        </a><br/>\n      </Modal>\n\n      <div className=\"receipts-by-month__header\">\n        <div className=\"receipts-by-month__header__left\">\n          <i className={\"fas \" +\n              (collapsed ? \"fa-chevron-right \" : \"fa-chevron-down \")\n            }\n            onClick={() => setCollapsed(!collapsed)}\n          ></i>\n          <span className=\"receipts-by-month__title\">{props.title}</span> \n          <span className=\"receipts-by-month__details\">{props.receipts.length}</span>\n        </div>\n        <div className=\"receipts-by-month__header__right\">\n          <i \n            className=\"fas fa-ellipsis-v receipts-by-month__menu\" \n            onClick={() => setModalIsVisible(true)}></i>\n        </div>\n      </div>\n\n      <div className=\"receipts-by-month__list\">\n      {\n        props.receipts.map((receipt) => {\n          if (collapsed) {\n            return false;\n          }\n  \n          if (props.payerNameFiltering && (!receipt.payerName || !receipt.payerName.includes(props.payerNameFiltering))) {\n            return;\n          }\n\n          return <ReceiptCard\n              receipt={receipt}\n              onRemove={props.onRemove}\n              enableSelection={props.enableSelection}\n              isSelected={props.receiptsSelected.get(receipt.id!) !== undefined}\n              onSelectionChange={(iSelected) => props.onSelectionChange(receipt.id!, iSelected ? receipt : undefined)}\n            />\n        })\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default ByMonthReceiptCard;","import React, { useState, useEffect } from 'react';\n\nimport Receipt  from '../../db/Receipt';\nimport Modal from '../../components/modal/Modal';\n\ninterface ListReceiptCardHeaderProps {\n  isSelectModeOn: boolean;\n  receiptsSelected: Map<number, Receipt>;\n  onClickToEnableSelectMode(): void;\n  onClickToDisableSelectMode(): void;\n  onClickToCloneSelectedReceipts(): void;\n  onClickToDeleteSelectedReceipts(): void;\n  onChangeOfPayerNameToFilter(name: string): void;\n}\n\nconst ListReceiptCardHeader = (props: ListReceiptCardHeaderProps) => {\n  const [pageModalIsVisible, setPageModalIsVisible] = useState<boolean>();\n\n  function handleCloseSelectionMode() {\n    props.onClickToDisableSelectMode();\n  }\n\n  return (\n    <div>\n      <Modal \n        show={pageModalIsVisible} \n        handleClose={() => {setPageModalIsVisible(false)}}>\n        <a onClick={() => {\n            props.onClickToEnableSelectMode();\n            setPageModalIsVisible(false); \n          }}>\n          Selecionar recibos\n        </a>\n        <br/>\n      </Modal>\n\n      {!props.isSelectModeOn && (\n        <header className=\"top-app-bar\">\n          <div className=\"top-app-bar__navigation\">\n            <a>\n              <i className=\"fas fa-home\"></i>\n            </a>\n          </div>\n\n          <div className=\"top-app-bar__title\">\n            Recibos Facil\n          </div>\n          \n          <div className=\"top-app-bar__right-part\">\n            <i className=\"fas fa-ellipsis-v\" onClick={() => setPageModalIsVisible(true)}></i>\n            <input \n                type=\"search\"\n                name=\"search\" \n                placeholder=\"Pesquise por nome\" \n                id=\"search\"\n                className=\"search\"\n                onChange={(e) => props.onChangeOfPayerNameToFilter(e.target.value)}\n                />\n          </div>\n        </header>\n      )}\n\n      {props.isSelectModeOn && (\n        <header className=\"top-app-bar\">\n          <div className=\"top-app-bar__navigation\">\n            <a>\n              <i onClick={handleCloseSelectionMode}\n                className=\"fas fa-times\">\n              </i>\n            </a>\n          </div>\n\n          <div className=\"top-app-bar__title\">\n            {props.receiptsSelected.size === 0 && (\"Selecionar recibos\")}\n            {props.receiptsSelected.size > 0 && (\n              props.receiptsSelected.size\n            )}\n            \n          </div>\n          \n          <div className=\"top-app-bar__right-part\">\n            {props.receiptsSelected.size > 0 && (\n              <div>\n                <i className=\"fas fa-clone\" onClick={props.onClickToCloneSelectedReceipts}></i>\n                <i className=\"fas fa-trash\" onClick={props.onClickToDeleteSelectedReceipts}></i>\n              </div>\n            )}\n          </div>\n        </header>\n      )}\n    </div>\n  )\n}\n\nexport default ListReceiptCardHeader;","import React, { useState, useEffect } from 'react';\n\nimport './ListReceiptCard.css';\n\nimport Receipt  from '../../db/Receipt';\nimport Modal from '../../components/modal/Modal';\nimport friendlyYearAndMonthAsText from '../../db/FriendlyLiteralDate';\nimport ByMonthReceiptCard from './ByMonthReceiptCard';\nimport ListReceiptCardHeader from './ListReceiptCardHeader';\n\nconst ReceiptCards = (props: any) => {\n  const database = props.database;\n  const [receiptsByMonth, setReceiptsByMonth] = useState<Map<string, [Receipt]>>();\n  const [receiptsSelected, setReceiptSelected] = useState<Map<number, Receipt>>(new Map());\n\n  const [selectMode, setSelectMode] = useState<boolean>(false);\n  \n  function handleSelectAll(receipts: Receipt[]) {\n    const a = new Map(receiptsSelected);\n    receipts.map((receipt) => {\n      a.set(receipt.id!, receipt);\n    })\n    setReceiptSelected(a);\n    setSelectMode(true);\n  }\n\n  function handleSelectionChange(receiptId: number, receipt: Receipt | undefined) {\n    if (receipt) {\n      setReceiptSelected(new Map(receiptsSelected).set(receiptId, receipt));\n    } else {\n      const a = new Map(receiptsSelected);\n      a.delete(receiptId);\n      setReceiptSelected(a);\n    }\n  }\n\n  function handleCloseSelectionMode() {\n    setSelectMode(false);\n    setReceiptSelected(new Map());\n  }\n\n  function handleDeleteSelection() {\n    const answer = window.confirm(`Confirma a deleção de ${receiptsSelected.size} recibos?`);\n    if (answer === true) {\n      database.batchDelete(receiptsSelected.keys())\n        .then(async() => {\n          fetchReceipts();\n          handleCloseSelectionMode();\n        })\n        .catch((exception: any) => {\n          alert(\"Não foi possível deletar os recibos por um erro inesperado.\");\n          console.log(exception);\n        });\n    }\n  }\n\n  function handleCloneSelection() {\n    const receipts = receiptsSelected.values();\n    const answer = window.confirm(`Confirma a duplicação de ${receiptsSelected.size} recibos?`);\n    if (answer === true) {\n      const receiptsToClone: Receipt[] = [];\n      let nextReceipt = receipts.next();\n      while (!nextReceipt.done) {\n        const receipt: Receipt = nextReceipt.value;\n        //remove date to show clones at the top\n        receipt.date = undefined;\n        receiptsToClone.push(receipt)\n        nextReceipt = receipts.next();\n      }\n  \n      database.arrayAdd(receiptsToClone)\n        .then(async() => {\n          fetchReceipts();\n          handleCloseSelectionMode();\n        })\n        .catch((exception: any) => {\n          alert(\"Não foi possível clonar os recibo selecionados.\");\n          console.log(exception);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchReceipts();\n  }, []);\n  \n  async function fetchReceipts() {\n    const receipts: Receipt[] = await database.getAllReceipts();\n    receipts.sort((r1, r2) => r2.dateAsTimeStamp - r1.dateAsTimeStamp)\n\n    const rByMonth = receipts.reduce((byMonth, r) => {\n      const array: [Receipt] = byMonth.get(r.date) || [];\n      array.push(r);\n      byMonth.set(r.date, array);\n      return byMonth;\n    }, new Map())\n\n    setReceiptsByMonth(rByMonth)\n  };\n  const[payerNameFiltering, setPayerNameFiltering] = useState(\"\");\n\n  function handleRemoveReceipt(id: number) {\n    // TODO GOOD CASE FOR UNIT TEST, SUCCESS MEAN DELETED AND NOT FOUND??\n    database.deleteReceipt(id)\n      .then(async() => {\n        fetchReceipts();\n      })\n      .catch((exception: any) => {\n        alert(\"Não foi possível deletar o recibo por um erro inesperado.\");\n        console.log(exception);\n      })\n  }\n\n  return (\n    <div className=\"receipts-card\">\n\n      <ListReceiptCardHeader\n        isSelectModeOn={selectMode}\n        onChangeOfPayerNameToFilter={setPayerNameFiltering}\n        onClickToCloneSelectedReceipts={handleCloneSelection}\n        onClickToDeleteSelectedReceipts={handleDeleteSelection}\n        onClickToDisableSelectMode={handleCloseSelectionMode}\n        onClickToEnableSelectMode={() => setSelectMode(true)} \n        receiptsSelected={receiptsSelected}\n      />\n\n      {\n        receiptsByMonth && [...receiptsByMonth.keys()].map((keyName, index) => {\n\n          const receipts: Receipt[] = receiptsByMonth.get(keyName) || [];\n          const friendlyTitle = friendlyYearAndMonthAsText(keyName) || \"Área de trabalho (sem data ou clonado)\";\n          \n          return (\n            <ByMonthReceiptCard\n              title={friendlyTitle}\n              receipts={receipts}\n              enableSelection={selectMode}\n              receiptsSelected={receiptsSelected}\n              payerNameFiltering={payerNameFiltering}\n              onRemove={handleRemoveReceipt}\n              onSelectionChange={handleSelectionChange}\n              onSelectAll={handleSelectAll}\n            />\n          )\n        })\n      } \n    </div>\n  );\n}\n\nexport default ReceiptCards;","class Receipt {\n  id: number | undefined;\n  payerName?: string;\n  payerAddress?: string;\n  referrerTo?: string;\n  paidValue?: number;\n  paidValueAsText?: string;\n  date?: Date;\n  payeeName?: string;\n  payeeCpfOrRg?: string;\n  payeeAddress?: string;\n\n  get dateAsTimeStamp() {\n    if (this.date) {\n      const d: Date = new Date(this.date);\n      return d.getTime();\n    }\n    return 9007199254740991;\n  }\n}\n\n\nexport default Receipt;","import React, { useState, useEffect } from 'react';\n\nimport './NewEditReceipt.css';\n\nimport Receipt from '../../db/Receipt'\nimport Database from '../../db/Database';\n\ninterface NewEditReceiptProps {\n  receiptId?: number,\n  toClone?: boolean\n  database: Database\n}\n\nconst NewEditReceipt = (props: NewEditReceiptProps) => {\n\n  const database = props.database;\n  const [receipt, setReceipt] = useState<any>(new Receipt());\n  const [screenMode, setScreenMode] = useState(\"create\")\n\n  useEffect(() => {\n    if (props.receiptId) {\n      if (props.toClone) {\n        setScreenMode(\"clone\");\n      } else {\n        setScreenMode(\"edit\");\n      }\n\n      database.getReceipt(props.receiptId)\n        .then((receipt) => {\n          setReceipt(receipt);\n        })\n        .catch((exception) => {\n          alert(\"Não foi possível carregar o recibo.\");\n          console.log(exception);\n        });\n    } else {\n      setScreenMode(\"create\");\n    }\n  }, [props.receiptId]);\n  \n  const cancel = function() {\n    window.location.hash = \"#receipt-list\";\n  };\n\n  const done = async function() {\n    const receiptModel = new Receipt();\n    \n    receiptModel.payerName = receipt.payerName;\n    receiptModel.payerAddress = receipt.payerAddress;\n    receiptModel.referrerTo = receipt.referrerTo;\n    receiptModel.paidValue = receipt.paidValue;\n    receiptModel.paidValueAsText = receipt.paidValueAsText;\n    receiptModel.date = receipt.date;\n    receiptModel.payeeName = receipt.payeeName;\n    receiptModel.payeeCpfOrRg = receipt.payeeCpfOrRg;\n    receiptModel.payeeAddress = receipt.payeeAddress;\n\n    if (screenMode === \"clone\") {\n      await database.addReceipt(receiptModel);\n    }\n    if (screenMode === \"edit\") {\n      await database.updateReceipt(receiptModel, props.receiptId!);\n    }\n    if (screenMode === \"create\") {\n      await database.addReceipt(receiptModel);\n    }\n    window.location.hash = \"#receipt-list\";\n  };\n\n  const handleChange = function(e: any) {\n    const {name, value} = e.target;\n\n    setReceipt((prevState: any) => {\n      let receipt = { ...prevState }; \n      receipt[name] = value;\n      return receipt;\n    })\n  };\n\n  return (\n    <div className=\"new-receipt\">\n      <header className=\"top-app-bar\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={() => (window.history.back())}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          {screenMode===\"create\" && \"Criando\"}\n          {screenMode===\"edit\" && \"Editando\"}\n          {screenMode===\"clone\" && \"Clonando\"}\n        </div>\n\n        {screenMode==\"create\" && \n        <div className=\"top-app-bar__right-part\">\n          <a onClick={() => cancel()}>\n            <i className=\"fas fa-times top-app-bar__icon\"></i>\n          </a>\n        </div>}\n      </header>\n\n      <form className=\"receipt-form\" name=\"receipt-form\" \n        action=\"javascript:void(0);\"\n        noValidate >\n        {/* <label htmlFor={\"receiptNumber\"}>Numero</label>\n        <input \n          type=\"text\" \n          name={\"receiptNumber\"} \n          placeholder=\"\" \n          id={\"receiptNumber\"}\n          /> */}\n\n        <div className=\"receipt-payer\">\n          \n          <h5>Recebido de</h5>\n\n          <label htmlFor={\"payerName\"}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerName\"} \n            placeholder=\"\" \n            id={\"payerName\"}\n            value={receipt.payerName} \n            onChange={handleChange}\n            autoFocus\n            />\n\n          <label htmlFor={\"referrerTo\" }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo\" } \n            placeholder=\"\" \n            id={\"referrerTo\" }\n            value={receipt.referrerTo} \n            onChange={handleChange}\n            />\n\n          <label htmlFor={\"paidValue\"}>Valor</label>\n          <input \n            className=\"u-full-width\" \n            type=\"number\"   \n            name={\"paidValue\"} \n            placeholder=\"\" \n            id={\"paidValue\"}\n            value={receipt.paidValue} \n            onChange={handleChange}\n            />\n          </div>\n\n          <label htmlFor={\"payerAddress\"}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress\"} \n            placeholder=\"\" \n            id={\"payerAddress\"}\n            value={receipt.payerAddress} \n            onChange={handleChange}\n            />\n          <div className=\"receipt-header\">\n          \n          {/* <label htmlFor={\"paidValueAsText\"}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText\"} \n            placeholder=\"\" \n            id={\"paidValueAsText\"}\n            value={receipt.paidValueAsText} onChange={(e) => receipt.paidValueAsText = e.target.value}/> */}\n\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date\"}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"date\"  \n            name={\"date\"} \n            placeholder=\"\" \n            id={\"date\"}\n            value={receipt.date} \n            onChange={handleChange}\n            />\n        </div>\n\n        \n        <div className=\"receipt-payee top-padding\">\n          <h5>Recebido por</h5>\n          <div className=\"emitentCpf\">\n            <div>\n              <label htmlFor={\"payeeName\"}>Emitente</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\" \n                name={\"payeeName\"} \n                placeholder=\"\" \n                id={\"payeeName\"}\n                value={receipt.payeeName}\n                onChange={handleChange}\n                />\n            </div>\n            <div>\n              <label htmlFor={\"payeeCpfOrRg\"}>CPF/RG</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\"   \n                name={\"payeeCpfOrRg\"} \n                placeholder=\"\" \n                id={\"payeeCpfOrRg\"}\n                value={receipt.payeeCpfOrRg} \n                onChange={handleChange}\n                />\n            </div>\n          </div>\n\n          <label htmlFor={\"payeeAddress\"}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeAddress\"} \n            placeholder=\"\" \n            id={\"payeeAddress\"}\n            value={receipt.payeeAddress} \n            onChange={handleChange}\n            />\n\n          {/* <label htmlFor={\"payeeSignature\"}>Assinatura</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeSignature\"} \n            placeholder=\"\" \n            id={\"payeeSignature\"}\n            /> */}\n        </div>\n\n        <div className=\"action-bar\">\n          <button onClick={() => done()}>\n            Pronto\n          </button>\n        </div>\n      </form>\n\n    </div>\n  );\n}\n\nexport default NewEditReceipt;","import React from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './Receipt.css';\n\nconst Receipt = observer((props) => {\n\n    return (\n      <div className=\"receipt-container\">\n        \n        <div className=\"receipt-header\">\n          <span>RECIBO</span>\n        \n          <div>\n            <label htmlFor={\"receiptNumber-\" + props.index}>Numero</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\" \n              name={\"receiptNumber-\" + props.index} \n              placeholder=\"\" \n              id={\"receiptNumber-\" + props.index}\n              />\n          </div>\n          \n          <div>\n            <label htmlFor={\"paidValue-\" + props.index}>Valor</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\"   \n              name={\"paidValue-\" + props.index} \n              placeholder=\"\" \n              id={\"paidValue-\" + props.index}\n              value={props.receipt.paidValue} onChange={(e) => props.receipt.paidValue = e.target.value}/>\n          </div>\n        </div>\n\n        <div className=\"receipt-payer\">\n          <label htmlFor={\"payer-\" + props.index}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payer-\" + props.index} \n            placeholder=\"\" \n            id={\"payer-\" + props.index}\n            value={props.receipt.payer} onChange={(e) => props.receipt.payer = e.target.value}/>\n\n          <label htmlFor={\"payerAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payerAddress-\" + props.index}\n            value={props.receipt.payerAddress} onChange={(e) => props.receipt.payerAddress = e.target.value}/>\n          \n          <label htmlFor={\"paidValueAsText-\" + props.index}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText-\" + props.index} \n            placeholder=\"\" \n            id={\"paidValueAsText-\" + props.index}\n            value={props.receipt.paidValueAsText} onChange={(e) => props.receipt.paidValueAsText = e.target.value}/>\n\n          <label htmlFor={\"referrerTo-\" + props.index }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo-\" + props.index } \n            placeholder=\"\" \n            id={\"referrerTo-\" + props.index }\n            value={props.receipt.referrerTo} onChange={(e) => props.receipt.referrerTo = e.target.value}/>\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date-\" + props.index}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"date-\" + props.index} \n            placeholder=\"\" \n            id={\"date-\" + props.index}\n            value={props.date} \n            readOnly/>\n        </div>\n\n        <div className=\"receipt-payee\">\n          <div className=\"emitentCpf\">\n            <div>\n              <label htmlFor={\"payee-\" + props.index}>Emitente</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\" \n                name={\"payee-\" + props.index} \n                placeholder=\"\" \n                id={\"payee-\" + props.index}\n                value={props.payee}\n                readOnly/>\n            </div>\n            <div>\n              <label htmlFor={\"payeeCpfOrRg-\" + props.index}>CPF/RG</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\"   \n                name={\"payeeCpfOrRg-\" + props.index} \n                placeholder=\"\" \n                id={\"payeeCpfOrRg-\" + props.index}\n                value={props.payeeCpfOrRg} \n                readOnly/>\n            </div>\n          </div>\n\n          <label htmlFor={\"payeeAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payeeAddress-\" + props.index}\n            value={props.payeeAddress} \n            readOnly/>\n\n          <label htmlFor={\"payeeSignature-\" + props.index}>Assinatura</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeSignature-\" + props.index} \n            placeholder=\"\" \n            id={\"payeeSignature-\" + props.index}\n            />\n        </div>\n      </div>\n    );\n  }\n)\nexport default Receipt;","import React from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './Receipt.css';\n\nconst ReceiptStub = observer((props) => {\n\n    return (\n      <div className=\"receipt-container\">\n        \n        <div className=\"receipt-header\">\n          <div>\n            <label htmlFor={\"receiptNumber-\" + props.index}>Numero</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\" \n              name={\"receiptNumber-\" + props.index} \n              placeholder=\"\" \n              id={\"receiptNumber-\" + props.index}\n              />\n          </div>\n          \n          <div>\n            <label htmlFor={\"paidValue-\" + props.index}>Valor</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\"   \n              name={\"paidValue-\" + props.index} \n              placeholder=\"\" \n              id={\"paidValue-\" + props.index}\n              value={props.receipt.paidValue} onChange={(e) => props.receipt.paidValue = e.target.value}/>\n          </div>\n        </div>\n\n        <div className=\"receipt-payer\">\n          <label htmlFor={\"payer-\" + props.index}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payer-\" + props.index} \n            placeholder=\"\" \n            id={\"payer-\" + props.index}\n            value={props.receipt.payer} onChange={(e) => props.receipt.payer = e.target.value}/>\n\n          <label htmlFor={\"payerAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payerAddress-\" + props.index}\n            value={props.receipt.payerAddress} onChange={(e) => props.receipt.payerAddress = e.target.value}/>\n          \n          <label htmlFor={\"paidValueAsText-\" + props.index}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText-\" + props.index} \n            placeholder=\"\" \n            id={\"paidValueAsText-\" + props.index}\n            value={props.receipt.paidValueAsText} onChange={(e) => props.receipt.paidValueAsText = e.target.value}/>\n\n          <label htmlFor={\"referrerTo-\" + props.index }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo-\" + props.index } \n            placeholder=\"\" \n            id={\"referrerTo-\" + props.index }\n            value={props.receipt.referrerTo} onChange={(e) => props.receipt.referrerTo = e.target.value}/>\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date-\" + props.index}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"date-\" + props.index} \n            placeholder=\"\" \n            id={\"date-\" + props.index}\n            value={props.date} \n            readOnly/>\n        </div>\n\n      </div>\n    );\n  }\n)\nexport default ReceiptStub;","import React, { useState, useEffect } from 'react';\nimport Receipt from '../../components/receipt/Receipt';\nimport ReceiptStub from '../../components/receipt/ReceiptStub';\nimport Database from '../../db/Database';\n\nimport './ReceiptsToPrint.css';\n\ninterface ReceiptsToPrintProps {\n  database: Database\n}\n\nconst ReceiptsToPrint = (props: ReceiptsToPrintProps) => {\n  const database = props.database;\n  const [receipts, setReceipts] = useState<any[]>([]);\n\n  useEffect(() => {\n    async function fetchReceipts() {\n      const receipts = await database.getAllReceipts();\n      setReceipts(receipts);\n    };\n    fetchReceipts();\n  }, []);\n\n  return (\n    <div className=\"receipt-to-print-list\">\n\n      <header className=\"top-app-bar no-printable\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={() => (window.history.back())}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          Imprimir\n        </div>\n      </header>\n      \n      <div className=\"action-top-bar\">\n        <button className=\"button-primary no-printable\" onClick={window.print}>\n          Imprimir\n        </button>\n      </div>\n      \n      <div className=\"\">\n        <h2>Canhotos</h2>\n        {receipts.map((receipt) => (\n          <div key={receipt.id}>\n            <ReceiptStub\n              key={receipt.id}\n              index={receipt.id}\n              payee={receipt.payeeName}\n              payeeCpfOrRg={receipt.payeeCpfOrRg}\n              payeeAddress={receipt.payeeAddress}\n              date={receipt.date}\n              receipt={receipt}\n            />\n          </div>\n        ))} \n\n        <h2>Recibos</h2>\n        {receipts.map((receipt) => (\n          <div key={receipt.id}>\n            <Receipt\n              key={receipt.id}\n              index={receipt.id}\n              payee={receipt.payeeName}\n              payeeCpfOrRg={receipt.payeeCpfOrRg}\n              payeeAddress={receipt.payeeAddress}\n              date={receipt.date}\n              receipt={receipt}\n            />\n          </div>\n        ))} \n      </div>\n    </div>\n  );\n}\n\nexport default ReceiptsToPrint;","import Receipt  from './Receipt';\n\nclass Database {\n  \n  #db: any;\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const dbOpenReq = indexedDB.open('EasyReceipts', 1);\n  \n      dbOpenReq.onerror = (err) => {\n        console.error('error creating/connecting to db', err);\n        reject('Failed to connected/create/update DB');\n      };\n  \n      dbOpenReq.onsuccess = (event: any) => {\n        this.#db = event.target?.result;\n        console.info('connected successfuly to DB')\n        resolve(\"Connected\");\n      };\n  \n      dbOpenReq.onupgradeneeded = (event: any) => {\n        this.#db = event.target?.result;\n  \n        this.#db.createObjectStore('receipt', {\n          autoIncrement: true\n        });\n      };\n    });\n  }\n\n  addReceipt(receipt: Receipt) {\n    return new Promise<void>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt'], \"readwrite\");\n\n      transaction.oncomplete = function(event: any) {\n        console.log(\"Transaction do add is done\", event);\n      };\n\n      transaction.onerror = function(event: any) {\n        console.log(\"Transaction to add erros\", event);\n        reject('Failed to add');\n      };\n\n      var objectStore = transaction.objectStore('receipt');\n      var request = objectStore.add(receipt);\n      request.onsuccess = function(event: any) {\n        console.log(\"Receipt created\", event);\n        resolve();\n      };\n    });\n  };\n\n\n  updateReceipt(receipt: Receipt, id: number) {\n    return new Promise<void>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt'], \"readwrite\");\n\n      transaction.oncomplete = function(event: any) {\n        console.log(\"Transaction do update is done\", event);\n      };\n\n      transaction.onerror = function(event: any) {\n        console.log(\"Transaction to update has erros\", event);\n        reject('Failed to update');\n      };\n\n      var objectStore = transaction.objectStore('receipt');\n      var request = objectStore.put(receipt, id);\n      request.onsuccess = function(event: any) {\n        console.log(\"Receipt created\", event);\n        resolve();\n      };\n    });\n  }\n\n  deleteReceipt(id: number) {\n    return new Promise<void>((resolve, reject) => {\n      var request = this.#db.transaction(['receipt'], \"readwrite\")\n          .objectStore('receipt')\n          .delete(id);\n\n      request.onsuccess = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      request.onerror = function(event: any) {\n        console.error('Error on deleting receipt');\n        reject();\n      };\n    })\n  };\n\n  batchDelete(ids: IterableIterator<number>) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      let nextId = ids.next();\n      while (!nextId.done) {\n        transaction.objectStore('receipt').delete(nextId.value);;\n        nextId = ids.next();\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on deleting batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  batchAdd(receipts: IterableIterator<Receipt>) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      let nextReceipt = receipts.next();\n      while (!nextReceipt.done) {\n        transaction.objectStore('receipt').add(nextReceipt.value);;\n        nextReceipt = receipts.next();\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on adding batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  arrayAdd(receipts: Receipt[]) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      for (let i = 0; i < receipts.length; i++) {\n        transaction.objectStore('receipt').add(receipts[i]);;\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on adding batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  //TODO: ADD class type RECEIPT when returning a receipt\n  getReceipt(id: number) {\n    return new Promise<Receipt>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt']);\n      var objectStore = transaction.objectStore('receipt');\n      var request = objectStore.get(id);\n      request.onerror = function(event: any) {\n        console.error('Error on fiding receipt');\n        reject();\n      };\n      request.onsuccess = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        if (!request.result) {\n          console.warn('Receipt not found');\n          resolve(new Receipt());\n        }\n        resolve(request.result);\n      };\n    })\n  };\n\n  // TODO RETURN RECEIPT OBJECT LIST\n  getAllReceipts() {\n    return new Promise<Receipt[]>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt']);\n      var objectStore = transaction.objectStore('receipt');\n      var receipts: Receipt[] = [];\n\n      objectStore.openCursor().onsuccess = function(event: any) {\n        var cursor = event.target.result;\n        if (cursor) {\n          const receiptModel = new Receipt();\n    \n          receiptModel.payerName = cursor.value.payerName;\n          receiptModel.payerAddress = cursor.value.payerAddress;\n          receiptModel.referrerTo = cursor.value.referrerTo;\n          receiptModel.paidValue = cursor.value.paidValue;\n          receiptModel.paidValueAsText = cursor.value.paidValueAsText;\n          receiptModel.date = cursor.value.date;\n          receiptModel.payeeName = cursor.value.payeeName;\n          receiptModel.payeeCpfOrRg = cursor.value.payeeCpfOrRg;\n          receiptModel.payeeAddress = cursor.value.payeeAddress;\n          receiptModel.id = cursor.key;\n          \n          receipts.push(receiptModel);\n          cursor.continue();\n        }\n        else {\n          console.log(\"No more entries!\");\n          resolve(receipts);\n        }\n      };\n    })\n  }\n\n  db() {\n    return this.#db;\n  }\n}\n\n//await database.connect();\nexport default Database;\n\n","import React, {useState, useEffect} from 'react';\nimport './css/Normalize.css';\nimport './css/SkeletonCustomizedByMe.css';\nimport './css/Common.css';\nimport './css/App.css';\n\nimport ReceiptCards from './pages/ListReceiptCards/ListReceiptCard';\nimport NewEditReceipt from './pages/NewEditReceipt/NewEditReceipt';\nimport ReceiptsToPrint from './pages/ReceiptsToPrint/ReceiptsToPrint';\n\nimport Database from './db/Database';\n\ndeclare global {\n  interface Window { Database: any; }\n}      \n\nfunction pathSplitted() {\n  const splitted = window.location.hash.substr(1).split('/');\n  return {\n    first: splitted[0] || '',\n    second: splitted[1] || ''\n  }\n}\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(pathSplitted().first);\n  const [identifier, setIdentifier] = useState(parseInt(pathSplitted().second));\n  function locationHashChanged() {\n    setCurrentPage(pathSplitted().first);\n    setIdentifier(parseInt(pathSplitted().second));\n  }\n  window.onhashchange = locationHashChanged;\n\n  const [database, setDatabase] = useState<Database>(new Database);\n  \n  useEffect(() => {\n    async function connectDB() {\n      await database.connect();\n      setLoading(false);\n\n      window.Database = database;\n    };\n    connectDB();\n  }, []);\n\n  return (\n    <div className=\"rootApp\">\n      <main>\n        {\n          (() => {\n\n            if (loading) {\n              return <span>Loading</span>\n            }\n\n            if (!currentPage ||  currentPage === 'receipt-list') {\n              return <ReceiptCards \n                database={database}>\n              </ReceiptCards>\n            }\n\n            if (currentPage === 'receipt-clone' && identifier) {\n              return <NewEditReceipt\n                receiptId={identifier}\n                database={database}\n                toClone\n              />\n            }\n\n            if (currentPage === 'receipt' && identifier) {\n              return <NewEditReceipt\n                receiptId={identifier}\n                database={database}\n              />\n            }\n\n            if (currentPage === 'receipt') {\n              return <NewEditReceipt\n                database={database}\n              />\n            }\n\n            if (currentPage === 'receipts-to-print') {\n              return <ReceiptsToPrint \n                database={database}/>\n            }\n\n            return \"NOTFOUND\"\n          })()\n        }\n      </main>\n\n      <footer className=\"bottom-app-bar\">\n        <a href=\"#receipt-list\" className=\"bottom-app-bar_icon\">\n            <i className={\"fas fa-list \" \n            + (currentPage == 'receipt-list' || currentPage == '' ? 'opacity-half' : '')}></i>\n            <span>Lista</span>\n        </a>\n        <a href=\"#receipt\" className=\"bottom-app-bar_icon\">\n          <i className={\"fas fa-plus-square \" + (currentPage == 'receipt' ? 'opacity-half' : '')}></i>\n          <span>Novo</span>\n        </a>\n        <a href=\"#receipts-to-print\" className=\"bottom-app-bar_icon\">\n          <i className={\"fas fa-print  \" + (currentPage == 'receipts-to-print' ? 'opacity-half' : '')}></i>\n          <span>Imprimir</span>\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}