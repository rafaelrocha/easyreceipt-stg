{"version":3,"sources":["db/FriendlyLiteralDate.tsx","components/receiptcard/ReceiptCard.tsx","components/modal/Modal.tsx","pages/ListReceiptCards/ByMonthReceiptCard.tsx","pages/ListReceiptCards/ListReceiptCardHeader.tsx","pages/ListReceiptCards/ListReceiptCardPage.tsx","db/Receipt.tsx","pages/NewEditReceipt/NewEditReceiptPage.tsx","utils/MoneyToWords.tsx","db/MultiEditionSettings.tsx","components/receipt/Receipt.js","components/receipt/ReceiptStub.js","pages/ReceiptsToPrint/ReceiptsToPrintPage.tsx","pages/MultiEditionSettings/MultiEditionSettingForm.tsx","pages/MultiEditionSettings/MultiEditionSettingsPage.tsx","components/receiptform/ReceiptFormInput.tsx","components/receiptform/ReceiptForm.tsx","pages/MultiEdition/MultiEditionPage.tsx","pages/Settings/SettingsPage.tsx","db/UserSetting.tsx","db/DatabaseExampleRows.tsx","db/Database.tsx","App.tsx","index.tsx"],"names":["monthAsTextMap","dateToYYYYMMDD","date","month","getUTCMonth","day","getDate","year","getUTCFullYear","length","join","friendlyYearAndMonthAsText","dateAsText","Date","literalMonth","ReceiptCard","observer","props","className","receipt","payerName","onClick","onSelectionChange","isSelected","enableSelection","width","height","viewBox","d","referrerTo","paidValue","href","id","window","confirm","onRemove","Modal","showHideClassName","show","children","handleClose","ByMonthReceiptCard","useState","collapsed","setCollapsed","modalIsVisible","setModalIsVisible","key","title","onSelectAll","receipts","map","payerNameFiltering","includes","undefined","receiptsSelected","get","iSelected","ListReceiptCardHeader","pageModalIsVisible","setPageModalIsVisible","onClickToEnableSelectMode","isSelectModeOn","placeholder","type","onChange","e","onChangeOfPayerNameToFilter","target","value","xmlns","fill","stroke","onClickToDisableSelectMode","size","onClickToPrintSelectedReceipts","onClickToEditSelectedReceipts","onClickToCloneSelectedReceipts","onClickToDeleteSelectedReceipts","ReceiptCardsPage","database","receiptsByMonth","setReceiptsByMonth","Map","setReceiptSelected","selectMode","setSelectMode","handleSelectAll","a","set","handleSelectionChange","receiptId","delete","handleCloseSelectionMode","fetchReceipts","getAllReceipts","sort","r1","r2","dateAsTimeStamp","rByMonth","reduce","byMonth","r","array","yearAndMonth","push","useEffect","setPayerNameFiltering","handleRemoveReceipt","deleteReceipt","then","catch","exception","alert","console","log","values","receiptsToClone","nextReceipt","next","done","arrayAdd","batchDelete","keys","i","idNext","receiptIds","Array","location","hash","JSON","stringify","handleClickPrint","handleClickToEditMultiple","keyName","index","friendlyTitle","Receipt","payerAddress","payeeName","payeeCpfOrRg","payeeAddress","this","getTime","substr","NewEditReceiptPage","setReceipt","screenMode","setScreenMode","toClone","getReceipt","receiptModel","addReceipt","updateReceipt","handleChange","name","prevState","history","back","action","noValidate","htmlFor","autoFocus","writtenNumber","require","moneyToWords","number","numberConverted","n","parseFloat","error","Number","lang","isFloat","decimalPart","decimalAsInteger","Field","Setting","payee","ReceiptStub","ReceiptsToPrintPage","setReceipts","getReceipts","print","MultiEditionSettingsForm","fieldsArray","label","field","PayerName","ReferrerTo","PaidValue","PayerAddress","PayeeName","PayeeCpfOrRg","stepSetting","checked","fieldsSettings","getFieldSetting","otherSetting","disabled","MultiEditionSettings","fieldSettingsMap","ReceiptNumber","None","ToIdentify","ToUpdate","setting","fieldsToIdentify","forEach","fieldsToUpdate","fieldSettings","multiEditionSettings","MultiEditionSettingsPage","setMultiEditionSettings","step","setStep","setFieldSetting","newMESettings","Instance","handleOnChange","getMultiEditionSettings","saveMultiEditionSettings","nextPageHash","err","ReceiptFormInput","readonly","ReceiptForm","buildAndSetMapFieldsData","mapFieldsData","setMapFieldsData","getField","fieldData","MultiEditionPage","loading","setLoading","nextIndex","currentIndex","finally","SettingsPage","UserSetting","dateCurrentMonth","setDate","dateLastMonth","getMonth","setMonth","setFullYear","getFullYear","forCurrentMonth","forLastMonth","receiptsOfCurrentMonth","paidValueAsText","receiptsOfLastMonth","receiptAsExamples","concat","Database","Promise","resolve","reject","dbOpenReq","indexedDB","open","onerror","onsuccess","event","result","info","onupgradeneeded","createObjectStore","autoIncrement","createIndex","unique","keyPath","transaction","objectStore","add","table","changes","request","apply","fetchById","userSettingME","executeWithinTransaction","userSetting","from","put","parse","Error","ids","nextId","oncomplete","warn","openCursor","cursor","continue","pathSplitted","params","splitted","split","path","pathId","secondSplit","hk","temp","queryString","App","currentPage","setCurrentPage","parseInt","identifier","setIdentifier","hashQueryString","setHashQueryString","onhashchange","object","connect","connectDB","current","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2c959ed.chunk.js","sourcesContent":["const monthAsTextMap:any = {\n  0: 'Janeiro',\n  1: 'Fevereiro',\n  2: 'Março',\n  3: 'Abril',\n  4: 'Maio',\n  5: 'Junho',\n  6: 'Julho',\n  7: 'Agosto',\n  8: 'Setembro',\n  9: 'Outubro',\n  10: 'Novembro',\n  11: 'Dezembro'\n}\n\n// Formated as 2021-08-20\nfunction friendlyYearAndMonthAsText(dateAsText: string) {\n  if (!dateAsText) {\n    return undefined;\n  }\n\n  const date = new Date(dateAsText);\n  const year = date.getUTCFullYear();\n  const literalMonth = monthAsTextMap[date.getUTCMonth()];\n  if ((new Date()).getUTCFullYear() === year) {\n    return literalMonth;\n  } else {\n    return literalMonth + ' de ' + year;\n  }\n}\n\nfunction dateToYYYYMMDD(date: Date) {\n  let month = '' + (date.getUTCMonth() + 1);\n  let day = '' + date.getDate();\n  let year = date.getUTCFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nexport {dateToYYYYMMDD}\nexport default friendlyYearAndMonthAsText;","import React, { useState } from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './ReceiptCard.css';\nimport Receipt from '../../db/Receipt';\n\ninterface ReceiptCardInterface {\n  receipt: Receipt;\n  enableSelection: boolean;\n  isSelected: boolean;\n  onRemove (receiptId: number): void;\n  onSelectionChange (isSelected: boolean): void;\n}\n\nconst ReceiptCard = observer((props: ReceiptCardInterface) => {\n\n    return (\n      <div className=\"receipt-card\">\n\n        <div className=\"receipt-card__header\">\n          <span className=\"receipt-card__title\">{props.receipt.payerName || \"...\"}</span>\n\n          <div className=\"receipt-card__check_container\">\n            <div className=\"receipt-card__check\" \n            onClick={() => props.onSelectionChange(!props.isSelected)}>\n              {props.enableSelection && (<svg width=\"24px\" height=\"24px\"  \n                viewBox=\"0 0 24 24\"\n                className=\"receipt-card__check\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"></path>\n              </svg>)}\n\n              {props.isSelected && (<svg width=\"24px\" height=\"24px\"\n                viewBox=\"0 0 24 24\"\n                className=\"receipt-card__check\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\">\n                </path>\n              </svg>)}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"receipt-card__content\">\n          <span>{props.receipt.referrerTo || \"...\"}</span>\n          \n        </div>\n\n        <div className=\"receipt-card__bottom\">\n          <div className=\"receipt-card__price\">\n            <span>R$ {props.receipt.paidValue || \"?\"}</span>\n          </div>\n\n          <div className=\"line-separator\"></div>\n\n          <div className=\"receipt-card__action-bar\">\n            <a className=\"receipt-card__button\" href={\"#receipt/\" + props.receipt.id}>\n              <i className=\"fas fa-edit\"></i>\n            </a>\n            <a className=\"receipt-card__button\" href={\"#receipt-clone/\" + props.receipt.id}>\n              <i className=\"fas fa-clone\"></i>\n            </a>\n            <a className=\"receipt-card__button\" onClick={() => {\n              const answer = window.confirm(\"Realmente deseja remover esse recibo?\");\n              if (answer === true) {\n                props.onRemove(props.receipt.id!)};\n              }\n            }>\n              <i className=\"fas fa-trash\"></i>\n            </a>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n)\nexport default ReceiptCard;","import React from 'react';\nimport './Modal.css';\n\ninterface ModalProps {\n  handleClose: any;\n  children: any;\n  show?: boolean;\n};\n\nconst Modal = (props: ModalProps) => {\n  const showHideClassName = props.show ? \"modal-custom\" : \"modal-custom hidden\";\n\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n        {props.children}\n        <a onClick={props.handleClose}>Cancelar</a>\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport Receipt  from '../../db/Receipt';\nimport ReceiptCard from '../../components/receiptcard/ReceiptCard';\n\nimport Modal from '../../components/modal/Modal';\n\ninterface ByMonthReceiptCardProps {\n  title: string;\n  receipts: Receipt[];\n  enableSelection: boolean;\n  receiptsSelected: Map<number, Receipt>;\n  payerNameFiltering: string;\n  onRemove(receiptId: number): void;\n  onSelectionChange(receiptId: number, receipt: Receipt | undefined): void;\n  onSelectAll(receipts: Receipt[]) : void;\n}\n\nconst ByMonthReceiptCard = (props: ByMonthReceiptCardProps) => {\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [modalIsVisible, setModalIsVisible] = useState<boolean>();\n\n  function handleSelectAll() {\n    props.onSelectAll(props.receipts);\n    setModalIsVisible(false);\n  }\n  return (\n    <div className=\"receipts-by-month-container\" key={props.title}> \n      \n      <Modal show={modalIsVisible} handleClose={() => {setModalIsVisible(false)}}>\n        <a onClick={handleSelectAll}>\n          Selecionar todos\n        </a>\n      </Modal>\n\n      <div className=\"receipts-by-month__header\">\n        <div className=\"receipts-by-month__header__left\">\n          <i className={\"fas \" +\n              (collapsed ? \"fa-chevron-right \" : \"fa-chevron-down \")\n            }\n            onClick={() => setCollapsed(!collapsed)}\n          ></i>\n          <span className=\"receipts-by-month__title\">{props.title}</span> \n          <span className=\"receipts-by-month__details\">{props.receipts.length}</span>\n        </div>\n        <div className=\"receipts-by-month__header__right\">\n          <i \n            className=\"fas fa-ellipsis-v receipts-by-month__menu\" \n            onClick={() => setModalIsVisible(true)}></i>\n        </div>\n      </div>\n\n      <div className=\"receipts-by-month__list\">\n      {\n        props.receipts.map((receipt) => {\n          if (collapsed) {\n            return false;\n          }\n  \n          if (props.payerNameFiltering && (!receipt.payerName || !receipt.payerName.includes(props.payerNameFiltering))) {\n            return;\n          }\n\n          return <ReceiptCard\n              receipt={receipt}\n              onRemove={props.onRemove}\n              enableSelection={props.enableSelection}\n              isSelected={props.receiptsSelected.get(receipt.id!) !== undefined}\n              onSelectionChange={(iSelected) => props.onSelectionChange(receipt.id!, iSelected ? receipt : undefined)}\n            />\n        })\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default ByMonthReceiptCard;","import React, { useState } from 'react';\n\nimport Receipt  from '../../db/Receipt';\nimport Modal from '../../components/modal/Modal';\n\ninterface ListReceiptCardHeaderProps {\n  isSelectModeOn: boolean;\n  receiptsSelected: Map<number, Receipt>;\n  onClickToEnableSelectMode(): void;\n  onClickToDisableSelectMode(): void;\n  onClickToCloneSelectedReceipts(): void;\n  onClickToDeleteSelectedReceipts(): void;\n  onClickToPrintSelectedReceipts(): void;\n  onClickToEditSelectedReceipts(): void;\n  onChangeOfPayerNameToFilter(name: string): void;\n}\n\nconst ListReceiptCardHeader = (props: ListReceiptCardHeaderProps) => {\n  const [pageModalIsVisible, setPageModalIsVisible] = useState<boolean>();\n\n  function handleCloseSelectionMode() {\n    props.onClickToDisableSelectMode();\n  }\n\n  return (\n    <div>\n      <Modal \n        show={pageModalIsVisible} \n        handleClose={() => {setPageModalIsVisible(false)}}>\n        <a onClick={() => {\n            props.onClickToEnableSelectMode();\n            setPageModalIsVisible(false); \n          }}>\n          Selecionar recibos\n        </a>\n      </Modal>\n\n      {!props.isSelectModeOn && (\n        <div className=\"flex flex-col pb-2\">\n          <div className=\"navbar shadow-lg bg-neutral text-neutral-content rounded-box\">\n            <div className=\"flex-1 px-2 mx-2 text-2xl\">\n              Recibos Facil\n            </div>\n            \n            <div className=\"flex-none\">\n                <input placeholder=\"Pesquise por nome\" className=\"input input-ghost text-xl\" type=\"search\"\n                  onChange={(e) => props.onChangeOfPayerNameToFilter(e.target.value)}/>\n            </div>\n\n            <div className=\"flex-none\">\n              <button className=\"btn btn-square btn-ghost\" onClick={() => setPageModalIsVisible(true)}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {props.isSelectModeOn && (\n        <div className=\"flex flex-col pb-2\">\n          <div className=\"navbar shadow-lg bg-neutral text-neutral-content rounded-box\">\n            \n            <div className=\"flex-none\">\n              <button className=\"btn btn-square btn-ghost\" onClick={handleCloseSelectionMode}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"inline-block w-6 h-6 stroke-current text-error\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\">\n                </path>\n              </svg>\n              </button>\n            </div>\n\n            <div className=\"flex-1 text-2xl\">\n              {props.receiptsSelected.size === 0 && (\"Selecionar recibos\")}\n              {props.receiptsSelected.size > 0 && (\n                props.receiptsSelected.size\n              )}\n            </div>\n\n            <div className=\"flex-none\">\n              {props.receiptsSelected.size > 0 && (\n                <div>\n                  <button className=\"btn btn-ghost px-1\" onClick={props.onClickToPrintSelectedReceipts}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z\" />\n                    </svg>\n                    <label className=\"container text-2xs\">Imprimir</label>\n                  </button>\n                  <button className=\"btn btn-ghost px-1\" onClick={props.onClickToEditSelectedReceipts}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg>\n                    <label className=\"container text-2xs\">Editar múltipos</label>\n                  </button>\n                  <button className=\"btn btn-ghost px-1\" onClick={props.onClickToCloneSelectedReceipts}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2h-2M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2\" />\n                    </svg>\n                    <label className=\"container text-2xs\">Duplicar</label>\n                  </button>\n                  <button className=\"btn btn-ghost px-1\" onClick={props.onClickToDeleteSelectedReceipts}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    <label className=\"container text-2xs\">Deletar</label>\n                  </button>                  \n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ListReceiptCardHeader;","import React, { useState, useEffect } from 'react';\n\nimport './ListReceiptCardPage.css';\n\nimport Receipt  from '../../db/Receipt';\nimport friendlyYearAndMonthAsText from '../../db/FriendlyLiteralDate';\nimport ByMonthReceiptCard from './ByMonthReceiptCard';\nimport ListReceiptCardHeader from './ListReceiptCardHeader';\n\nconst ReceiptCardsPage = (props: any) => {\n  const database = props.database;\n  const [receiptsByMonth, setReceiptsByMonth] = useState<Map<string, [Receipt]>>();\n  const [receiptsSelected, setReceiptSelected] = useState<Map<number, Receipt>>(new Map());\n\n  const [selectMode, setSelectMode] = useState<boolean>(false);\n  \n  function handleSelectAll(receipts: Receipt[]) {\n    const a = new Map(receiptsSelected);\n    receipts.map((receipt) => {\n      a.set(receipt.id!, receipt);\n    })\n    setReceiptSelected(a);\n    setSelectMode(true);\n  }\n\n  function handleSelectionChange(receiptId: number, receipt: Receipt | undefined) {\n    if (receipt) {\n      setReceiptSelected(new Map(receiptsSelected).set(receiptId, receipt));\n    } else {\n      const a = new Map(receiptsSelected);\n      a.delete(receiptId);\n      setReceiptSelected(a);\n    }\n  }\n\n  function handleCloseSelectionMode() {\n    setSelectMode(false);\n    setReceiptSelected(new Map());\n  }\n\n  function handleClickPrint() {\n    const i = receiptsSelected.keys();\n    \n    let idNext = i.next();\n    let receiptIds = new Array<number>();\n    while (!idNext.done) {\n      receiptIds.push(idNext.value);\n      idNext = i.next();\n    }\n    window.location.hash = `receipts-to-print?receiptIds=${JSON.stringify(receiptIds)}`;\n  }\n\n  function handleDeleteSelection() {\n    const answer = window.confirm(`Confirma a deleção de ${receiptsSelected.size} recibos?`);\n    if (answer === true) {\n      database.batchDelete(receiptsSelected.keys())\n        .then(async() => {\n          fetchReceipts();\n          handleCloseSelectionMode();\n        })\n        .catch((exception: any) => {\n          alert(\"Não foi possível deletar os recibos por um erro inesperado.\");\n          console.log(exception);\n        });\n    }\n  }\n\n  function handleClickToEditMultiple() {\n    const i = receiptsSelected.keys();\n    \n    let idNext = i.next();\n    let receiptIds = new Array<number>();\n    while (!idNext.done) {\n      receiptIds.push(idNext.value);\n      idNext = i.next();\n    }\n    window.location.hash = `#multi-edition?receiptIds=${JSON.stringify(receiptIds)}`;\n  }\n  \n  function handleCloneSelection() {\n    const receipts = receiptsSelected.values();\n    const answer = window.confirm(`Confirma a duplicação de ${receiptsSelected.size} recibos?`);\n    if (answer === true) {\n      const receiptsToClone: Receipt[] = [];\n      let nextReceipt = receipts.next();\n      while (!nextReceipt.done) {\n        const receipt: Receipt = nextReceipt.value;\n        //remove date to show clones at the top\n        receipt.date = undefined;\n        receiptsToClone.push(receipt)\n        nextReceipt = receipts.next();\n      }\n  \n      database.arrayAdd(receiptsToClone)\n        .then(async() => {\n          fetchReceipts();\n          handleCloseSelectionMode();\n        })\n        .catch((exception: any) => {\n          alert(\"Não foi possível clonar os recibo selecionados.\");\n          console.log(exception);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchReceipts();\n  }, []);\n  \n  async function fetchReceipts() {\n    const receipts: Receipt[] = await database.getAllReceipts();\n    receipts.sort((r1, r2) => r2.dateAsTimeStamp - r1.dateAsTimeStamp)\n\n    const rByMonth = receipts.reduce((byMonth, r) => {\n      const array: [Receipt] = byMonth.get(r.yearAndMonth) || [];\n      array.push(r);\n      byMonth.set(r.yearAndMonth, array);\n      return byMonth;\n    }, new Map())\n\n    setReceiptsByMonth(rByMonth)\n  };\n  const[payerNameFiltering, setPayerNameFiltering] = useState(\"\");\n\n  function handleRemoveReceipt(id: number) {\n    // TODO GOOD CASE FOR UNIT TEST, SUCCESS MEAN DELETED AND NOT FOUND??\n    database.deleteReceipt(id)\n      .then(async() => {\n        fetchReceipts();\n      })\n      .catch((exception: any) => {\n        alert(\"Não foi possível deletar o recibo por um erro inesperado.\");\n        console.log(exception);\n      })\n  }\n\n  return (\n    <div className=\"receipts-card\">\n\n      <ListReceiptCardHeader\n        isSelectModeOn={selectMode}\n        onChangeOfPayerNameToFilter={setPayerNameFiltering}\n        onClickToCloneSelectedReceipts={handleCloneSelection}\n        onClickToDeleteSelectedReceipts={handleDeleteSelection}\n        onClickToDisableSelectMode={handleCloseSelectionMode}\n        onClickToEnableSelectMode={() => setSelectMode(true)} \n        onClickToPrintSelectedReceipts={() => handleClickPrint()}\n        onClickToEditSelectedReceipts={() => handleClickToEditMultiple()}\n        receiptsSelected={receiptsSelected}\n      />\n\n      {\n        receiptsByMonth && [...receiptsByMonth.keys()].map((keyName, index) => {\n\n          const receipts: Receipt[] = receiptsByMonth.get(keyName) || [];\n          const friendlyTitle = friendlyYearAndMonthAsText(keyName) || \"Área de trabalho (sem data ou clonado)\";\n          \n          return (\n            <ByMonthReceiptCard\n              title={friendlyTitle}\n              receipts={receipts}\n              enableSelection={selectMode}\n              receiptsSelected={receiptsSelected}\n              payerNameFiltering={payerNameFiltering}\n              onRemove={handleRemoveReceipt}\n              onSelectionChange={handleSelectionChange}\n              onSelectAll={handleSelectAll}\n            />\n          )\n        })\n      } \n    </div>\n  );\n}\n\nexport default ReceiptCardsPage;","class Receipt {\n  id: number | undefined;\n  payerName?: string;\n  payerAddress?: string;\n  referrerTo?: string;\n  paidValue?: number;\n  // YYYY-MM-DD\n  date?: string;\n  payeeName?: string;\n  payeeCpfOrRg?: string;\n  payeeAddress?: string;\n\n  get dateAsTimeStamp() {\n    if (this.date) {\n      const d: Date = new Date(this.date);\n      return d.getTime();\n    }\n    return 9007199254740991;\n  }\n\n  get yearAndMonth() {\n    if (this.date) {\n      return this.date.substr(0,7);\n    }\n    return undefined;\n  }\n\n  get yearMonthAndDay() {\n    if (this.date) {\n      return this.date;\n    }\n    return undefined;\n  }\n}\n\n\nexport default Receipt;","import React, { useState, useEffect } from 'react';\n\nimport Receipt from '../../db/Receipt'\nimport Database from '../../db/Database';\n\ninterface NewEditReceiptPageProps {\n  receiptId?: number,\n  toClone?: boolean\n  database: Database\n}\n\nconst NewEditReceiptPage = (props: NewEditReceiptPageProps) => {\n\n  const database = props.database;\n  const [receipt, setReceipt] = useState<any>(new Receipt());\n  const [screenMode, setScreenMode] = useState(\"create\")\n\n  useEffect(() => {\n    if (props.receiptId) {\n      if (props.toClone) {\n        setScreenMode(\"clone\");\n      } else {\n        setScreenMode(\"edit\");\n      }\n\n      database.getReceipt(props.receiptId)\n        .then((receipt) => {\n          setReceipt(receipt);\n        })\n        .catch((exception) => {\n          alert(\"Não foi possível carregar o recibo.\");\n          console.log(exception);\n        });\n    } else {\n      setScreenMode(\"create\");\n    }\n  }, [props.receiptId]);\n  \n  const cancel = function() {\n    window.location.hash = \"#receipt-list\";\n  };\n\n  const done = async function() {\n    const receiptModel = new Receipt();\n    \n    receiptModel.payerName = receipt.payerName;\n    receiptModel.payerAddress = receipt.payerAddress;\n    receiptModel.referrerTo = receipt.referrerTo;\n    receiptModel.paidValue = receipt.paidValue;\n    receiptModel.date = receipt.date;\n    receiptModel.payeeName = receipt.payeeName;\n    receiptModel.payeeCpfOrRg = receipt.payeeCpfOrRg;\n    receiptModel.payeeAddress = receipt.payeeAddress;\n\n    if (screenMode === \"clone\") {\n      await database.addReceipt(receiptModel);\n    }\n    if (screenMode === \"edit\") {\n      await database.updateReceipt(receiptModel, props.receiptId!);\n    }\n    if (screenMode === \"create\") {\n      await database.addReceipt(receiptModel);\n    }\n    window.location.hash = \"#receipt-list\";\n  };\n\n  const handleChange = function(e: any) {\n    const {name, value} = e.target;\n\n    setReceipt((prevState: any) => {\n      let receipt = { ...prevState }; \n      receipt[name] = value;\n      return receipt;\n    })\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"flex flex-col pb-2\">\n        <div className=\"navbar shadow-lg bg-neutral text-neutral-content rounded-box\">\n          \n          <div className=\"flex-none\">\n            <button className=\"btn btn-square btn-ghost\" onClick={() => (window.history.back())}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            </button>\n          </div>\n\n          <div className=\"flex-1 text-2xl\">\n            {screenMode===\"create\" && \"Criando\"}\n            {screenMode===\"edit\" && \"Editando nº \" + receipt.id}\n            {screenMode===\"clone\" && \"Clonando nº \" +  + receipt.id}\n          </div>\n\n          {screenMode==\"create\" && (\n          <div className=\"flex-none\">\n            <button className=\"btn btn-square btn-ghost\" onClick={() => cancel()}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"inline-block w-6 h-6 stroke-current text-error\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n            </svg>\n            </button>\n          </div>\n          )}\n        </div>\n      </div>\n      \n      <form className=\"receipt-form\" name=\"receipt-form\" \n        action=\"javascript:void(0);\"\n        noValidate >\n\n        <div className=\"receipt-payer mb-4\">\n                    \n          <h5 className=\"text-xl\">Recebido de</h5>\n\n          <div className=\"form-control\">\n            <label className=\"label\" htmlFor={\"payerName\"}>\n              <span className=\"label-text\">Recebi (emos) de</span>\n            </label>\n            <input \n              className=\"input input-bordered\" \n              type=\"text\"   \n              name={\"payerName\"} \n              placeholder=\"\" \n              id={\"payerName\"}\n              value={receipt.payerName} \n              onChange={handleChange}\n              autoFocus/>\n          </div>\n            \n\n          <div className=\"form-control\">\n            <label className=\"label\" htmlFor={\"referrerTo\"}>\n              <span className=\"label-text\">Referente</span>\n            </label>\n            <input \n              className=\"input input-bordered\" \n              type=\"text\"   \n              name={\"referrerTo\" } \n              placeholder=\"\" \n              id={\"referrerTo\" }\n              value={receipt.referrerTo} \n              onChange={handleChange}\n              />\n          </div>\n\n          <div className=\"form-control\">\n            <label className=\"label\" htmlFor={\"paidValue\"}>\n              <span className=\"label-text\">Valor</span>\n            </label>\n            <input \n              className=\"input input-bordered\" \n              type=\"number\"   \n              name={\"paidValue\"} \n              placeholder=\"\" \n              id={\"paidValue\"}\n              value={receipt.paidValue} \n              onChange={handleChange}\n              />\n          </div>\n\n          <div className=\"form-control\">\n            <label className=\"label\" htmlFor={\"payerAddress\"}>\n              <span className=\"label-text\">Endereço</span>\n            </label>\n            <input \n              className=\"input input-bordered\" \n              type=\"text\"   \n              name={\"payerAddress\"} \n              placeholder=\"\" \n              id={\"payerAddress\"}\n              value={receipt.payerAddress} \n              onChange={handleChange}\n              />\n          </div>\n        </div>\n\n        <div className=\"form-control mb-4\">\n          <h5 className=\"text-xl\">Data</h5>\n          <input \n            className=\"input input-bordered\" \n            type=\"date\"  \n            name={\"date\"} \n            placeholder=\"\" \n            id={\"date\"}\n            value={receipt.date} \n            onChange={handleChange}\n            />\n        </div>\n\n        \n        <div className=\"mb-4\">\n          <h5 className=\"text-xl\">Recebido por</h5>\n\n          <div className=\"form-control\">\n            <label className=\"label\" htmlFor={\"payeeName\"}>\n              <span className=\"label-text\">Emitente</span>\n            </label>\n            <input \n              className=\"input input-bordered\" \n              type=\"text\" \n              name={\"payeeName\"} \n              placeholder=\"\" \n              id={\"payeeName\"}\n              value={receipt.payeeName}\n              onChange={handleChange}\n              />\n          </div>\n\n          <div className=\"form-control\">\n            <label className=\"label\" htmlFor={\"payeeCpfOrRg\"}>\n              <span className=\"label-text\">CPF/RG</span>\n            </label>\n            <input \n              className=\"input input-bordered\" \n              type=\"text\"   \n              name={\"payeeCpfOrRg\"} \n              placeholder=\"\" \n              id={\"payeeCpfOrRg\"}\n              value={receipt.payeeCpfOrRg} \n              onChange={handleChange}\n              />\n          </div>\n\n          <div className=\"form-control\">\n            <label className=\"label\" htmlFor={\"payeeAddress\"}>\n              <span className=\"label-text\">Endereço</span>\n            </label>\n            <input \n              className=\"input input-bordered\" \n              type=\"text\"   \n              name={\"payeeAddress\"} \n              placeholder=\"\" \n              id={\"payeeAddress\"}\n              value={receipt.payeeAddress} \n              onChange={handleChange}\n              />\n          </div>\n        </div>\n\n        <button\n          className=\"btn btn-block pt-2\"\n          onClick={() => done()}>\n          Pronto\n        </button>\n      </form>\n\n    </div>\n  );\n}\n\nexport default NewEditReceiptPage;","const writtenNumber = require('written-number');\n\nfunction isInt(n: any){\n  return Number(n) === n && n % 1 === 0;\n}\n\nfunction isFloat(n: any){\n  return Number(n) === n && n % 1 !== 0;\n}\n\n{/* <span>{writtenNumber(props.receipt.paidValue, {lang: 'pt'}) + ' reais'}</span> */}\n\n// 22.25 - vinte e dois reais e 25 centavos\n// 20.235 - vinte reais e 24 centavos\n// 25 - vinte e cinco reais\n// 31.1 - trinta e um reais e 10 centavos\n\nfunction moneyToWords(number: any) {\n  let numberConverted;\n  if (typeof number == 'string') {\n    numberConverted = parseFloat(number);\n  }\n\n  if (!numberConverted) {\n    console.error(`parameter ${number} is not a number`);\n    return number;\n  }\n\n  if (isInt(numberConverted)) {\n    return `${writtenNumber(numberConverted, {lang: 'pt'})} reais`;\n  }\n\n  if (isFloat(numberConverted)) {\n    const decimalPart = (numberConverted % 1);\n    const integerPart = numberConverted - decimalPart;\n    const decimalAsInteger = decimalPart * 100;\n    return `${writtenNumber(integerPart, {lang: 'pt'})} reais e ${writtenNumber(decimalAsInteger, {lang: 'pt'})} centavos`;\n  }\n\n  console.error(`parameter ${number} is not a number`);\n  return number;\n}\n\nexport {moneyToWords}","\nenum Field {\n  ReceiptNumber = \"ReceiptNumber\",\n  PayerName = \"PayerName\",\n  ReferrerTo = \"ReferrerTo\",\n  PaidValue = \"PaidValue\",\n  PayerAddress = \"PayerAddress\",\n  Date = \"Date\",\n  PayeeName = \"PayeeName\",\n  PayeeCpfOrRg = \"PayeeCpfOrRg\",\n  PayeeAddress = \"PayeeAddress\"\n}\n\nenum Setting {\n  None = \"None\",\n  ToIdentify = \"ToIdentify\",\n  ToUpdate = \"ToUpdate\"\n}\n\nclass MultiEditionSettings {\n\n  fieldSettingsMap: Map<Field, Setting>;\n  \n  static Instance(fieldSettings: Map<Field, Setting>): MultiEditionSettings {\n    const multiEditionSettings = new MultiEditionSettings();\n    multiEditionSettings.fieldSettingsMap = fieldSettings;\n    return multiEditionSettings;\n  }\n\n  constructor() {\n     this.fieldSettingsMap = new Map<Field, Setting>([\n      [Field.ReceiptNumber, Setting.None],\n      [Field.PayerName, Setting.ToIdentify],\n      [Field.ReferrerTo, Setting.ToUpdate],\n      [Field.PaidValue, Setting.ToUpdate],\n      [Field.PayerAddress, Setting.None],\n      [Field.Date, Setting.ToUpdate],\n      [Field.PayeeName, Setting.None],\n      [Field.PayeeCpfOrRg, Setting.None]\n    ]);\n  }\n\n\n  get fieldSettings(): Map<Field, Setting> {\n    return this.fieldSettingsMap;\n  }\n\n  getFieldSetting(field: Field): Setting | undefined {\n    return this.fieldSettingsMap.get(field);\n  }\n\n  setFieldSetting(field: Field, setting: Setting) {\n    this.fieldSettingsMap.set(field, setting);\n  }\n\n  fieldsToIdentify(): Array<Field> {\n    const fieldsToIdentify = new Array<Field>();\n    \n    this.fieldSettingsMap.forEach((setting: Setting, field: Field) => {\n      if (setting === Setting.ToIdentify) {\n        fieldsToIdentify.push(field);\n      }\n    });\n\n    return fieldsToIdentify;\n  }\n\n  fieldsToUpdate(): Array<Field> {\n    const fieldsToUpdate = new Array<Field>();\n    \n    this.fieldSettingsMap.forEach((setting: Setting, field: Field) => {\n      if (setting === Setting.ToUpdate) {\n        fieldsToUpdate.push(field);\n      }\n    });\n\n    return fieldsToUpdate;\n  }\n}\n\nexport {Field, Setting};\nexport default MultiEditionSettings;","import React from 'react';\nimport { observer } from \"mobx-react\";\nimport {moneyToWords} from '../../utils/MoneyToWords'\n\nimport './Receipt.css';\n\nconst Receipt = observer((props) => {\n\n    return (\n      <div className=\"receipt-container\">\n        \n        <div className=\"flex items-center\">\n          <span className=\"flex-none text-xl font-semibold\">RECIBO</span>\n        \n          <div className=\"flex-1\">\n            <div className=\"flex justify-center\">\n              <label>Numero</label>\n              <span>{props.receipt.id}</span>\n            </div>\n          </div>\n          \n          <div className=\"flex-none\">\n            <label>Valor</label>\n            <span>R${props.receipt.paidValue}</span>\n          </div>\n        </div>\n\n        <div className=\"receipt-payer\">\n          <div>\n            <label>Recebi (emos) de</label>\n            <span>{props.receipt.payerName}</span>\n          </div>\n\n          <div>\n            <label>Endereço</label>\n            <span>{props.receipt.payerAddress}</span>\n          </div>\n\n          <div>\n            <label>A importância de</label>\n            {props.receipt.paidValue && \n              <span>{moneyToWords(props.receipt.paidValue)}</span>\n            }\n          </div>\n\n          <div>\n            <label>Referente</label>\n            <span>{props.receipt.referrerTo}</span>\n          </div>\n        </div>\n\n        <div className=\"receipt-date\">\n          <label>Data</label>\n          {props.date}\n        </div>\n\n        <div className=\"receipt-payee\">\n          <div>\n            <label>Emitente</label>\n            <span>{props.payee}</span>\n          </div>\n          <div>\n            <label>CPF/RG</label>\n            <span>{props.payeeCpfOrRg}</span>\n          </div>\n\n          <div>\n            <label>Endereço</label>\n            <span>{props.payeeAddress}</span>\n          </div>\n\n          <div>\n            <label>Assinatura</label>\n            <span></span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n)\nexport default Receipt;","import React from 'react';\nimport { observer } from \"mobx-react\";\nimport {moneyToWords} from '../../utils/MoneyToWords'\n\nimport './Receipt.css';\n\nconst ReceiptStub = observer((props) => {\n\n    return (\n      <div className=\"receipt-container\">\n        \n        <div className=\"flex\">\n          <div className=\"flex-1\">\n            <label>Numero:</label>\n            <span>{props.receipt.id}</span>\n          </div>\n          \n          <div className=\"flex-1\">\n            <label>Valor:</label>\n            <span>R${props.receipt.paidValue}</span>\n          </div>\n        </div>\n\n        <div className=\"receipt-payer\">\n          <div>\n            <label>Recebi (emos) de:</label>\n            <span>{props.receipt.payerName}</span>\n          </div>\n\n          <div>\n            <label htmlFor={\"payerAddress-\" + props.index}>Endereço:</label>\n            <span>{props.receipt.payerAddress}</span>\n          </div>\n\n          <div>\n            <label htmlFor={\"paidValueAsText-\" + props.index}>A importância de:</label>\n            {props.receipt.paidValue && \n              <span>{moneyToWords(props.receipt.paidValue)}</span>\n            }\n          </div>\n\n          <div>\n            <label htmlFor={\"referrerTo-\" + props.index }>Referente</label>\n            <span>{props.receipt.referrerTo}</span>\n          </div>\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date-\" + props.index}>Data</label>\n          {props.date}\n        </div>\n\n      </div>\n    );\n  }\n)\nexport default ReceiptStub;","import React, { useState, useEffect } from 'react';\nimport Receipt from '../../components/receipt/Receipt';\nimport ReceiptStub from '../../components/receipt/ReceiptStub';\nimport Database from '../../db/Database';\n\ninterface ReceiptsToPrintPageProps {\n  database: Database\n  receiptIds: [number]\n}\n\nconst ReceiptsToPrintPage = (props: ReceiptsToPrintPageProps) => {\n  const database = props.database;\n  const [receipts, setReceipts] = useState<any[]>([]);\n\n  useEffect(() => {\n    async function fetchReceipts() {\n      const receipts = await database.getReceipts(props.receiptIds);\n      setReceipts(receipts);\n    };\n    fetchReceipts();\n  }, []);\n\n  return (\n    <div className=\"\">\n      <div className=\"flex flex-col pb-2 no-printable\">\n        <div className=\"navbar shadow-lg bg-neutral text-neutral-content rounded-box\">\n          \n          <div className=\"flex-none\">\n            <button className=\"btn btn-square btn-ghost\" onClick={() => (window.history.back())}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            </button>\n          </div>\n\n          <div className=\"flex-1 text-2xl\">\n            Imprimir\n          </div>\n        </div>\n      </div>\n\n      \n      <div className=\"action-top-bar\">\n        <button className=\"btn no-printable\" onClick={window.print}>\n          Imprimir\n        </button>\n      </div>\n      \n      <div className=\"\">\n        <h2 className=\"text-4xl mb-2\">Canhotos</h2>\n        {receipts.map((receipt) => (\n          <div key={receipt.id}>\n            <ReceiptStub\n              key={receipt.id}\n              index={receipt.id}\n              payee={receipt.payeeName}\n              payeeCpfOrRg={receipt.payeeCpfOrRg}\n              payeeAddress={receipt.payeeAddress}\n              date={receipt.date}\n              receipt={receipt}\n            />\n          </div>\n        ))} \n\n        <h2 className=\"text-4xl mb-2\">Recibos</h2>\n        {receipts.map((receipt) => (\n          <div key={receipt.id}>\n            <Receipt\n              key={receipt.id}\n              index={receipt.id}\n              payee={receipt.payeeName}\n              payeeCpfOrRg={receipt.payeeCpfOrRg}\n              payeeAddress={receipt.payeeAddress}\n              date={receipt.date}\n              receipt={receipt}\n            />\n          </div>\n        ))} \n      </div>\n    </div>\n  );\n}\n\nexport default ReceiptsToPrintPage;","import React from 'react';\nimport MultiEditionSettings from '../../db/MultiEditionSettings';\nimport {Field, Setting} from './MultiEditionSettingsPage';\n\ninterface MultiEditionSettingsFormProps {\n  fieldsSettings: MultiEditionSettings;\n  stepSetting: Setting;\n  otherSetting: Setting\n  onChange(field: Field, stepSetting: Setting, otherSetting: Setting): void; \n  children: any;\n}\n\nconst MultiEditionSettingsForm = (props: MultiEditionSettingsFormProps) => {\n  \n  const fieldsArray = [\n    {id: \"payerName\", label: \"Recebi (emos) de\", field: Field.PayerName},\n    {id: \"referrerTo\", label: \"Referente\", field: Field.ReferrerTo},\n    {id: \"paidValue\", label: \"Valor\", field: Field.PaidValue},\n    {id: \"payerAddress\", label: \"Endereço\", field: Field.PayerAddress},\n    {id: \"date\", label: \"Data\", field: Field.Date},\n    {id: \"payeeName\", label: \"Emitente\", field: Field.PayeeName},\n    {id: \"payeeCpfOrRg\", label: \"CPF/RG\", field: Field.PayeeCpfOrRg}\n  ];\n\n  return (\n    <form name={\"multipleedit-form-\" + props.stepSetting}\n      action=\"javascript:void(0);\"\n      noValidate >\n      \n      {fieldsArray.map((field) => {\n        return (\n        <div className=\"form-control\">\n          <label className=\"cursor-pointer label\" htmlFor={field.id}>\n            <span className=\"label-text\">{field.label}</span>\n            <input \n              name={field.id}\n              id={field.id}\n              type=\"checkbox\"\n              className=\"checkbox\"\n              checked={props.fieldsSettings.getFieldSetting(field.field) === props.stepSetting}\n              onChange={() => props.onChange(field.field, props.stepSetting, props.otherSetting)}\n              disabled={props.fieldsSettings.getFieldSetting(field.field) === props.otherSetting}\n              />\n          </label>\n        </div>\n        )\n      })}\n      \n      <div className=\"action-bar\">\n        {props.children}\n      </div>\n    </form>\n  )\n}\n\nexport default MultiEditionSettingsForm;","import React, {useState, useEffect} from 'react';\nimport Database from '../../db/Database';\n\nimport MultiEditionSettingsForm from './MultiEditionSettingForm';\nimport { Field, Setting } from '../../db/MultiEditionSettings';\nimport MultiEditionSettings from '../../db/MultiEditionSettings';\n\ninterface MultiEditionSettingsPageProps {\n  database: Database;\n  nextPageHash?: string;\n}\n\nconst MultiEditionSettingsPage = (props: MultiEditionSettingsPageProps) => {\n  const [multiEditionSettings, setMultiEditionSettings] = useState<MultiEditionSettings>(new MultiEditionSettings());\n\n  const [step, setStep] = useState<number>(1);\n  \n  useEffect(() => {\n    props.database.getMultiEditionSettings()\n    .then((multiEditionSettings) => {\n      setMultiEditionSettings(multiEditionSettings);\n    })\n    .catch(() => {\n      console.error('Fail to load fieldsSettings');\n    })\n  }, [])\n\n  function setFieldSetting(field: Field, setting: Setting) {\n    const newMESettings = MultiEditionSettings.Instance(multiEditionSettings.fieldSettings);\n    newMESettings.setFieldSetting(field, setting);\n    setMultiEditionSettings(newMESettings);\n  }\n\n  function handleOnChange(field: Field, stepSetting: Setting, otherSetting: Setting) {\n    const setting = multiEditionSettings.getFieldSetting(field);\n    \n    if (setting === stepSetting) {\n      setFieldSetting(field, Setting.None);\n    }\n\n    if (setting === otherSetting) {\n      setFieldSetting(field, stepSetting);\n    }\n\n    if (setting === Setting.None) {\n      setFieldSetting(field, stepSetting);\n    }\n  }\n  \n  function handleClickOnBack() {\n    if (step == 1) {\n      window.history.back();\n    } else {\n      setStep(step - 1);\n    }\n  }\n\n  function handleClickOnClose() {\n    window.history.back();\n  }\n\n  function handleSaveAndNext() {\n    props.database.saveMultiEditionSettings(multiEditionSettings)\n      .then(() => {\n        if (props.nextPageHash) {\n          window.location.hash = props.nextPageHash\n        } else {\n          window.history.back();\n        }\n      })\n      .catch((err) => {\n        alert(\"Erro ao tentar gravar.\")\n        console.log(err);\n      })\n  }\n\n  return (\n   <div>\n     <div className=\"flex flex-col pb-2\">\n        <div className=\"navbar shadow-lg bg-neutral text-neutral-content rounded-box\">\n          \n          <div className=\"flex-none\">\n            <button className=\"btn btn-square btn-ghost\" onClick={handleClickOnBack}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            </button>\n          </div>\n\n          <div className=\"flex-1 text-2xl\">\n            {step===1 && \"1 de 2 campos de referência\"}\n            {step===2 && \"2 de 2 campos a mudar\"}\n          </div>\n\n          <div className=\"flex-none\">\n            <button className=\"btn btn-square btn-ghost\" onClick={handleClickOnClose}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"inline-block w-6 h-6 stroke-current text-error\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n            </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {step===1 &&\n      <div>\n        <p></p>\n        <p>Selecione as informações que irão te ajudar a identificar qual recibo você estará editando.</p>\n        <MultiEditionSettingsForm\n          fieldsSettings={multiEditionSettings}\n          stepSetting={Setting.ToIdentify}\n          otherSetting={Setting.ToUpdate}\n          onChange={handleOnChange}\n        >\n        <button className=\"btn btn-block\" onClick={() => setStep(2)}>\n          Continuar\n        </button>\n        </MultiEditionSettingsForm>\n      </div>\n      }\n\n      {step===2 &&\n      <div>\n        <p></p>\n        <p>Selecione quais as informações que você quer atualizar.</p>\n        \n        <MultiEditionSettingsForm\n          fieldsSettings={multiEditionSettings}\n          stepSetting={Setting.ToUpdate}\n          otherSetting={Setting.ToIdentify}\n          onChange={handleOnChange}\n        >\n        <button className=\"btn btn-block\" onClick={handleSaveAndNext}>\n          Salvar e seguir\n        </button>\n        </MultiEditionSettingsForm>\n      </div>\n      }\n   </div>\n  )\n}\n\nexport {Field, Setting}\nexport default MultiEditionSettingsPage;","import React from 'react';\n\ninterface ReceiptFormInputProps {\n  id: string,\n  label: string,\n  value: string,\n  type: string,\n  onChange(e: any): void\n  readonly?: boolean\n}\n\nconst ReceiptFormInput = (props: ReceiptFormInputProps) => {\n  return (\n    <div>\n      {!props.readonly && (\n        <div className=\"form-control\">\n          <label className=\"label\" htmlFor={props.id}>\n            <span className=\"label-text\">{props.label}</span>\n          </label>\n          <input \n          className=\"input input-bordered\" \n          type={props.type}   \n          name={props.id} \n          placeholder=\"\" \n          id={props.id}\n          value={props.value} \n          onChange={props.onChange}\n          autoFocus\n          />\n        </div>\n      )}\n\n      {props.readonly && (\n        <div>\n          <label htmlFor={props.id}>{props.label}: </label>\n          <span className=\"font-semibold\">{props.value}</span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ReceiptFormInput;","import React, { useState, useEffect } from 'react';\nimport Receipt from '../../db/Receipt';\nimport ReceiptFormInput from './ReceiptFormInput';\nimport { Field, Setting } from '../../pages/MultiEditionSettings/MultiEditionSettingsPage';\n\ninterface ReceiptFormProps {\n  receipt: Receipt;\n  onChange(receipt: Receipt): void;\n  fieldsToIdentify: Array<Field>;\n  fieldsToUpdate: Array<Field>;\n}\n\nconst ReceiptForm = (props: ReceiptFormProps) => {\n  const buildAndSetMapFieldsData = (receipt: Receipt) => {\n    return new Map<Field, any>([\n      [Field.PayerName, {id: \"payerName\", label: \"Recebi (emos) de\", value: receipt.payerName, type: \"text\"}],\n      [Field.ReferrerTo, {id: \"referrerTo\", label: \"Referente\", value: receipt.referrerTo, type: \"text\"}],\n      [Field.PaidValue, {id: \"paidValue\", label: \"Valor\", value: receipt.paidValue, type: \"text\"}],\n      [Field.PayerAddress, {id: \"payerAddress\", label: \"Endereço\", value: receipt.payerAddress, type: \"text\"}],\n      [Field.Date, {id: \"date\", label: \"Data\", value: receipt.date, type: \"date\"}],\n      [Field.PayeeName, {id: \"payeeName\", label: \"Emitente\", value: receipt.payeeName, type: \"text\"}],\n      [Field.PayeeCpfOrRg, {id: \"payeeCpfOrRg\", label: \"CPF/RG\", value: receipt.payeeCpfOrRg, type: \"text\"}]\n    ]);\n  }\n\n  const [receipt, setReceipt] = useState<any>(props.receipt || new Receipt());\n  const [mapFieldsData, setMapFieldsData] = useState<Map<Field, any>>(buildAndSetMapFieldsData(receipt));\n\n\n  useEffect(() => {\n    setReceipt(props.receipt);\n    setMapFieldsData(buildAndSetMapFieldsData(props.receipt))\n  }, [props.receipt.id])\n  \n  const handleChange = function(e: any) {\n    const {name, value} = e.target;\n\n    setReceipt((prevState: any) => {\n      let receipt = { ...prevState }; \n      receipt[name] = value;\n\n      const receiptModel = new Receipt();\n      receiptModel.id = receipt.id;\n      receiptModel.payerName = receipt.payerName;\n      receiptModel.payerAddress = receipt.payerAddress;\n      receiptModel.referrerTo = receipt.referrerTo;\n      receiptModel.paidValue = receipt.paidValue;\n      receiptModel.date = receipt.date;\n      receiptModel.payeeName = receipt.payeeName;\n      receiptModel.payeeCpfOrRg = receipt.payeeCpfOrRg;\n      receiptModel.payeeAddress = receipt.payeeAddress;\n\n      setMapFieldsData(buildAndSetMapFieldsData(receipt));\n      \n      props.onChange(receiptModel);\n\n      return receipt;\n    })\n  };\n\n  function getField(field: Field, readonly: boolean) {\n    const fieldData = mapFieldsData.get(field);\n    \n    return (\n      <ReceiptFormInput\n        id={fieldData.id}\n        label={fieldData.label}\n        value={fieldData.value || \"\"}\n        type={fieldData.type}\n        onChange={handleChange}\n        readonly={readonly}\n      />\n    )\n  }\n\n  return (\n    <form className=\"receipt-form\" name=\"receipt-form\" \n      action=\"javascript:void(0);\"\n      noValidate >\n     \n      <div className=\"mb-4\">\n        {props.fieldsToIdentify.map(function(field: Field) {\n          return getField(field, true);\n        })}\n      </div>\n\n      <div className=\"mb-4\">\n        {props.fieldsToUpdate.map(function(field: Field) {\n          return getField(field, false);\n        })}\n      </div>\n    </form>\n  )\n};\n\nexport default ReceiptForm;","import React, {useState, useEffect} from 'react';\nimport Database from '../../db/Database';\nimport ReceiptForm from '../../components/receiptform/ReceiptForm';\nimport Receipt from '../../db/Receipt';\nimport MultiEditionSettings from '../../db/MultiEditionSettings'\n\ninterface MultiEditionPageProps {\n  database: Database;\n  receiptIds: [number];\n  currentIndex: number;\n}\n\nconst MultiEditionPage = (props: MultiEditionPageProps) => {\n  const [loading, setLoading] = useState(true);\n\n  const [receipt, setReceipt] = useState<Receipt>();\n  const [multiEditionSettings, setMultiEditionSettings] = \n    useState<MultiEditionSettings>(new MultiEditionSettings());\n\n  useEffect(() => {\n\n    props.database.getMultiEditionSettings()\n      .then((multiEditionSettings) => {\n        setMultiEditionSettings(multiEditionSettings);\n      })\n      .catch((err) => {\n        console.error('Fail to load fieldsSettings', err);\n      })\n\n    props.database.getReceipt(props.receiptIds[props.currentIndex])\n      .then((receipt) => {\n        setReceipt(receipt);\n      })\n      .catch((err) => {\n        console.error('Fail to load fieldsSettings', err);\n      })\n      .finally(() => {\n        setLoading(false);\n      })\n  }, [props.currentIndex])\n  \n  async function next() {\n    await props.database.updateReceipt(receipt!, receipt!.id!);\n    const nextIndex = props.currentIndex + 1;\n    if (nextIndex < props.receiptIds.length) {\n      window.location.hash = `#multi-edition?receiptIds=${JSON.stringify(props.receiptIds)}&current=${nextIndex}`;\n    } else {\n      window.location.hash = '#receipt-list';\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"flex flex-col pb-2\">\n        <div className=\"navbar shadow-lg bg-neutral text-neutral-content rounded-box\">\n          \n          <div className=\"flex-none\">\n            <button className=\"btn btn-square btn-ghost\" onClick={() => (window.history.back())}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            </button>\n          </div>\n\n          <div className=\"flex-1 text-2xl\">\n            Editando {props.currentIndex + 1} de {props.receiptIds.length}\n          </div>\n        </div>\n      </div>\n\n      {loading && (\n        <span>Carregando...</span>\n      )}\n\n      {!loading && (\n        <div>\n          <ReceiptForm\n            receipt={receipt!}\n            onChange={(receipt) => setReceipt(receipt)}\n            fieldsToIdentify={multiEditionSettings.fieldsToIdentify()}\n            fieldsToUpdate={multiEditionSettings.fieldsToUpdate()}\n          />\n\n          <button className=\"btn btn-block\" onClick={next}>\n            Salvar e próximo\n          </button>\n        </div>\n      )}\n   </div>\n  )\n  \n  \n};\n\nexport default MultiEditionPage;","import React, {useState, useEffect} from 'react';\n\n\ninterface SettingsPageProps {\n}\n\nconst SettingsPage = (props: SettingsPageProps) => {\n\n  return (\n   <div>\n     <div className=\"flex flex-col pb-2\">\n        <div className=\"navbar shadow-lg bg-neutral text-neutral-content rounded-box\">\n          \n          <div className=\"flex-none\">\n            <button className=\"btn btn-square btn-ghost\" onClick={() => (window.history.back())}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n            </svg>\n            </button>\n          </div>\n\n          <div className=\"flex-1 text-2xl\">\n            Configurações\n          </div>\n        </div>\n      </div>\n\n      <button \n        className=\"btn btn-block\"\n        onClick={() => window.location.hash = \"#multi-edition-settings\"}>\n        Configurar campos de edição multipla.\n      </button>\n   </div>\n  )\n}\n\nexport default SettingsPage;","class UserSetting {\n  id?: string;\n  value?: string;\n}\n\n\nexport default UserSetting;","import {dateToYYYYMMDD} from './FriendlyLiteralDate';\n\nconst dateCurrentMonth = (new Date());\ndateCurrentMonth.setDate(1);\n\nconst dateLastMonth = (new Date());\ndateLastMonth.setDate(1);\nif (dateLastMonth.getMonth() > 0) {\n  dateLastMonth.setMonth(dateLastMonth.getMonth()  - 1);\n} else {\n  dateLastMonth.setMonth(11);\n  dateLastMonth.setFullYear(dateLastMonth.getFullYear() - 1);\n}\n\nconst forCurrentMonth = dateToYYYYMMDD(dateCurrentMonth);\nconst forLastMonth = dateToYYYYMMDD(dateLastMonth);\n\n\nconst receiptsOfCurrentMonth = [\n  {\n    payerName: \"Exemplo - João Francisco\",\n    payerAddress: \"Rua Capitão Júnio, 222, apto 301, Belo Horizonte\",\n    referrerTo: \"4 sessões de terapia\",\n    paidValue: 600,\n    paidValueAsText: \"\",\n    date: forCurrentMonth,\n    payeeName: \"Rafael Pereira\",\n    payeeCpfOrRg: \"123456789-01\",\n    payeeAddress: \"Rua Martinho Campos, 1212, Belo Horizonte\"\n  },\n  {\n    payerName: \"Exemplo - Pedro Ferreira\",\n    payerAddress: \"Rua Capitolio, 334, Belo Horizonte\",\n    referrerTo: \"2 treinamentos de pais\",\n    paidValue: 300,\n    paidValueAsText: \"\",\n    date: forCurrentMonth,\n    payeeName: \"Rafael Pereira\",\n    payeeCpfOrRg: \"123456789-01\",\n    payeeAddress: \"Rua Martinho Campos, 1212, Belo Horizonte\"\n  },\n  {\n    payerName: \"Exemplo - José Augusto\",\n    payerAddress: \"Rua Almirante Neves, 4455, Belo Horizonte\",\n    referrerTo: \"8 sessões de terapia\",\n    paidValue: 1200,\n    paidValueAsText: \"\",\n    date: forCurrentMonth,\n    payeeName: \"Rafael Pereira\",\n    payeeCpfOrRg: \"123456789-01\",\n    payeeAddress: \"Rua Martinho Campos, 1212, Belo Horizonte\"\n  },\n  {\n    payerName: \"Exemplo - Auguto Ferraz\",\n    payerAddress: \"Rua dos Otonis, 908, Belo Horizonte\",\n    referrerTo: \"4 sessões de terapia\",\n    paidValue: 600,\n    paidValueAsText: \"\",\n    date: forCurrentMonth,\n    payeeName: \"Rafael Pereira\",\n    payeeCpfOrRg: \"123456789-01\",\n    payeeAddress: \"Rua Martinho Campos, 1212, Belo Horizonte\"\n  }\n]\n\nconst receiptsOfLastMonth = [\n  {\n    payerName: \"Exemplo - João Francisco\",\n    payerAddress: \"Rua Capitão Júnio, 222, apto 301, Belo Horizonte\",\n    referrerTo: \"5 sessões de terapia\",\n    paidValue: 750,\n    paidValueAsText: \"\",\n    date: forLastMonth,\n    payeeName: \"Rafael Pereira\",\n    payeeCpfOrRg: \"123456789-01\",\n    payeeAddress: \"Rua Martinho Campos, 1212, Belo Horizonte\"\n  },\n  {\n    payerName: \"Exemplo - Pedro Ferreira\",\n    payerAddress: \"Rua Capitolio, 334, Belo Horizonte\",\n    referrerTo: \"2 treinamentos de pais\",\n    paidValue: 300,\n    paidValueAsText: \"\",\n    date: forLastMonth,\n    payeeName: \"Rafael Pereira\",\n    payeeCpfOrRg: \"123456789-01\",\n    payeeAddress: \"Rua Martinho Campos, 1212, Belo Horizonte\"\n  },\n  {\n    payerName: \"Exemplo - José Augusto\",\n    payerAddress: \"Rua Almirante Neves, 4455, Belo Horizonte\",\n    referrerTo: \"4 sessões de terapia\",\n    paidValue: 600,\n    paidValueAsText: \"\",\n    date: forLastMonth,\n    payeeName: \"Rafael Pereira\",\n    payeeCpfOrRg: \"123456789-01\",\n    payeeAddress: \"Rua Martinho Campos, 1212, Belo Horizonte\"\n  },\n  {\n    payerName: \"Exemplo - Auguto Ferraz\",\n    payerAddress: \"Rua dos Otonis, 908, Belo Horizonte\",\n    referrerTo: \"3 sessões de terapia\",\n    paidValue: 450,\n    paidValueAsText: \"\",\n    date: forLastMonth,\n    payeeName: \"Rafael Pereira\",\n    payeeCpfOrRg: \"123456789-01\",\n    payeeAddress: \"Rua Martinho Campos, 1212, Belo Horizonte\"\n  },\n  {\n    payerName: \"Exemplo - Carlos Lopes\",\n    payerAddress: \"Rua Primavera, 431, Belo Horizonte\",\n    referrerTo: \"5 sessões de terapia\",\n    paidValue: 750,\n    paidValueAsText: \"\",\n    date: forLastMonth,\n    payeeName: \"Rafael Pereira\",\n    payeeCpfOrRg: \"123456789-01\",\n    payeeAddress: \"Rua Martinho Campos, 1212, Belo Horizonte\"\n  }\n]\n\nreceiptsOfLastMonth.push();\n\nconst receiptAsExamples = receiptsOfCurrentMonth.concat(receiptsOfLastMonth);\n\nexport {receiptAsExamples}","import Receipt  from './Receipt';\nimport {Field, Setting} from '../pages/MultiEditionSettings/MultiEditionSettingsPage';\nimport UserSetting from './UserSetting';\nimport MultiEditionSettings from './MultiEditionSettings';\nimport { receiptAsExamples } from './DatabaseExampleRows'\n\nclass Database {\n  \n  #db: any;\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const dbOpenReq = indexedDB.open('EasyReceipts', 1);\n  \n      dbOpenReq.onerror = (err) => {\n        console.error('error creating/connecting to db', err);\n        reject('Failed to connected/create/update DB');\n      };\n  \n      dbOpenReq.onsuccess = (event: any) => {\n        this.#db = event.target?.result;\n        console.info('connected successfuly to DB')\n        resolve(\"Connected\");\n      };\n  \n      dbOpenReq.onupgradeneeded = (event: any) => {\n        this.#db = event.target?.result;\n  \n        const receiptStore = this.#db.createObjectStore('receipt', {\n          autoIncrement: true\n        });\n        receiptStore.createIndex(\"date\", \"date\", { unique: false });\n        \n        const userSettingStore = this.#db.createObjectStore('userSetting', {keyPath: 'id'});\n\n        const transaction = event.target.transaction;\n        receiptAsExamples.map(receipt => {\n          const addRequest = transaction.objectStore('receipt').add(receipt);\n          addRequest.onsuccess = function() {console.log(`Receipt popuplated [${receipt}]`)};\n        })\n      };\n    });\n  }\n\n  executeWithinTransaction(table: string, changes: {(objectStore: IDBObjectStore) : IDBRequest}) {\n    return new Promise((resolve, reject) => {\n      const transaction = this.#db.transaction([table], 'readwrite');\n      const objectStore = transaction.objectStore(table);\n      \n      const request = changes.apply(undefined, [objectStore]);\n      \n      request.onerror = function(event: any) {\n        console.error(`Error on executing transaction on table ${table}`);\n        reject();\n      };\n      \n      request.onsuccess = function(event: any) {\n        resolve(true);\n      };\n    })\n  }\n\n  fetchById <Type> (table: string, id: any) : Promise<Type | undefined>{\n    return new Promise((resolve, reject) => {\n      var transaction = this.#db.transaction([table]);\n      var objectStore = transaction.objectStore(table);\n      \n      var request = objectStore.get(id);\n      \n      request.onerror = function(event: any) {\n        console.error(`Error on fiding ${id} on table ${table}`);\n        reject();\n      };\n      \n      request.onsuccess = function(event: any) {\n        if (!request.result) {\n          resolve(undefined);\n        } else {\n          const result = request.result;\n          result.id = id;\n          resolve(result as Type);\n        }\n      };\n    })\n  }\n\n  async saveMultiEditionSettings(multiEditionSettings: MultiEditionSettings) {\n    const userSettingME = await this.fetchById('userSetting', 'multi-edition');\n    \n    return this.executeWithinTransaction('userSetting', (objectStore: IDBObjectStore) => {\n      const userSetting = new UserSetting();\n      userSetting.id = 'multi-edition';\n      userSetting.value = JSON.stringify(Array.from(multiEditionSettings.fieldSettings));\n\n      var request;\n      if (!userSettingME) {\n        request = objectStore.add(userSetting);\n      } else {\n        request = objectStore.put(userSetting);\n      }\n      return request;\n    })\n  }\n\n  getMultiEditionSettings() {\n    return new Promise<MultiEditionSettings>(async (resolve, reject) => {\n      const userSetting = await this.fetchById<UserSetting>('userSetting', 'multi-edition');\n\n      if (!userSetting) {\n        resolve(new MultiEditionSettings());\n      } else {\n        resolve(MultiEditionSettings.Instance(new Map<Field, Setting>(JSON.parse(userSetting.value || ''))));\n      }\n    })\n  }\n\n  addReceipt(receipt: Receipt) {\n    return this.executeWithinTransaction('receipt', (objectStore: IDBObjectStore) => {\n      return objectStore.add(receipt);\n    })\n  };\n\n  updateReceipt(receipt: Receipt, id: number) {\n    if (!id) {\n      throw new Error('Id must not be undefined!')\n    }\n    return this.executeWithinTransaction('receipt', (objectStore: IDBObjectStore) => {\n      return objectStore.put(receipt, id);\n    })\n  }\n\n  deleteReceipt(id: number) {\n    return this.executeWithinTransaction('receipt', (objectStore: IDBObjectStore) => {\n      return objectStore.delete(id);\n    })\n  };\n\n  batchDelete(ids: IterableIterator<number>) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      let nextId = ids.next();\n      while (!nextId.done) {\n        transaction.objectStore('receipt').delete(nextId.value);;\n        nextId = ids.next();\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on deleting batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  batchAdd(receipts: IterableIterator<Receipt>) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      let nextReceipt = receipts.next();\n      while (!nextReceipt.done) {\n        transaction.objectStore('receipt').add(nextReceipt.value);;\n        nextReceipt = receipts.next();\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on adding batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  arrayAdd(receipts: Receipt[]) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      for (let i = 0; i < receipts.length; i++) {\n        transaction.objectStore('receipt').add(receipts[i]);;\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on adding batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  //TODO EVOLUIR PARA TRATAR CASOS DE ERRO\n  getReceipts(ids: [number]) {    \n    return new Promise<Receipt[]>((resolve, reject) => {\n      const receipts =  new Array<Receipt>();\n      \n      ids.map((id: number, index: number) => {\n        this.getReceipt(id)\n          .then((receipt) => {\n            receipts.push(receipt);\n            if (index === ids.length - 1) {\n              resolve(receipts);\n            }\n          })\n      })\n    })\n  }\n  //TODO: ADD class type RECEIPT when returning a receipt\n  getReceipt(id: number) {\n    return new Promise<Receipt>(async (resolve, reject) => {\n      const receipt = await this.fetchById<Receipt>('receipt', id);\n\n      if (!receipt) {\n        console.warn('Receipt not found');\n        resolve(new Receipt());\n      } else {\n        resolve(receipt);\n      }\n    })\n  };\n\n  // TODO RETURN RECEIPT OBJECT LIST\n  getAllReceipts() {\n    return new Promise<Receipt[]>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt']);\n      var objectStore = transaction.objectStore('receipt');\n      var receipts: Receipt[] = [];\n\n      objectStore.openCursor().onsuccess = function(event: any) {\n        var cursor = event.target.result;\n        if (cursor) {\n          const receiptModel = new Receipt();\n    \n          receiptModel.payerName = cursor.value.payerName;\n          receiptModel.payerAddress = cursor.value.payerAddress;\n          receiptModel.referrerTo = cursor.value.referrerTo;\n          receiptModel.paidValue = cursor.value.paidValue;\n          receiptModel.date = cursor.value.date;\n          receiptModel.payeeName = cursor.value.payeeName;\n          receiptModel.payeeCpfOrRg = cursor.value.payeeCpfOrRg;\n          receiptModel.payeeAddress = cursor.value.payeeAddress;\n          receiptModel.id = cursor.key;\n          \n          receipts.push(receiptModel);\n          cursor.continue();\n        }\n        else {\n          console.log(\"No more entries!\");\n          resolve(receipts);\n        }\n      };\n    })\n  }\n\n  db() {\n    return this.#db;\n  }\n}\n\n//await database.connect();\nexport default Database;\n\n","import React, {useState, useEffect} from 'react';\n// import './css/Normalize.css';\n// import './css/SkeletonCustomizedByMe.css';\nimport './css/Common.css';\nimport './css/App.css';\n\nimport ReceiptCardsPage from './pages/ListReceiptCards/ListReceiptCardPage';\nimport NewEditReceiptPage from './pages/NewEditReceipt/NewEditReceiptPage';\nimport ReceiptsToPrintPage from './pages/ReceiptsToPrint/ReceiptsToPrintPage';\nimport MultipleEditionSettings from './pages/MultiEditionSettings/MultiEditionSettingsPage';\nimport MultiEditionPage from './pages/MultiEdition/MultiEditionPage';\nimport SettingsPage from './pages/Settings/SettingsPage';\n\nimport Database from './db/Database';\n\ndeclare global {\n  interface Window { Database: any; }\n}      \n\n// #receipt-list\n// #receipt\n// #receipt/102\n// #receipt-clone/100\n// #receipts-to-print?receiptIds=[1,2,3,4,5,6]\n\ninterface RouteTo {\n  path: string;\n  pathId: string;\n  queryString: Map<string,string>;\n}\n\nfunction pathSplitted() {\n  const hash = window.location.hash.substr(1);\n  \n  var params: Map<string,string> = new Map();\n  \n  const splitted = hash.split('/');\n  let path = splitted[0] || '';\n  let pathId = splitted[1] || '';\n  \n  if (hash.includes('?')) {\n    const secondSplit = hash.split('?');\n    path = secondSplit[0];\n  \n    const hashQueryString = secondSplit[1] || '';\n    hashQueryString.split('&').map(hk => { \n      let temp = hk.split('='); \n      params.set(temp[0], temp[1]);\n    });\n  }\n\n  return {\n    path: path,\n    pathId: pathId,\n    queryString: params\n  } as  RouteTo\n}\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(pathSplitted().path);\n  const [identifier, setIdentifier] = useState(parseInt(pathSplitted().pathId));\n  const [hashQueryString, setHashQueryString] = useState<Map<string,string>>(pathSplitted().queryString);\n  function locationHashChanged() {\n    const object = pathSplitted();\n    setCurrentPage(object.path);\n    setIdentifier(parseInt(object.pathId));\n    setHashQueryString(object.queryString);\n  }\n  window.onhashchange = locationHashChanged;\n\n  const [database, setDatabase] = useState<Database>(new Database);\n  \n  useEffect(() => {\n    async function connectDB() {\n      await database.connect();\n      setLoading(false);\n\n      window.Database = database;\n    };\n    connectDB();\n  }, []);\n\n  return (\n    <div className=\"rootApp\">\n      <main>\n        {\n          (() => {\n\n            if (loading) {\n              return <span>Carregando...</span>\n            }\n\n            if (!currentPage ||  currentPage === 'receipt-list') {\n              return <ReceiptCardsPage \n                database={database}>\n              </ReceiptCardsPage>\n            }\n\n            if (currentPage === 'receipt-clone' && identifier) {\n              return <NewEditReceiptPage\n                receiptId={identifier}\n                database={database}\n                toClone\n              />\n            }\n\n            if (currentPage === 'receipt' && identifier) {\n              return <NewEditReceiptPage\n                receiptId={identifier}\n                database={database}\n              />\n            }\n\n            if (currentPage === 'receipt') {\n              return <NewEditReceiptPage\n                database={database}\n              />\n            }\n            \n            const receiptIds = hashQueryString.get('receiptIds');\n            if (currentPage === 'receipts-to-print' && receiptIds != undefined) {\n              return <ReceiptsToPrintPage \n                database={database}\n                receiptIds={JSON.parse(receiptIds)}\n                />\n            }\n\n            const current = hashQueryString.get('current');\n            if (currentPage === 'multi-edition' && receiptIds != undefined) {\n              return <MultiEditionPage\n                database={database}\n                receiptIds={JSON.parse(receiptIds)}\n                currentIndex={current ? parseInt(current) : 0}\n                />\n            }\n\n            if (currentPage === 'multi-edition-settings') {\n              return <MultipleEditionSettings \n                database={database}\n                />\n            }\n\n            if (currentPage === 'settings') {\n              return <SettingsPage/>\n            }\n\n            return \"NOTFOUND\"\n          })()\n        }\n      </main>\n\n      <footer className=\"bottom-app-bar no-printable\">\n        <a className={\"btn btn-ghost px-1 \" + (currentPage == 'receipt-list' || currentPage == '' ? 'opacity-50' : '')} href=\"#receipt-list\" >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\" />\n          </svg>\n          <label className=\"container text-2xs\">Lista</label>\n        </a>\n        <a className={\"btn btn-ghost px-1 \" + (currentPage == 'receipt' ? 'opacity-50' : '')} href=\"#receipt\" >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clip-rule=\"evenodd\" />\n          </svg>\n          <label className=\"container text-2xs\">Novo</label>\n        </a>\n        <a className={\"btn btn-ghost px-1 \" + (currentPage == 'settings' ? 'opacity-50' : '')} href=\"#settings\" >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path d=\"M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z\" />\n          </svg>\n          <label className=\"container text-2xs\">Configurações</label>\n        </a>\n        \n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}