{"version":3,"sources":["db/FriendlyLiteralDate.tsx","db/MultiEditionSettings.tsx","components/receiptcard/ReceiptCard.tsx","components/modal/Modal.tsx","pages/ListReceiptCards/ByMonthReceiptCard.tsx","pages/ListReceiptCards/ListReceiptCardHeader.tsx","pages/ListReceiptCards/ListReceiptCardPage.tsx","db/Receipt.tsx","pages/NewEditReceipt/NewEditReceiptPage.tsx","components/receipt/Receipt.js","components/receipt/ReceiptStub.js","pages/ReceiptsToPrint/ReceiptsToPrintPage.tsx","pages/MultiEditionSettings/MultiEditionSettingForm.tsx","pages/MultiEditionSettings/MultiEditionSettingsPage.tsx","components/receiptform/ReceiptFormInput.tsx","components/receiptform/ReceiptForm.tsx","pages/MultiEdition/MultiEditionPage.tsx","pages/Settings/SettingsPage.tsx","db/UserSetting.tsx","db/Database.tsx","App.tsx","index.tsx"],"names":["monthAsTextMap","friendlyYearAndMonthAsText","Field","Setting","dateAsText","date","Date","year","getFullYear","literalMonth","getMonth","ReceiptCard","observer","props","className","receipt","payerName","onClick","onSelectionChange","isSelected","enableSelection","width","height","viewBox","d","referrerTo","paidValue","href","id","window","confirm","onRemove","Modal","showHideClassName","show","children","handleClose","ByMonthReceiptCard","useState","collapsed","setCollapsed","modalIsVisible","setModalIsVisible","key","title","onSelectAll","receipts","length","map","payerNameFiltering","includes","undefined","receiptsSelected","get","iSelected","ListReceiptCardHeader","pageModalIsVisible","setPageModalIsVisible","onClickToEnableSelectMode","isSelectModeOn","type","name","placeholder","onChange","e","onChangeOfPayerNameToFilter","target","value","onClickToDisableSelectMode","size","onClickToPrintSelectedReceipts","onClickToEditSelectedReceipts","onClickToCloneSelectedReceipts","onClickToDeleteSelectedReceipts","ReceiptCardsPage","database","receiptsByMonth","setReceiptsByMonth","Map","setReceiptSelected","selectMode","setSelectMode","handleSelectAll","a","set","handleSelectionChange","receiptId","delete","handleCloseSelectionMode","fetchReceipts","getAllReceipts","sort","r1","r2","dateAsTimeStamp","rByMonth","reduce","byMonth","r","array","push","useEffect","setPayerNameFiltering","handleRemoveReceipt","deleteReceipt","then","catch","exception","alert","console","log","values","receiptsToClone","nextReceipt","next","done","arrayAdd","batchDelete","keys","i","idNext","receiptIds","Array","location","hash","JSON","stringify","handleClickPrint","handleClickToEditMultiple","keyName","index","friendlyTitle","Receipt","payerAddress","paidValueAsText","payeeName","payeeCpfOrRg","payeeAddress","this","getTime","NewEditReceiptPage","setReceipt","screenMode","setScreenMode","toClone","getReceipt","receiptModel","addReceipt","updateReceipt","handleChange","prevState","history","back","action","noValidate","htmlFor","autoFocus","payer","readOnly","payee","ReceiptStub","ReceiptsToPrintPage","setReceipts","getReceipts","print","MultiEditionSettingsForm","fieldsArray","label","field","PayerName","ReferrerTo","PaidValue","PayerAddress","PayeeName","PayeeCpfOrRg","stepSetting","checked","fieldsSettings","getFieldSetting","otherSetting","disabled","MultiEditionSettings","fieldSettingsMap","ReceiptNumber","None","PaidValueAsText","setting","fieldsToIdentify","forEach","ToIdentify","fieldsToUpdate","ToUpdate","fieldSettings","multiEditionSettings","MultiEditionSettingsPage","setMultiEditionSettings","step","setStep","setFieldSetting","newMESettings","Instance","handleOnChange","getMultiEditionSettings","error","saveMultiEditionSettings","nextPageHash","err","ReceiptFormInput","readonly","ReceiptForm","mapFieldsData","getField","fieldData","MultiEditionPage","loading","setLoading","nextIndex","currentIndex","finally","SettingsPage","UserSetting","Database","Promise","resolve","reject","dbOpenReq","indexedDB","open","onerror","onsuccess","event","result","info","onupgradeneeded","createObjectStore","autoIncrement","keyPath","createIndex","unique","table","changes","objectStore","transaction","request","apply","fetchById","userSettingME","executeWithinTransaction","userSetting","from","put","add","parse","Error","ids","nextId","oncomplete","warn","openCursor","cursor","continue","pathSplitted","substr","params","splitted","split","path","pathId","secondSplit","hk","temp","queryString","App","currentPage","setCurrentPage","parseInt","identifier","setIdentifier","hashQueryString","setHashQueryString","onhashchange","object","connect","connectDB","current","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sZAAMA,G,MAAqB,CACzB,EAAG,UACH,EAAG,YACH,EAAG,WACH,EAAG,QACH,EAAG,OACH,EAAG,QACH,EAAG,QACH,EAAG,SACH,EAAG,WACH,EAAG,UACH,GAAI,WACJ,GAAI,aAmBSC,IC9BVC,EAaAC,EDiBUF,EAff,SAAoCG,GAClC,GAAKA,EAAL,CAIA,IAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAOF,EAAKG,cACZC,EAAeT,EAAeK,EAAKK,YACzC,OAAK,IAAIJ,MAAQE,gBAAkBD,EAC1BE,EAEAA,EAAe,OAASF,I,OEgDpBI,G,MA7DKC,aAAS,SAACC,GAE1B,OACE,yBAAKC,UAAU,gBAEb,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,uBAAuBD,EAAME,QAAQC,WAAa,OAEhE,yBAAKF,UAAU,iCACb,yBAAKA,UAAU,sBACfG,QAAS,kBAAMJ,EAAMK,mBAAmBL,EAAMM,cAC3CN,EAAMO,iBAAoB,yBAAKC,MAAM,OAAOC,OAAO,OAClDC,QAAQ,YACRT,UAAU,uBACV,0BAAMU,EAAE,kIAGTX,EAAMM,YAAe,yBAAKE,MAAM,OAAOC,OAAO,OAC7CC,QAAQ,YACRT,UAAU,uBACV,0BAAMU,EAAE,8HAOhB,yBAAKV,UAAU,yBACb,2BAAID,EAAME,QAAQU,YAAc,OAChC,0BAAMX,UAAU,uBAAhB,MAA0CD,EAAME,QAAQW,WAAa,MAGvE,yBAAKZ,UAAU,wBACb,yBAAKA,UAAU,wBACb,+CAGF,yBAAKA,UAAU,mBAEf,yBAAKA,UAAU,4BACb,uBAAGA,UAAU,uBAAuBa,KAAM,YAAcd,EAAME,QAAQa,IACpE,uBAAGd,UAAU,iBAEf,uBAAGA,UAAU,uBAAuBa,KAAM,kBAAoBd,EAAME,QAAQa,IAC1E,uBAAGd,UAAU,kBAEf,uBAAGA,UAAU,uBAAuBG,QAAS,YAE5B,IADAY,OAAOC,QAAQ,0CAE5BjB,EAAMkB,SAASlB,EAAME,QAAQa,MAG/B,uBAAGd,UAAU,yBC5CZkB,G,MAbD,SAACnB,GACb,IAAMoB,EAAoBpB,EAAMqB,KAAO,sBAAwB,qBAE/D,OACE,yBAAKpB,UAAWmB,GACd,6BAASnB,UAAU,cAChBD,EAAMsB,SACP,uBAAGlB,QAASJ,EAAMuB,aAAlB,gBC6DOC,EA5DY,SAACxB,GAE1B,MAAkCyB,oBAAkB,GAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4CF,qBAA5C,mBAAOG,EAAP,KAAuBC,EAAvB,KAMA,OACE,yBAAK5B,UAAU,8BAA8B6B,IAAK9B,EAAM+B,OAEtD,kBAAC,EAAD,CAAOV,KAAMO,EAAgBL,YAAa,WAAOM,GAAkB,KACjE,uBAAGzB,QART,WACEJ,EAAMgC,YAAYhC,EAAMiC,UACxBJ,GAAkB,KAMd,qBAKF,yBAAK5B,UAAU,6BACb,yBAAKA,UAAU,mCACb,uBAAGA,UAAW,QACTyB,EAAY,oBAAsB,oBAErCtB,QAAS,kBAAMuB,GAAcD,MAE/B,0BAAMzB,UAAU,4BAA4BD,EAAM+B,OAClD,0BAAM9B,UAAU,8BAA8BD,EAAMiC,SAASC,SAE/D,yBAAKjC,UAAU,oCACb,uBACEA,UAAU,4CACVG,QAAS,kBAAMyB,GAAkB,QAIvC,yBAAK5B,UAAU,2BAEbD,EAAMiC,SAASE,KAAI,SAACjC,GAClB,OAAIwB,KAIA1B,EAAMoC,oBAAwBlC,EAAQC,WAAcD,EAAQC,UAAUkC,SAASrC,EAAMoC,oBAIlF,kBAAC,EAAD,CACHlC,QAASA,EACTgB,SAAUlB,EAAMkB,SAChBX,gBAAiBP,EAAMO,gBACvBD,gBAAwDgC,IAA5CtC,EAAMuC,iBAAiBC,IAAItC,EAAQa,IAC/CV,kBAAmB,SAACoC,GAAD,OAAezC,EAAMK,kBAAkBH,EAAQa,GAAK0B,EAAYvC,OAAUoC,WATjG,SCsCKI,EAhFe,SAAC1C,GAC7B,MAAoDyB,qBAApD,mBAAOkB,EAAP,KAA2BC,EAA3B,KAMA,OACE,6BACE,kBAAC,EAAD,CACEvB,KAAMsB,EACNpB,YAAa,WAAOqB,GAAsB,KAC1C,uBAAGxC,QAAS,WACRJ,EAAM6C,4BACND,GAAsB,KAF1B,wBAQA5C,EAAM8C,gBACN,4BAAQ7C,UAAU,eAChB,yBAAKA,UAAU,2BACb,2BACE,uBAAGA,UAAU,kBAIjB,yBAAKA,UAAU,sBAAf,iBAIA,yBAAKA,UAAU,2BACb,uBAAGA,UAAU,oBAAoBG,QAAS,kBAAMwC,GAAsB,MACtE,2BACIG,KAAK,SACLC,KAAK,SACLC,YAAY,oBACZlC,GAAG,SACHd,UAAU,SACViD,SAAU,SAACC,GAAD,OAAOnD,EAAMoD,4BAA4BD,EAAEE,OAAOC,YAMrEtD,EAAM8C,gBACL,4BAAQ7C,UAAU,eAChB,yBAAKA,UAAU,2BACb,2BACE,uBAAGG,QA/Cf,WACEJ,EAAMuD,8BA+CMtD,UAAU,mBAKhB,yBAAKA,UAAU,sBACoB,IAAhCD,EAAMuC,iBAAiBiB,MAAe,qBACtCxD,EAAMuC,iBAAiBiB,KAAO,GAC7BxD,EAAMuC,iBAAiBiB,MAK3B,yBAAKvD,UAAU,2BACZD,EAAMuC,iBAAiBiB,KAAO,GAC7B,6BACE,uBAAGvD,UAAU,eAAeG,QAASJ,EAAMyD,iCAC3C,uBAAGxD,UAAU,cAAcG,QAASJ,EAAM0D,gCAC1C,uBAAGzD,UAAU,eAAeG,QAASJ,EAAM2D,iCAC3C,uBAAG1D,UAAU,eAAeG,QAASJ,EAAM4D,uCCwF5CC,EAtKU,SAAC7D,GACxB,IAAM8D,EAAW9D,EAAM8D,SACvB,EAA8CrC,qBAA9C,mBAAOsC,EAAP,KAAwBC,EAAxB,KACA,EAA+CvC,mBAA+B,IAAIwC,KAAlF,mBAAO1B,EAAP,KAAyB2B,EAAzB,KAEA,EAAoCzC,oBAAkB,GAAtD,mBAAO0C,EAAP,KAAmBC,EAAnB,KAEA,SAASC,EAAgBpC,GACvB,IAAMqC,EAAI,IAAIL,IAAI1B,GAClBN,EAASE,KAAI,SAACjC,GACZoE,EAAEC,IAAIrE,EAAQa,GAAKb,MAErBgE,EAAmBI,GACnBF,GAAc,GAGhB,SAASI,EAAsBC,EAAmBvE,GAChD,GAAIA,EACFgE,EAAmB,IAAID,IAAI1B,GAAkBgC,IAAIE,EAAWvE,QACvD,CACL,IAAMoE,EAAI,IAAIL,IAAI1B,GAClB+B,EAAEI,OAAOD,GACTP,EAAmBI,IAIvB,SAASK,IACPP,GAAc,GACdF,EAAmB,IAAID,KA5Bc,SAoGxBW,IApGwB,2EAoGvC,8BAAAN,EAAA,sEACoCR,EAASe,iBAD7C,QACQ5C,EADR,QAEW6C,MAAK,SAACC,EAAIC,GAAL,OAAYA,EAAGC,gBAAkBF,EAAGE,mBAE5CC,EAAWjD,EAASkD,QAAO,SAACC,EAASC,GACzC,IAAMC,EAAmBF,EAAQ5C,IAAI6C,EAAE7F,OAAS,GAGhD,OAFA8F,EAAMC,KAAKF,GACXD,EAAQb,IAAIc,EAAE7F,KAAM8F,GACbF,IACN,IAAInB,KAEPD,EAAmBkB,GAXrB,4CApGuC,sBAgGvCM,qBAAU,WACRZ,MACC,IAeH,MAAmDnD,mBAAS,IAA5D,mBAAMW,EAAN,KAA0BqD,EAA1B,KAEA,SAASC,EAAoB3E,GAE3B+C,EAAS6B,cAAc5E,GACpB6E,KADH,sBACQ,sBAAAtB,EAAA,sDACJM,IADI,4CAGLiB,OAAM,SAACC,GACNC,MAAM,mEACNC,QAAQC,IAAIH,MAIlB,OACE,yBAAK7F,UAAU,iBAEb,kBAAC,EAAD,CACE6C,eAAgBqB,EAChBf,4BAA6BqC,EAC7B9B,+BA/DN,WACE,IAAM1B,EAAWM,EAAiB2D,SAElC,IAAe,IADAlF,OAAOC,QAAP,yCAA2CsB,EAAiBiB,KAA5D,cACM,CAGnB,IAFA,IAAM2C,EAA6B,GAC/BC,EAAcnE,EAASoE,QACnBD,EAAYE,MAAM,CACxB,IAAMpG,EAAmBkG,EAAY9C,MAErCpD,EAAQV,UAAO8C,EACf6D,EAAgBZ,KAAKrF,GACrBkG,EAAcnE,EAASoE,OAGzBvC,EAASyC,SAASJ,GACfP,KADH,sBACQ,sBAAAtB,EAAA,sDACJM,IACAD,IAFI,4CAILkB,OAAM,SAACC,GACNC,MAAM,yDACNC,QAAQC,IAAIH,QA2CdlC,gCA3FN,YAEiB,IADA5C,OAAOC,QAAP,sCAAwCsB,EAAiBiB,KAAzD,eAEbM,EAAS0C,YAAYjE,EAAiBkE,QACnCb,KADH,sBACQ,sBAAAtB,EAAA,sDACJM,IACAD,IAFI,4CAILkB,OAAM,SAACC,GACNC,MAAM,qEACNC,QAAQC,IAAIH,OAkFdvC,2BAA4BoB,EAC5B9B,0BAA2B,kBAAMuB,GAAc,IAC/CX,+BAAgC,kBA1GtC,WAKE,IAJA,IAAMiD,EAAInE,EAAiBkE,OAEvBE,EAASD,EAAEL,OACXO,EAAa,IAAIC,OACbF,EAAOL,MACbM,EAAWrB,KAAKoB,EAAOrD,OACvBqD,EAASD,EAAEL,OAEbrF,OAAO8F,SAASC,KAAhB,uCAAuDC,KAAKC,UAAUL,IAiG5BM,IACtCxD,8BAA+B,kBAhFrC,WAKE,IAJA,IAAMgD,EAAInE,EAAiBkE,OAEvBE,EAASD,EAAEL,OACXO,EAAa,IAAIC,OACbF,EAAOL,MACbM,EAAWrB,KAAKoB,EAAOrD,OACvBqD,EAASD,EAAEL,OAEbrF,OAAO8F,SAASC,KAAhB,oCAAoDC,KAAKC,UAAUL,IAuE1BO,IACrC5E,iBAAkBA,IAIlBwB,GAAmB,YAAIA,EAAgB0C,QAAQtE,KAAI,SAACiF,EAASC,GAE3D,IAAMpF,EAAsB8B,EAAgBvB,IAAI4E,IAAY,GACtDE,EAAgBlI,EAA2BgI,IAAY,4CAE7D,OACE,kBAAC,EAAD,CACErF,MAAOuF,EACPrF,SAAUA,EACV1B,gBAAiB4D,EACjB5B,iBAAkBA,EAClBH,mBAAoBA,EACpBlB,SAAUwE,EACVrF,kBAAmBmE,EACnBxC,YAAaqC,S,sBChJZkD,E,iDArBbxG,Q,OACAZ,e,OACAqH,kB,OACA5G,gB,OACAC,e,OACA4G,qB,OACAjI,U,OACAkI,e,OACAC,kB,OACAC,kB,mDAEA,WACE,OAAIC,KAAKrI,KACS,IAAIC,KAAKoI,KAAKrI,MACrBsI,UAEJ,qB,KCuOIC,EA7OY,SAAC/H,GAE1B,IAAM8D,EAAW9D,EAAM8D,SACvB,EAA8BrC,mBAAc,IAAI8F,GAAhD,mBAAOrH,EAAP,KAAgB8H,EAAhB,KACA,EAAoCvG,mBAAS,UAA7C,mBAAOwG,EAAP,KAAmBC,EAAnB,KAEA1C,qBAAU,WACJxF,EAAMyE,WACJzE,EAAMmI,QACRD,EAAc,SAEdA,EAAc,QAGhBpE,EAASsE,WAAWpI,EAAMyE,WACvBmB,MAAK,SAAC1F,GACL8H,EAAW9H,MAEZ2F,OAAM,SAACC,GACNC,MAAM,6CACNC,QAAQC,IAAIH,OAGhBoC,EAAc,YAEf,CAAClI,EAAMyE,YAEV,IAIM6B,EAAI,uCAAG,4BAAAhC,EAAA,0DACL+D,EAAe,IAAId,GAEZpH,UAAYD,EAAQC,UACjCkI,EAAab,aAAetH,EAAQsH,aACpCa,EAAazH,WAAaV,EAAQU,WAClCyH,EAAaxH,UAAYX,EAAQW,UACjCwH,EAAaZ,gBAAkBvH,EAAQuH,gBACvCY,EAAa7I,KAAOU,EAAQV,KAC5B6I,EAAaX,UAAYxH,EAAQwH,UACjCW,EAAaV,aAAezH,EAAQyH,aACpCU,EAAaT,aAAe1H,EAAQ0H,aAEjB,UAAfK,EAbO,kCAcHnE,EAASwE,WAAWD,GAdjB,WAgBQ,SAAfJ,EAhBO,kCAiBHnE,EAASyE,cAAcF,EAAcrI,EAAMyE,WAjBxC,WAmBQ,WAAfwD,EAnBO,kCAoBHnE,EAASwE,WAAWD,GApBjB,QAsBXrH,OAAO8F,SAASC,KAAO,gBAtBZ,4CAAH,qDAyBJyB,EAAe,SAASrF,GAC5B,MAAsBA,EAAEE,OAAjBL,EAAP,EAAOA,KAAMM,EAAb,EAAaA,MAEb0E,GAAW,SAACS,GACV,IAAIvI,EAAO,eAAQuI,GAEnB,OADAvI,EAAQ8C,GAAQM,EACTpD,MAIX,OACE,yBAAKD,UAAU,eACb,4BAAQA,UAAU,eAChB,yBAAKA,UAAU,2BACb,uBAAGG,QAAS,kBAAOY,OAAO0H,QAAQC,SAChC,uBAAG1I,UAAU,wBAIjB,yBAAKA,UAAU,sBACC,WAAbgI,GAAyB,UACZ,SAAbA,GAAuB,WACV,UAAbA,GAAwB,YAGd,UAAZA,GACD,yBAAKhI,UAAU,2BACb,uBAAGG,QAAS,WAvDlBY,OAAO8F,SAASC,KAAO,kBAwDf,uBAAG9G,UAAU,sCAKnB,0BAAMA,UAAU,eAAe+C,KAAK,eAClC4F,OAAO,sBACPC,YAAU,GASV,yBAAK5I,UAAU,iBAEb,2CAEA,2BAAO6I,QAAS,aAAhB,oBACA,2BACE7I,UAAU,eACV8C,KAAK,OACLC,KAAM,YACNC,YAAY,GACZlC,GAAI,YACJuC,MAAOpD,EAAQC,UACf+C,SAAUsF,EACVO,WAAS,IAGX,2BAAOD,QAAS,cAAhB,aACA,2BACE7I,UAAU,eACV8C,KAAK,OACLC,KAAM,aACNC,YAAY,GACZlC,GAAI,aACJuC,MAAOpD,EAAQU,WACfsC,SAAUsF,IAGZ,2BAAOM,QAAS,aAAhB,SACA,2BACE7I,UAAU,eACV8C,KAAK,SACLC,KAAM,YACNC,YAAY,GACZlC,GAAI,YACJuC,MAAOpD,EAAQW,UACfqC,SAAUsF,KAIZ,2BAAOM,QAAS,gBAAhB,eACA,2BACE7I,UAAU,eACV8C,KAAK,OACLC,KAAM,eACNC,YAAY,GACZlC,GAAI,eACJuC,MAAOpD,EAAQsH,aACftE,SAAUsF,IAEZ,yBAAKvI,UAAU,mBAajB,yBAAKA,UAAU,gBACb,2BAAO6I,QAAS,QAAhB,QACA,2BACE7I,UAAU,eACV8C,KAAK,OACLC,KAAM,OACNC,YAAY,GACZlC,GAAI,OACJuC,MAAOpD,EAAQV,KACf0D,SAAUsF,KAKd,yBAAKvI,UAAU,6BACb,4CACA,yBAAKA,UAAU,cACb,6BACE,2BAAO6I,QAAS,aAAhB,YACA,2BACE7I,UAAU,eACV8C,KAAK,OACLC,KAAM,YACNC,YAAY,GACZlC,GAAI,YACJuC,MAAOpD,EAAQwH,UACfxE,SAAUsF,KAGd,6BACE,2BAAOM,QAAS,gBAAhB,UACA,2BACE7I,UAAU,eACV8C,KAAK,OACLC,KAAM,eACNC,YAAY,GACZlC,GAAI,eACJuC,MAAOpD,EAAQyH,aACfzE,SAAUsF,MAKhB,2BAAOM,QAAS,gBAAhB,eACA,2BACE7I,UAAU,eACV8C,KAAK,OACLC,KAAM,eACNC,YAAY,GACZlC,GAAI,eACJuC,MAAOpD,EAAQ0H,aACf1E,SAAUsF,KAad,yBAAKvI,UAAU,cACb,4BAAQG,QAAS,kBAAMkG,MAAvB,cCvGKiB,G,MAlICxH,aAAS,SAACC,GAEtB,OACE,yBAAKC,UAAU,qBAEb,yBAAKA,UAAU,kBACb,wCAEA,6BACE,2BAAO6I,QAAS,iBAAmB9I,EAAMqH,OAAzC,UACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,iBAAmBhD,EAAMqH,MAC/BpE,YAAY,GACZlC,GAAI,iBAAmBf,EAAMqH,SAIjC,6BACE,2BAAOyB,QAAS,aAAe9I,EAAMqH,OAArC,SACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,aAAehD,EAAMqH,MAC3BpE,YAAY,GACZlC,GAAI,aAAef,EAAMqH,MACzB/D,MAAOtD,EAAME,QAAQW,UAAWqC,SAAU,SAACC,GAAD,OAAOnD,EAAME,QAAQW,UAAYsC,EAAEE,OAAOC,WAI1F,yBAAKrD,UAAU,iBACb,2BAAO6I,QAAS,SAAW9I,EAAMqH,OAAjC,oBACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,SAAWhD,EAAMqH,MACvBpE,YAAY,GACZlC,GAAI,SAAWf,EAAMqH,MACrB/D,MAAOtD,EAAME,QAAQ8I,MAAO9F,SAAU,SAACC,GAAD,OAAOnD,EAAME,QAAQ8I,MAAQ7F,EAAEE,OAAOC,SAE9E,2BAAOwF,QAAS,gBAAkB9I,EAAMqH,OAAxC,eACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,gBAAkBhD,EAAMqH,MAC9BpE,YAAY,GACZlC,GAAI,gBAAkBf,EAAMqH,MAC5B/D,MAAOtD,EAAME,QAAQsH,aAActE,SAAU,SAACC,GAAD,OAAOnD,EAAME,QAAQsH,aAAerE,EAAEE,OAAOC,SAE5F,2BAAOwF,QAAS,mBAAqB9I,EAAMqH,OAA3C,uBACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,mBAAqBhD,EAAMqH,MACjCpE,YAAY,GACZlC,GAAI,mBAAqBf,EAAMqH,MAC/B/D,MAAOtD,EAAME,QAAQuH,gBAAiBvE,SAAU,SAACC,GAAD,OAAOnD,EAAME,QAAQuH,gBAAkBtE,EAAEE,OAAOC,SAElG,2BAAOwF,QAAS,cAAgB9I,EAAMqH,OAAtC,aACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,cAAgBhD,EAAMqH,MAC5BpE,YAAY,GACZlC,GAAI,cAAgBf,EAAMqH,MAC1B/D,MAAOtD,EAAME,QAAQU,WAAYsC,SAAU,SAACC,GAAD,OAAOnD,EAAME,QAAQU,WAAauC,EAAEE,OAAOC,UAG1F,yBAAKrD,UAAU,gBACb,2BAAO6I,QAAS,QAAU9I,EAAMqH,OAAhC,QACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,QAAUhD,EAAMqH,MACtBpE,YAAY,GACZlC,GAAI,QAAUf,EAAMqH,MACpB/D,MAAOtD,EAAMR,KACbyJ,UAAQ,KAGZ,yBAAKhJ,UAAU,iBACb,yBAAKA,UAAU,cACb,6BACE,2BAAO6I,QAAS,SAAW9I,EAAMqH,OAAjC,YACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,SAAWhD,EAAMqH,MACvBpE,YAAY,GACZlC,GAAI,SAAWf,EAAMqH,MACrB/D,MAAOtD,EAAMkJ,MACbD,UAAQ,KAEZ,6BACE,2BAAOH,QAAS,gBAAkB9I,EAAMqH,OAAxC,UACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,gBAAkBhD,EAAMqH,MAC9BpE,YAAY,GACZlC,GAAI,gBAAkBf,EAAMqH,MAC5B/D,MAAOtD,EAAM2H,aACbsB,UAAQ,MAId,2BAAOH,QAAS,gBAAkB9I,EAAMqH,OAAxC,eACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,gBAAkBhD,EAAMqH,MAC9BpE,YAAY,GACZlC,GAAI,gBAAkBf,EAAMqH,MAC5B/D,MAAOtD,EAAM4H,aACbqB,UAAQ,IAEV,2BAAOH,QAAS,kBAAoB9I,EAAMqH,OAA1C,cACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,kBAAoBhD,EAAMqH,MAChCpE,YAAY,GACZlC,GAAI,kBAAoBf,EAAMqH,cCxC3B8B,EAnFKpJ,aAAS,SAACC,GAE1B,OACE,yBAAKC,UAAU,qBAEb,yBAAKA,UAAU,kBACb,6BACE,2BAAO6I,QAAS,iBAAmB9I,EAAMqH,OAAzC,UACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,iBAAmBhD,EAAMqH,MAC/BpE,YAAY,GACZlC,GAAI,iBAAmBf,EAAMqH,SAIjC,6BACE,2BAAOyB,QAAS,aAAe9I,EAAMqH,OAArC,SACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,aAAehD,EAAMqH,MAC3BpE,YAAY,GACZlC,GAAI,aAAef,EAAMqH,MACzB/D,MAAOtD,EAAME,QAAQW,UAAWqC,SAAU,SAACC,GAAD,OAAOnD,EAAME,QAAQW,UAAYsC,EAAEE,OAAOC,WAI1F,yBAAKrD,UAAU,iBACb,2BAAO6I,QAAS,SAAW9I,EAAMqH,OAAjC,oBACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,SAAWhD,EAAMqH,MACvBpE,YAAY,GACZlC,GAAI,SAAWf,EAAMqH,MACrB/D,MAAOtD,EAAME,QAAQ8I,MAAO9F,SAAU,SAACC,GAAD,OAAOnD,EAAME,QAAQ8I,MAAQ7F,EAAEE,OAAOC,SAE9E,2BAAOwF,QAAS,gBAAkB9I,EAAMqH,OAAxC,eACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,gBAAkBhD,EAAMqH,MAC9BpE,YAAY,GACZlC,GAAI,gBAAkBf,EAAMqH,MAC5B/D,MAAOtD,EAAME,QAAQsH,aAActE,SAAU,SAACC,GAAD,OAAOnD,EAAME,QAAQsH,aAAerE,EAAEE,OAAOC,SAE5F,2BAAOwF,QAAS,mBAAqB9I,EAAMqH,OAA3C,uBACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,mBAAqBhD,EAAMqH,MACjCpE,YAAY,GACZlC,GAAI,mBAAqBf,EAAMqH,MAC/B/D,MAAOtD,EAAME,QAAQuH,gBAAiBvE,SAAU,SAACC,GAAD,OAAOnD,EAAME,QAAQuH,gBAAkBtE,EAAEE,OAAOC,SAElG,2BAAOwF,QAAS,cAAgB9I,EAAMqH,OAAtC,aACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,cAAgBhD,EAAMqH,MAC5BpE,YAAY,GACZlC,GAAI,cAAgBf,EAAMqH,MAC1B/D,MAAOtD,EAAME,QAAQU,WAAYsC,SAAU,SAACC,GAAD,OAAOnD,EAAME,QAAQU,WAAauC,EAAEE,OAAOC,UAG1F,yBAAKrD,UAAU,gBACb,2BAAO6I,QAAS,QAAU9I,EAAMqH,OAAhC,QACA,2BACEpH,UAAU,eACV8C,KAAK,OACLC,KAAM,QAAUhD,EAAMqH,MACtBpE,YAAY,GACZlC,GAAI,QAAUf,EAAMqH,MACpB/D,MAAOtD,EAAMR,KACbyJ,UAAQ,SCHLG,EApEa,SAACpJ,GAC3B,IAAM8D,EAAW9D,EAAM8D,SACvB,EAAgCrC,mBAAgB,IAAhD,mBAAOQ,EAAP,KAAiBoH,EAAjB,KAUA,OARA7D,qBAAU,WAAM,4CACd,4BAAAlB,EAAA,sEACyBR,EAASwF,YAAYtJ,EAAM4G,YADpD,OACQ3E,EADR,OAEEoH,EAAYpH,GAFd,4CADc,uBAAC,WAAD,wBAKd2C,KACC,IAGD,yBAAK3E,UAAU,yBAEb,4BAAQA,UAAU,4BAChB,yBAAKA,UAAU,2BACb,uBAAGG,QAAS,kBAAOY,OAAO0H,QAAQC,SAChC,uBAAG1I,UAAU,wBAIjB,yBAAKA,UAAU,sBAAf,aAKF,yBAAKA,UAAU,kBACb,4BAAQA,UAAU,8BAA8BG,QAASY,OAAOuI,OAAhE,aAKF,yBAAKtJ,UAAU,IACb,wCACCgC,EAASE,KAAI,SAACjC,GAAD,OACZ,yBAAK4B,IAAK5B,EAAQa,IAChB,kBAAC,EAAD,CACEe,IAAK5B,EAAQa,GACbsG,MAAOnH,EAAQa,GACfmI,MAAOhJ,EAAQwH,UACfC,aAAczH,EAAQyH,aACtBC,aAAc1H,EAAQ0H,aACtBpI,KAAMU,EAAQV,KACdU,QAASA,QAKf,uCACC+B,EAASE,KAAI,SAACjC,GAAD,OACZ,yBAAK4B,IAAK5B,EAAQa,IAChB,kBAAC,EAAD,CACEe,IAAK5B,EAAQa,GACbsG,MAAOnH,EAAQa,GACfmI,MAAOhJ,EAAQwH,UACfC,aAAczH,EAAQyH,aACtBC,aAAc1H,EAAQ0H,aACtBpI,KAAMU,EAAQV,KACdU,QAASA,WCdRsJ,EA3CkB,SAACxJ,GAEhC,IAAMyJ,EAAc,CAClB,CAAC1I,GAAI,YAAa2I,MAAO,mBAAoBC,MAAOtK,EAAMuK,WAC1D,CAAC7I,GAAI,aAAc2I,MAAO,YAAaC,MAAOtK,EAAMwK,YACpD,CAAC9I,GAAI,YAAa2I,MAAO,QAASC,MAAOtK,EAAMyK,WAC/C,CAAC/I,GAAI,eAAgB2I,MAAO,cAAYC,MAAOtK,EAAM0K,cACrD,CAAChJ,GAAI,OAAQ2I,MAAO,OAAQC,MAAOtK,EAAMI,MACzC,CAACsB,GAAI,YAAa2I,MAAO,WAAYC,MAAOtK,EAAM2K,WAClD,CAACjJ,GAAI,eAAgB2I,MAAO,SAAUC,MAAOtK,EAAM4K,eAGrD,OACE,0BAAMjH,KAAM,qBAAuBhD,EAAMkK,YACvCtB,OAAO,sBACPC,YAAU,GAETY,EAAYtH,KAAI,SAACwH,GAChB,OACA,6BACE,2BAAOb,QAASa,EAAM5I,IAAK4I,EAAMD,OACjC,2BACE1G,KAAM2G,EAAM5I,GACZA,GAAI4I,EAAM5I,GACVgC,KAAK,WACLoH,QAASnK,EAAMoK,eAAeC,gBAAgBV,EAAMA,SAAW3J,EAAMkK,YACrEhH,SAAU,kBAAMlD,EAAMkD,SAASyG,EAAMA,MAAO3J,EAAMkK,YAAalK,EAAMsK,eACrEC,SAAUvK,EAAMoK,eAAeC,gBAAgBV,EAAMA,SAAW3J,EAAMsK,mBAM5E,yBAAKrK,UAAU,cACZD,EAAMsB,a,SX7CVjC,K,8BAAAA,E,sBAAAA,E,wBAAAA,E,sBAAAA,E,4BAAAA,E,kCAAAA,E,YAAAA,E,sBAAAA,E,4BAAAA,E,6BAAAA,M,cAaAC,K,YAAAA,E,wBAAAA,E,qBAAAA,M,SAqEUkL,E,WArDb,aAAe,yBARfC,sBAQc,EACX5C,KAAK4C,iBAAmB,IAAIxG,IAAoB,CAC/C,CAAC5E,EAAMqL,cAAepL,EAAQqL,MAC9B,CAACtL,EAAMuK,UAAWtK,EAAQqL,MAC1B,CAACtL,EAAMwK,WAAYvK,EAAQqL,MAC3B,CAACtL,EAAMyK,UAAWxK,EAAQqL,MAC1B,CAACtL,EAAM0K,aAAczK,EAAQqL,MAC7B,CAACtL,EAAMuL,gBAAiBtL,EAAQqL,MAChC,CAACtL,EAAMI,KAAMH,EAAQqL,MACrB,CAACtL,EAAM2K,UAAW1K,EAAQqL,MAC1B,CAACtL,EAAM4K,aAAc3K,EAAQqL,Q,+CAKjC,WACE,OAAO9C,KAAK4C,mB,6BAGd,SAAgBd,GACd,OAAO9B,KAAK4C,iBAAiBjI,IAAImH,K,6BAGnC,SAAgBA,EAAckB,GAC5BhD,KAAK4C,iBAAiBlG,IAAIoF,EAAOkB,K,8BAGnC,WACE,IAAMC,EAAmB,IAAIjE,MAQ7B,OANAgB,KAAK4C,iBAAiBM,SAAQ,SAACF,EAAkBlB,GAC3CkB,IAAYvL,EAAQ0L,YACtBF,EAAiBvF,KAAKoE,MAInBmB,I,4BAGT,WACE,IAAMG,EAAiB,IAAIpE,MAQ3B,OANAgB,KAAK4C,iBAAiBM,SAAQ,SAACF,EAAkBlB,GAC3CkB,IAAYvL,EAAQ4L,UACtBD,EAAe1F,KAAKoE,MAIjBsB,K,uBAtDT,SAAgBE,GACd,IAAMC,EAAuB,IAAIZ,EAEjC,OADAY,EAAqBX,iBAAmBU,EACjCC,M,KYiHIC,EAhIkB,SAACrL,GAChC,MAAwDyB,mBAA+B,IAAI+I,GAA3F,mBAAOY,EAAP,KAA6BE,EAA7B,KAEA,EAAwB7J,mBAAiB,GAAzC,mBAAO8J,EAAP,KAAaC,EAAb,KAYA,SAASC,EAAgB9B,EAAckB,GACrC,IAAMa,EAAgBlB,EAAqBmB,SAASP,EAAqBD,eACzEO,EAAcD,gBAAgB9B,EAAOkB,GACrCS,EAAwBI,GAG1B,SAASE,EAAejC,EAAcO,EAAsBI,GAC1D,IAAMO,EAAUO,EAAqBf,gBAAgBV,GAEjDkB,IAAYX,GACduB,EAAgB9B,EAAOrK,EAAQqL,MAG7BE,IAAYP,GACdmB,EAAgB9B,EAAOO,GAGrBW,IAAYvL,EAAQqL,MACtBc,EAAgB9B,EAAOO,GA+B3B,OA3DA1E,qBAAU,WACRxF,EAAM8D,SAAS+H,0BACdjG,MAAK,SAACwF,GACLE,EAAwBF,MAEzBvF,OAAM,WACLG,QAAQ8F,MAAM,oCAEf,IAoDF,6BACE,4BAAQ7L,UAAU,eACf,yBAAKA,UAAU,2BACb,uBAAGG,QA/BX,WACc,GAARmL,EACFvK,OAAO0H,QAAQC,OAEf6C,EAAQD,EAAO,KA4BT,uBAAGtL,UAAU,wBAIjB,yBAAKA,UAAU,sBACL,IAAPsL,GAAY,iCACL,IAAPA,GAAY,yBAGf,yBAAKtL,UAAU,2BACb,uBAAGG,QAlCX,WACEY,OAAO0H,QAAQC,SAkCP,uBAAG1I,UAAU,sCAKX,IAAPsL,GACD,6BACE,4BACA,yIACA,kBAAC,EAAD,CACEnB,eAAgBgB,EAChBlB,YAAa5K,EAAQ0L,WACrBV,aAAchL,EAAQ4L,SACtBhI,SAAU0I,GAEV,yBAAK3L,UAAU,cACb,4BAAQG,QAAS,kBAAMoL,EAAQ,KAA/B,gBAQE,IAAPD,GACD,6BACE,4BACA,+FAEA,kBAAC,EAAD,CACEnB,eAAgBgB,EAChBlB,YAAa5K,EAAQ4L,SACrBZ,aAAchL,EAAQ0L,WACtB9H,SAAU0I,GAEV,yBAAK3L,UAAU,cACb,4BAAQG,QAnElB,WACEJ,EAAM8D,SAASiI,yBAAyBX,GACrCxF,MAAK,WACA5F,EAAMgM,aACRhL,OAAO8F,SAASC,KAAO/G,EAAMgM,aAE7BhL,OAAO0H,QAAQC,UAGlB9C,OAAM,SAACoG,GACNlG,MAAM,0BACNC,QAAQC,IAAIgG,QAwDR,wBCxFGC,EA7BU,SAAClM,GACxB,OACE,8BACIA,EAAMmM,UACN,6BACE,2BAAOrD,QAAS9I,EAAMe,IAAKf,EAAM0J,OACjC,2BACAzJ,UAAU,eACV8C,KAAM/C,EAAM+C,KACZC,KAAMhD,EAAMe,GACZkC,YAAY,GACZlC,GAAIf,EAAMe,GACVuC,MAAOtD,EAAMsD,MACbJ,SAAUlD,EAAMkD,SAChB6F,WAAS,KAKZ/I,EAAMmM,UACL,6BACE,2BAAOrD,QAAS9I,EAAMe,IAAKf,EAAM0J,OACjC,8BAAO1J,EAAMsD,UCqDR8I,EA1EK,SAACpM,GACnB,MAA8ByB,mBAAczB,EAAME,SAAW,IAAIqH,GAAjE,mBAAOrH,EAAP,KAAgB8H,EAAhB,KAEAxC,qBAAU,WACRwC,EAAWhI,EAAME,WAChB,CAACF,EAAME,QAAQa,KAElB,IAAMyH,EAAe,SAASrF,GAC5B,MAAsBA,EAAEE,OAAjBL,EAAP,EAAOA,KAAMM,EAAb,EAAaA,MAEb0E,GAAW,SAACS,GACV,IAAIvI,EAAO,eAAQuI,GAEnB,OADAvI,EAAQ8C,GAAQM,EACTpD,KAGT,IAAMmI,EAAe,IAAId,EACzBc,EAAatH,GAAKb,EAAQa,GAC1BsH,EAAalI,UAAYD,EAAQC,UACjCkI,EAAab,aAAetH,EAAQsH,aACpCa,EAAazH,WAAaV,EAAQU,WAClCyH,EAAaxH,UAAYX,EAAQW,UACjCwH,EAAaZ,gBAAkBvH,EAAQuH,gBACvCY,EAAa7I,KAAOU,EAAQV,KAC5B6I,EAAaX,UAAYxH,EAAQwH,UACjCW,EAAaV,aAAezH,EAAQyH,aACpCU,EAAaT,aAAe1H,EAAQ0H,aAEpC5H,EAAMkD,SAASmF,IAGXgE,EAAgB,IAAIpI,IAAgB,CACxC,CAAC5E,EAAMuK,UAAW,CAAC7I,GAAI,YAAa2I,MAAO,mBAAoBpG,MAAOpD,EAAQC,UAAW4C,KAAM,SAC/F,CAAC1D,EAAMwK,WAAY,CAAC9I,GAAI,aAAc2I,MAAO,YAAapG,MAAOpD,EAAQU,WAAYmC,KAAM,SAC3F,CAAC1D,EAAMyK,UAAW,CAAC/I,GAAI,YAAa2I,MAAO,QAASpG,MAAOpD,EAAQW,UAAWkC,KAAM,SACpF,CAAC1D,EAAM0K,aAAc,CAAChJ,GAAI,eAAgB2I,MAAO,cAAYpG,MAAOpD,EAAQsH,aAAczE,KAAM,SAChG,CAAC1D,EAAMI,KAAM,CAACsB,GAAI,OAAQ2I,MAAO,OAAQpG,MAAOpD,EAAQV,KAAMuD,KAAM,SACpE,CAAC1D,EAAM2K,UAAW,CAACjJ,GAAI,YAAa2I,MAAO,WAAYpG,MAAOpD,EAAQwH,UAAW3E,KAAM,SACvF,CAAC1D,EAAM4K,aAAc,CAAClJ,GAAI,eAAgB2I,MAAO,SAAUpG,MAAOpD,EAAQyH,aAAc5E,KAAM,WAGhG,SAASuJ,EAAS3C,EAAcwC,GAC9B,IAAMI,EAAYF,EAAc7J,IAAImH,GAEpC,OACE,kBAAC,EAAD,CACE5I,GAAIwL,EAAUxL,GACd2I,MAAO6C,EAAU7C,MACjBpG,MAAOiJ,EAAUjJ,MACjBP,KAAMwJ,EAAUxJ,KAChBG,SAAUsF,EACV2D,SAAUA,IAKhB,OACE,0BAAMlM,UAAU,eAAe+C,KAAK,eAClC4F,OAAO,sBACPC,YAAU,GAET7I,EAAM8K,iBAAiB3I,KAAI,SAASwH,GACnC,OAAO2C,EAAS3C,GAAO,MAGxB3J,EAAMiL,eAAe9I,KAAI,SAASwH,GACjC,OAAO2C,EAAS3C,GAAO,QCehB6C,EAjFU,SAACxM,GACxB,MAA8ByB,oBAAS,GAAvC,mBAAOgL,EAAP,KAAgBC,EAAhB,KAEA,EAA8BjL,qBAA9B,mBAAOvB,EAAP,KAAgB8H,EAAhB,KACA,EACEvG,mBAA+B,IAAI+I,GADrC,mBAAOY,EAAP,KAA6BE,EAA7B,KAJyD,4CA4BzD,4BAAAhH,EAAA,sEACQtE,EAAM8D,SAASyE,cAAcrI,EAAUA,EAASa,IADxD,QAEQ4L,EAAY3M,EAAM4M,aAAe,GACvB5M,EAAM4G,WAAW1E,OAC/BlB,OAAO8F,SAASC,KAAhB,oCAAoDC,KAAKC,UAAUjH,EAAM4G,YAAzE,oBAAgG+F,GAEhG3L,OAAO8F,SAASC,KAAO,gBAN3B,4CA5ByD,sBAsCzD,OA/BAvB,qBAAU,WACRxF,EAAM8D,SAAS+H,0BACdjG,MAAK,SAACwF,GACLE,EAAwBF,MAEzBvF,OAAM,SAACoG,GACNjG,QAAQ8F,MAAM,8BAA+BG,MAG/CjM,EAAM8D,SAASsE,WAAWpI,EAAM4G,WAAW5G,EAAM4M,eAC9ChH,MAAK,SAAC1F,GACL8H,EAAW9H,MAEZ2F,OAAM,SAACoG,GACNjG,QAAQ8F,MAAM,8BAA+BG,MAE9CY,SAAQ,WACPH,GAAW,QAEd,CAAC1M,EAAM4M,eAaR,6BACE,4BAAQ3M,UAAU,eAChB,yBAAKA,UAAU,2BACb,uBAAGG,QAAS,kBAAOY,OAAO0H,QAAQC,SAChC,uBAAG1I,UAAU,wBAIjB,yBAAKA,UAAU,sBAAf,YACYD,EAAM4M,aAAe,EADjC,OACwC5M,EAAM4G,WAAW1E,QAGzD,yBAAKjC,UAAU,6BAIhBwM,GACC,0CAGAA,GACA,6BACE,kBAAC,EAAD,CACEvM,QAASA,EACTgD,SAAU,SAAChD,GAAD,OAAa8H,EAAW9H,IAClC4K,iBAAkBM,EAAqBN,mBACvCG,eAAgBG,EAAqBH,mBAGvC,yBAAKhL,UAAU,cACb,4BAAQG,QArEuC,4CAqE/C,2BChDG0M,EA3BM,SAAC9M,GAEpB,OACC,6BACE,4BAAQC,UAAU,eACf,yBAAKA,UAAU,2BACb,uBAAGG,QAAS,kBAAOY,OAAO0H,QAAQC,SAChC,uBAAG1I,UAAU,wBAIjB,yBAAKA,UAAU,sBAAf,uBAIA,yBAAKA,UAAU,6BAIjB,4BACA,4BAAQG,QAAS,kBAAMY,OAAO8F,SAASC,KAAO,4BAA9C,iD,eCpBSgG,E,sCALbhM,Q,OACAuC,W,uBCmQa0J,E,gJA5Pb,WAAW,IAAD,OACR,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAYC,UAAUC,KAAK,eAAgB,GAEjDF,EAAUG,QAAU,SAACtB,GACnBjG,QAAQ8F,MAAM,kCAAmCG,GACjDkB,EAAO,yCAGTC,EAAUI,UAAY,SAACC,GAAgB,IAAD,EACpC,cAAI,GAAJ,aAAWA,EAAMpK,cAAjB,aAAW,EAAcqK,OACzB1H,QAAQ2H,KAAK,+BACbT,EAAQ,cAGVE,EAAUQ,gBAAkB,SAACH,GAAgB,IAAD,EAC1C,cAAI,GAAJ,aAAWA,EAAMpK,cAAjB,aAAW,EAAcqK,OAEzB,cAAI,GAAJ,GAASG,kBAAkB,UAAW,CACpCC,eAAe,IAGQ,cAAI,GAAJ,GAASD,kBAAkB,cAAe,CAACE,QAAS,OAC5DC,YAAY,QAAS,QAAS,CAAEC,QAAQ,U,sCAK/D,SAAyBC,EAAeC,GAAwD,IAAD,OAC7F,OAAO,IAAIlB,SAAQ,SAACC,EAASC,GAC3B,IACMiB,EADc,cAAI,GAAJ,GAASC,YAAY,CAACH,GAAQ,aAClBE,YAAYF,GAEtCI,EAAUH,EAAQI,WAAMjM,EAAW,CAAC8L,IAE1CE,EAAQf,QAAU,SAASE,GACzBzH,QAAQ8F,MAAR,kDAAyDoC,IACzDf,KAGFmB,EAAQd,UAAY,SAASC,GAC3BP,GAAQ,S,uBAKd,SAAkBgB,EAAenN,GAAqC,IAAD,OACnE,OAAO,IAAIkM,SAAQ,SAACC,EAASC,GAC3B,IAGImB,EAHc,cAAI,GAAJ,GAASD,YAAY,CAACH,IACVE,YAAYF,GAEhB1L,IAAIzB,GAE9BuN,EAAQf,QAAU,SAASE,GACzBzH,QAAQ8F,MAAR,0BAAiC/K,EAAjC,qBAAgDmN,IAChDf,KAGFmB,EAAQd,UAAY,SAASC,GAC3B,GAAKa,EAAQZ,OAEN,CACL,IAAMA,EAASY,EAAQZ,OACvBA,EAAO3M,GAAKA,EACZmM,EAAQQ,QAJRR,OAAQ5K,S,6EAUhB,WAA+B8I,GAA/B,eAAA9G,EAAA,sEAC8BuD,KAAK2G,UAAU,cAAe,iBAD5D,cACQC,EADR,yBAGS5G,KAAK6G,yBAAyB,eAAe,SAACN,GACnD,IAAMO,EAAc,IAAI5B,EAUxB,OATA4B,EAAY5N,GAAK,gBACjB4N,EAAYrL,MAAQ0D,KAAKC,UAAUJ,MAAM+H,KAAKxD,EAAqBD,gBAG9DsD,EAGOL,EAAYS,IAAIF,GAFhBP,EAAYU,IAAIH,OAVhC,gD,4FAkBA,WAA2B,IAAD,OACxB,OAAO,IAAI1B,QAAJ,uCAAkC,WAAOC,EAASC,GAAhB,eAAA7I,EAAA,sEACb,EAAKkK,UAAuB,cAAe,iBAD9B,OACjCG,EADiC,OAMrCzB,EAHGyB,EAGKnE,EAAqBmB,SAAS,IAAI1H,IAAoB+C,KAAK+H,MAAMJ,EAAYrL,OAAS,MAFtF,IAAIkH,GAJyB,2CAAlC,2D,wBAWT,SAAWtK,GACT,OAAO2H,KAAK6G,yBAAyB,WAAW,SAACN,GAC/C,OAAOA,EAAYU,IAAI5O,Q,2BAI3B,SAAcA,EAAkBa,GAC9B,IAAKA,EACH,MAAM,IAAIiO,MAAM,6BAElB,OAAOnH,KAAK6G,yBAAyB,WAAW,SAACN,GAC/C,OAAOA,EAAYS,IAAI3O,EAASa,Q,2BAIpC,SAAcA,GACZ,OAAO8G,KAAK6G,yBAAyB,WAAW,SAACN,GAC/C,OAAOA,EAAY1J,OAAO3D,Q,yBAI9B,SAAYkO,GAAgC,IAAD,OACzC,OAAO,IAAIhC,SAAc,SAACC,EAASC,GAIjC,IAHA,IAAMkB,EAAc,cAAI,GAAJ,GAASA,YAAY,CAAC,WAAY,aAElDa,EAASD,EAAI5I,QACT6I,EAAO5I,MACb+H,EAAYD,YAAY,WAAW1J,OAAOwK,EAAO5L,OACjD4L,EAASD,EAAI5I,OAGfgI,EAAYc,WAAa,SAAS1B,GAEhCP,KAEFmB,EAAYd,QAAU,SAASE,GAC7BzH,QAAQ8F,MAAM,uCACdqB,U,sBAKN,SAASlL,GAAsC,IAAD,OAC5C,OAAO,IAAIgL,SAAc,SAACC,EAASC,GAIjC,IAHA,IAAMkB,EAAc,cAAI,GAAJ,GAASA,YAAY,CAAC,WAAY,aAElDjI,EAAcnE,EAASoE,QACnBD,EAAYE,MAClB+H,EAAYD,YAAY,WAAWU,IAAI1I,EAAY9C,OACnD8C,EAAcnE,EAASoE,OAGzBgI,EAAYc,WAAa,SAAS1B,GAEhCP,KAEFmB,EAAYd,QAAU,SAASE,GAC7BzH,QAAQ8F,MAAM,qCACdqB,U,sBAKN,SAASlL,GAAsB,IAAD,OAC5B,OAAO,IAAIgL,SAAc,SAACC,EAASC,GAGjC,IAFA,IAAMkB,EAAc,cAAI,GAAJ,GAASA,YAAY,CAAC,WAAY,aAE7C3H,EAAI,EAAGA,EAAIzE,EAASC,OAAQwE,IACnC2H,EAAYD,YAAY,WAAWU,IAAI7M,EAASyE,IAGlD2H,EAAYc,WAAa,SAAS1B,GAEhCP,KAEFmB,EAAYd,QAAU,SAASE,GAC7BzH,QAAQ8F,MAAM,qCACdqB,U,yBAMN,SAAY8B,GAAgB,IAAD,OACzB,OAAO,IAAIhC,SAAmB,SAACC,EAASC,GACtC,IAAMlL,EAAY,IAAI4E,MAEtBoI,EAAI9M,KAAI,SAACpB,EAAYsG,GACnB,EAAKe,WAAWrH,GACb6E,MAAK,SAAC1F,GACL+B,EAASsD,KAAKrF,GACVmH,IAAU4H,EAAI/M,OAAS,GACzBgL,EAAQjL,c,wBAOpB,SAAWlB,GAAa,IAAD,OACrB,OAAO,IAAIkM,QAAJ,uCAAqB,WAAOC,EAASC,GAAhB,eAAA7I,EAAA,sEACJ,EAAKkK,UAAmB,UAAWzN,GAD/B,QACpBb,EADoB,QAOxBgN,EAAQhN,IAHR8F,QAAQoJ,KAAK,qBACblC,EAAQ,IAAI3F,IALY,2CAArB,2D,4BAaT,WAAkB,IAAD,OACf,OAAO,IAAI0F,SAAmB,SAACC,EAASC,GACtC,IACIiB,EADc,cAAI,GAAJ,GAASC,YAAY,CAAC,YACVD,YAAY,WACtCnM,EAAsB,GAE1BmM,EAAYiB,aAAa7B,UAAY,SAASC,GAC5C,IAAI6B,EAAS7B,EAAMpK,OAAOqK,OAC1B,GAAI4B,EAAQ,CACV,IAAMjH,EAAe,IAAId,EAEzBc,EAAalI,UAAYmP,EAAOhM,MAAMnD,UACtCkI,EAAab,aAAe8H,EAAOhM,MAAMkE,aACzCa,EAAazH,WAAa0O,EAAOhM,MAAM1C,WACvCyH,EAAaxH,UAAYyO,EAAOhM,MAAMzC,UACtCwH,EAAaZ,gBAAkB6H,EAAOhM,MAAMmE,gBAC5CY,EAAa7I,KAAO8P,EAAOhM,MAAM9D,KACjC6I,EAAaX,UAAY4H,EAAOhM,MAAMoE,UACtCW,EAAaV,aAAe2H,EAAOhM,MAAMqE,aACzCU,EAAaT,aAAe0H,EAAOhM,MAAMsE,aACzCS,EAAatH,GAAKuO,EAAOxN,IAEzBG,EAASsD,KAAK8C,GACdiH,EAAOC,gBAGPvJ,QAAQC,IAAI,oBACZiH,EAAQjL,S,gBAMhB,WACE,OAAO,YAAA4F,KAAP,U,KCjOJ,SAAS2H,IACP,IAAMzI,EAAO/F,OAAO8F,SAASC,KAAK0I,OAAO,GAErCC,EAA6B,IAAIzL,IAE/B0L,EAAW5I,EAAK6I,MAAM,KACxBC,EAAOF,EAAS,IAAM,GACtBG,EAASH,EAAS,IAAM,GAE5B,GAAI5I,EAAK1E,SAAS,KAAM,CACtB,IAAM0N,EAAchJ,EAAK6I,MAAM,KAC/BC,EAAOE,EAAY,IAEKA,EAAY,IAAM,IAC1BH,MAAM,KAAKzN,KAAI,SAAA6N,GAC7B,IAAIC,EAAOD,EAAGJ,MAAM,KACpBF,EAAOnL,IAAI0L,EAAK,GAAIA,EAAK,OAI7B,MAAO,CACLJ,KAAMA,EACNC,OAAQA,EACRI,YAAaR,GAIjB,IAkHeS,EAlHH,WAEV,MAA8B1O,oBAAS,GAAvC,mBAAOgL,EAAP,KAAgBC,EAAhB,KACA,EAAsCjL,mBAAS+N,IAAeK,MAA9D,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAoC5O,mBAAS6O,SAASd,IAAeM,SAArE,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAA8C/O,mBAA6B+N,IAAeU,aAA1F,mBAAOO,EAAP,KAAwBC,EAAxB,KAOA1P,OAAO2P,aANP,WACE,IAAMC,EAASpB,IACfa,EAAeO,EAAOf,MACtBW,EAAcF,SAASM,EAAOd,SAC9BY,EAAmBE,EAAOV,cAI5B,MAAgCzO,mBAAmB,IAAIuL,GAAvD,mBAAOlJ,EAAP,UAYA,OAVA0B,qBAAU,WAAM,4CACd,sBAAAlB,EAAA,sEACQR,EAAS+M,UADjB,OAEEnE,GAAW,GAEX1L,OAAOgM,SAAWlJ,EAJpB,4CADc,uBAAC,WAAD,wBAOdgN,KACC,IAGD,yBAAK7Q,UAAU,WACb,8BAEK,WAEC,GAAIwM,EACF,OAAO,yCAGT,IAAK2D,GAAgC,iBAAhBA,EACnB,OAAO,kBAAC,EAAD,CACLtM,SAAUA,IAId,GAAoB,kBAAhBsM,GAAmCG,EACrC,OAAO,kBAAC,EAAD,CACL9L,UAAW8L,EACXzM,SAAUA,EACVqE,SAAO,IAIX,GAAoB,YAAhBiI,GAA6BG,EAC/B,OAAO,kBAAC,EAAD,CACL9L,UAAW8L,EACXzM,SAAUA,IAId,GAAoB,YAAhBsM,EACF,OAAO,kBAAC,EAAD,CACLtM,SAAUA,IAId,IAAM8C,EAAa6J,EAAgBjO,IAAI,cACvC,GAAoB,sBAAhB4N,QAAqD9N,GAAdsE,EACzC,OAAO,kBAAC,EAAD,CACL9C,SAAUA,EACV8C,WAAYI,KAAK+H,MAAMnI,KAI3B,IAAMmK,EAAUN,EAAgBjO,IAAI,WACpC,MAAoB,kBAAhB4N,QAAiD9N,GAAdsE,EAC9B,kBAAC,EAAD,CACL9C,SAAUA,EACV8C,WAAYI,KAAK+H,MAAMnI,GACvBgG,aAAcmE,EAAUT,SAASS,GAAW,IAI5B,2BAAhBX,EACK,kBAAC,EAAD,CACLtM,SAAUA,IAIM,aAAhBsM,EACK,kBAAC,EAAD,MAGF,WA5DR,IAiEL,4BAAQnQ,UAAU,kBAChB,uBAAGa,KAAK,gBAAgBb,UAAU,uBAC9B,uBAAGA,UAAW,gBACI,gBAAfmQ,GAAgD,IAAfA,EAAoB,eAAiB,MACzE,wCAEJ,uBAAGtP,KAAK,WAAWb,UAAU,uBAC3B,uBAAGA,UAAW,uBAAwC,WAAfmQ,EAA2B,eAAiB,MACnF,uCAEF,uBAAGtP,KAAK,YAAYb,UAAU,uBAC5B,uBAAGA,UAAW,gBAAiC,YAAfmQ,EAA4B,eAAiB,MAC7E,yDChKVY,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5cd156ad.chunk.js","sourcesContent":["const monthAsTextMap:any = {\n  0: 'Janeiro',\n  1: 'Fevereiro',\n  2: 'Março',\n  3: 'Abril',\n  4: 'Maio',\n  5: 'Junho',\n  6: 'Julho',\n  7: 'Agosto',\n  8: 'Setembro',\n  9: 'Outubro',\n  10: 'Novembro',\n  11: 'Dezembro'\n}\n\n// Formated as 2021-08-20\nfunction friendlyYearAndMonthAsText(dateAsText: string) {\n  if (!dateAsText) {\n    return undefined;\n  }\n\n  const date = new Date(dateAsText);\n  const year = date.getFullYear();\n  const literalMonth = monthAsTextMap[date.getMonth()];\n  if ((new Date()).getFullYear() === year) {\n    return literalMonth;\n  } else {\n    return literalMonth + ' de ' + year;\n  }\n}\n\nexport default friendlyYearAndMonthAsText;","\nenum Field {\n  ReceiptNumber = \"ReceiptNumber\",\n  PayerName = \"PayerName\",\n  ReferrerTo = \"ReferrerTo\",\n  PaidValue = \"PaidValue\",\n  PayerAddress = \"PayerAddress\",\n  PaidValueAsText = \"PaidValueAsText\",\n  Date = \"Date\",\n  PayeeName = \"PayeeName\",\n  PayeeCpfOrRg = \"PayeeCpfOrRg\",\n  PayeeAddress = \"PayeeAddress\"\n}\n\nenum Setting {\n  None = \"None\",\n  ToIdentify = \"ToIdentify\",\n  ToUpdate = \"ToUpdate\"\n}\n\nclass MultiEditionSettings {\n\n  fieldSettingsMap: Map<Field, Setting>;\n  \n  static Instance(fieldSettings: Map<Field, Setting>): MultiEditionSettings {\n    const multiEditionSettings = new MultiEditionSettings();\n    multiEditionSettings.fieldSettingsMap = fieldSettings;\n    return multiEditionSettings;\n  }\n\n  constructor() {\n     this.fieldSettingsMap = new Map<Field, Setting>([\n      [Field.ReceiptNumber, Setting.None],\n      [Field.PayerName, Setting.None],\n      [Field.ReferrerTo, Setting.None],\n      [Field.PaidValue, Setting.None],\n      [Field.PayerAddress, Setting.None],\n      [Field.PaidValueAsText, Setting.None],\n      [Field.Date, Setting.None],\n      [Field.PayeeName, Setting.None],\n      [Field.PayeeCpfOrRg, Setting.None]\n    ]);\n  }\n\n\n  get fieldSettings(): Map<Field, Setting> {\n    return this.fieldSettingsMap;\n  }\n\n  getFieldSetting(field: Field): Setting | undefined {\n    return this.fieldSettingsMap.get(field);\n  }\n\n  setFieldSetting(field: Field, setting: Setting) {\n    this.fieldSettingsMap.set(field, setting);\n  }\n\n  fieldsToIdentify(): Array<Field> {\n    const fieldsToIdentify = new Array<Field>();\n    \n    this.fieldSettingsMap.forEach((setting: Setting, field: Field) => {\n      if (setting === Setting.ToIdentify) {\n        fieldsToIdentify.push(field);\n      }\n    });\n\n    return fieldsToIdentify;\n  }\n\n  fieldsToUpdate(): Array<Field> {\n    const fieldsToUpdate = new Array<Field>();\n    \n    this.fieldSettingsMap.forEach((setting: Setting, field: Field) => {\n      if (setting === Setting.ToUpdate) {\n        fieldsToUpdate.push(field);\n      }\n    });\n\n    return fieldsToUpdate;\n  }\n}\n\nexport {Field, Setting};\nexport default MultiEditionSettings;","import React, { useState } from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './ReceiptCard.css';\nimport Receipt from '../../db/Receipt';\n\ninterface ReceiptCardInterface {\n  receipt: Receipt;\n  enableSelection: boolean;\n  isSelected: boolean;\n  onRemove (receiptId: number): void;\n  onSelectionChange (isSelected: boolean): void;\n}\n\nconst ReceiptCard = observer((props: ReceiptCardInterface) => {\n\n    return (\n      <div className=\"receipt-card\">\n\n        <div className=\"receipt-card__header\">\n          <h3 className=\"receipt-card__title\">{props.receipt.payerName || \"...\"}</h3>\n\n          <div className=\"receipt-card__check_container\">\n            <div className=\"receipt-card__check\" \n            onClick={() => props.onSelectionChange(!props.isSelected)}>\n              {props.enableSelection && (<svg width=\"24px\" height=\"24px\"  \n                viewBox=\"0 0 24 24\"\n                className=\"receipt-card__check\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"></path>\n              </svg>)}\n\n              {props.isSelected && (<svg width=\"24px\" height=\"24px\"\n                viewBox=\"0 0 24 24\"\n                className=\"receipt-card__check\">\n                <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\">\n                </path>\n              </svg>)}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"receipt-card__content\">\n          <p>{props.receipt.referrerTo || \"...\"}</p>\n          <span className=\"receipt-card__price\">R$ {props.receipt.paidValue || \"?\"}</span>\n        </div>\n\n        <div className=\"receipt-card__bottom\">\n          <div className=\"receipt-card__number\">\n            <span>Nº 121212</span>\n          </div>\n\n          <div className=\"line-separator\"></div>\n\n          <div className=\"receipt-card__action-bar\">\n            <a className=\"receipt-card__button\" href={\"#receipt/\" + props.receipt.id}>\n              <i className=\"fas fa-edit\"></i>\n            </a>\n            <a className=\"receipt-card__button\" href={\"#receipt-clone/\" + props.receipt.id}>\n              <i className=\"fas fa-clone\"></i>\n            </a>\n            <a className=\"receipt-card__button\" onClick={() => {\n              const answer = window.confirm(\"Realmente deseja remover esse recibo?\");\n              if (answer === true) {\n                props.onRemove(props.receipt.id!)};\n              }\n            }>\n              <i className=\"fas fa-trash\"></i>\n            </a>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n)\nexport default ReceiptCard;","import React from 'react';\nimport './Modal.css';\n\ninterface ModalProps {\n  handleClose: any;\n  children: any;\n  show?: boolean;\n};\n\nconst Modal = (props: ModalProps) => {\n  const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n        {props.children}\n        <a onClick={props.handleClose}>Cancelar</a>\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;","import React, { useState, useEffect } from 'react';\nimport Receipt  from '../../db/Receipt';\nimport ReceiptCard from '../../components/receiptcard/ReceiptCard';\n\nimport Modal from '../../components/modal/Modal';\n\ninterface ByMonthReceiptCardProps {\n  title: string;\n  receipts: Receipt[];\n  enableSelection: boolean;\n  receiptsSelected: Map<number, Receipt>;\n  payerNameFiltering: string;\n  onRemove(receiptId: number): void;\n  onSelectionChange(receiptId: number, receipt: Receipt | undefined): void;\n  onSelectAll(receipts: Receipt[]) : void;\n}\n\nconst ByMonthReceiptCard = (props: ByMonthReceiptCardProps) => {\n\n  const [collapsed, setCollapsed] = useState<boolean>(false);\n  const [modalIsVisible, setModalIsVisible] = useState<boolean>();\n\n  function handleSelectAll() {\n    props.onSelectAll(props.receipts);\n    setModalIsVisible(false);\n  }\n  return (\n    <div className=\"receipts-by-month-container\" key={props.title}> \n      \n      <Modal show={modalIsVisible} handleClose={() => {setModalIsVisible(false)}}>\n        <a onClick={handleSelectAll}>\n          Selecionar todos\n        </a>\n      </Modal>\n\n      <div className=\"receipts-by-month__header\">\n        <div className=\"receipts-by-month__header__left\">\n          <i className={\"fas \" +\n              (collapsed ? \"fa-chevron-right \" : \"fa-chevron-down \")\n            }\n            onClick={() => setCollapsed(!collapsed)}\n          ></i>\n          <span className=\"receipts-by-month__title\">{props.title}</span> \n          <span className=\"receipts-by-month__details\">{props.receipts.length}</span>\n        </div>\n        <div className=\"receipts-by-month__header__right\">\n          <i \n            className=\"fas fa-ellipsis-v receipts-by-month__menu\" \n            onClick={() => setModalIsVisible(true)}></i>\n        </div>\n      </div>\n\n      <div className=\"receipts-by-month__list\">\n      {\n        props.receipts.map((receipt) => {\n          if (collapsed) {\n            return false;\n          }\n  \n          if (props.payerNameFiltering && (!receipt.payerName || !receipt.payerName.includes(props.payerNameFiltering))) {\n            return;\n          }\n\n          return <ReceiptCard\n              receipt={receipt}\n              onRemove={props.onRemove}\n              enableSelection={props.enableSelection}\n              isSelected={props.receiptsSelected.get(receipt.id!) !== undefined}\n              onSelectionChange={(iSelected) => props.onSelectionChange(receipt.id!, iSelected ? receipt : undefined)}\n            />\n        })\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default ByMonthReceiptCard;","import React, { useState, useEffect } from 'react';\n\nimport Receipt  from '../../db/Receipt';\nimport Modal from '../../components/modal/Modal';\n\ninterface ListReceiptCardHeaderProps {\n  isSelectModeOn: boolean;\n  receiptsSelected: Map<number, Receipt>;\n  onClickToEnableSelectMode(): void;\n  onClickToDisableSelectMode(): void;\n  onClickToCloneSelectedReceipts(): void;\n  onClickToDeleteSelectedReceipts(): void;\n  onClickToPrintSelectedReceipts(): void;\n  onClickToEditSelectedReceipts(): void;\n  onChangeOfPayerNameToFilter(name: string): void;\n}\n\nconst ListReceiptCardHeader = (props: ListReceiptCardHeaderProps) => {\n  const [pageModalIsVisible, setPageModalIsVisible] = useState<boolean>();\n\n  function handleCloseSelectionMode() {\n    props.onClickToDisableSelectMode();\n  }\n\n  return (\n    <div>\n      <Modal \n        show={pageModalIsVisible} \n        handleClose={() => {setPageModalIsVisible(false)}}>\n        <a onClick={() => {\n            props.onClickToEnableSelectMode();\n            setPageModalIsVisible(false); \n          }}>\n          Selecionar recibos\n        </a>\n      </Modal>\n\n      {!props.isSelectModeOn && (\n        <header className=\"top-app-bar\">\n          <div className=\"top-app-bar__navigation\">\n            <a>\n              <i className=\"fas fa-home\"></i>\n            </a>\n          </div>\n\n          <div className=\"top-app-bar__title\">\n            Recibos Facil\n          </div>\n          \n          <div className=\"top-app-bar__right-part\">\n            <i className=\"fas fa-ellipsis-v\" onClick={() => setPageModalIsVisible(true)}></i>\n            <input \n                type=\"search\"\n                name=\"search\" \n                placeholder=\"Pesquise por nome\" \n                id=\"search\"\n                className=\"search\"\n                onChange={(e) => props.onChangeOfPayerNameToFilter(e.target.value)}\n                />\n          </div>\n        </header>\n      )}\n\n      {props.isSelectModeOn && (\n        <header className=\"top-app-bar\">\n          <div className=\"top-app-bar__navigation\">\n            <a>\n              <i onClick={handleCloseSelectionMode}\n                className=\"fas fa-times\">\n              </i>\n            </a>\n          </div>\n\n          <div className=\"top-app-bar__title\">\n            {props.receiptsSelected.size === 0 && (\"Selecionar recibos\")}\n            {props.receiptsSelected.size > 0 && (\n              props.receiptsSelected.size\n            )}\n            \n          </div>\n          \n          <div className=\"top-app-bar__right-part\">\n            {props.receiptsSelected.size > 0 && (\n              <div>\n                <i className=\"fas fa-print\" onClick={props.onClickToPrintSelectedReceipts}></i>\n                <i className=\"fas fa-edit\" onClick={props.onClickToEditSelectedReceipts}></i>\n                <i className=\"fas fa-clone\" onClick={props.onClickToCloneSelectedReceipts}></i>\n                <i className=\"fas fa-trash\" onClick={props.onClickToDeleteSelectedReceipts}></i>\n              </div>\n            )}\n          </div>\n        </header>\n      )}\n    </div>\n  )\n}\n\nexport default ListReceiptCardHeader;","import React, { useState, useEffect } from 'react';\n\nimport './ListReceiptCardPage.css';\n\nimport Receipt  from '../../db/Receipt';\nimport friendlyYearAndMonthAsText from '../../db/FriendlyLiteralDate';\nimport ByMonthReceiptCard from './ByMonthReceiptCard';\nimport ListReceiptCardHeader from './ListReceiptCardHeader';\n\nconst ReceiptCardsPage = (props: any) => {\n  const database = props.database;\n  const [receiptsByMonth, setReceiptsByMonth] = useState<Map<string, [Receipt]>>();\n  const [receiptsSelected, setReceiptSelected] = useState<Map<number, Receipt>>(new Map());\n\n  const [selectMode, setSelectMode] = useState<boolean>(false);\n  \n  function handleSelectAll(receipts: Receipt[]) {\n    const a = new Map(receiptsSelected);\n    receipts.map((receipt) => {\n      a.set(receipt.id!, receipt);\n    })\n    setReceiptSelected(a);\n    setSelectMode(true);\n  }\n\n  function handleSelectionChange(receiptId: number, receipt: Receipt | undefined) {\n    if (receipt) {\n      setReceiptSelected(new Map(receiptsSelected).set(receiptId, receipt));\n    } else {\n      const a = new Map(receiptsSelected);\n      a.delete(receiptId);\n      setReceiptSelected(a);\n    }\n  }\n\n  function handleCloseSelectionMode() {\n    setSelectMode(false);\n    setReceiptSelected(new Map());\n  }\n\n  function handleClickPrint() {\n    const i = receiptsSelected.keys();\n    \n    let idNext = i.next();\n    let receiptIds = new Array<number>();\n    while (!idNext.done) {\n      receiptIds.push(idNext.value);\n      idNext = i.next();\n    }\n    window.location.hash = `receipts-to-print?receiptIds=${JSON.stringify(receiptIds)}`;\n  }\n\n  function handleDeleteSelection() {\n    const answer = window.confirm(`Confirma a deleção de ${receiptsSelected.size} recibos?`);\n    if (answer === true) {\n      database.batchDelete(receiptsSelected.keys())\n        .then(async() => {\n          fetchReceipts();\n          handleCloseSelectionMode();\n        })\n        .catch((exception: any) => {\n          alert(\"Não foi possível deletar os recibos por um erro inesperado.\");\n          console.log(exception);\n        });\n    }\n  }\n\n  function handleClickToEditMultiple() {\n    const i = receiptsSelected.keys();\n    \n    let idNext = i.next();\n    let receiptIds = new Array<number>();\n    while (!idNext.done) {\n      receiptIds.push(idNext.value);\n      idNext = i.next();\n    }\n    window.location.hash = `#multi-edition?receiptIds=${JSON.stringify(receiptIds)}`;\n  }\n  \n  function handleCloneSelection() {\n    const receipts = receiptsSelected.values();\n    const answer = window.confirm(`Confirma a duplicação de ${receiptsSelected.size} recibos?`);\n    if (answer === true) {\n      const receiptsToClone: Receipt[] = [];\n      let nextReceipt = receipts.next();\n      while (!nextReceipt.done) {\n        const receipt: Receipt = nextReceipt.value;\n        //remove date to show clones at the top\n        receipt.date = undefined;\n        receiptsToClone.push(receipt)\n        nextReceipt = receipts.next();\n      }\n  \n      database.arrayAdd(receiptsToClone)\n        .then(async() => {\n          fetchReceipts();\n          handleCloseSelectionMode();\n        })\n        .catch((exception: any) => {\n          alert(\"Não foi possível clonar os recibo selecionados.\");\n          console.log(exception);\n        });\n    }\n  }\n\n  useEffect(() => {\n    fetchReceipts();\n  }, []);\n  \n  async function fetchReceipts() {\n    const receipts: Receipt[] = await database.getAllReceipts();\n    receipts.sort((r1, r2) => r2.dateAsTimeStamp - r1.dateAsTimeStamp)\n\n    const rByMonth = receipts.reduce((byMonth, r) => {\n      const array: [Receipt] = byMonth.get(r.date) || [];\n      array.push(r);\n      byMonth.set(r.date, array);\n      return byMonth;\n    }, new Map())\n\n    setReceiptsByMonth(rByMonth)\n  };\n  const[payerNameFiltering, setPayerNameFiltering] = useState(\"\");\n\n  function handleRemoveReceipt(id: number) {\n    // TODO GOOD CASE FOR UNIT TEST, SUCCESS MEAN DELETED AND NOT FOUND??\n    database.deleteReceipt(id)\n      .then(async() => {\n        fetchReceipts();\n      })\n      .catch((exception: any) => {\n        alert(\"Não foi possível deletar o recibo por um erro inesperado.\");\n        console.log(exception);\n      })\n  }\n\n  return (\n    <div className=\"receipts-card\">\n\n      <ListReceiptCardHeader\n        isSelectModeOn={selectMode}\n        onChangeOfPayerNameToFilter={setPayerNameFiltering}\n        onClickToCloneSelectedReceipts={handleCloneSelection}\n        onClickToDeleteSelectedReceipts={handleDeleteSelection}\n        onClickToDisableSelectMode={handleCloseSelectionMode}\n        onClickToEnableSelectMode={() => setSelectMode(true)} \n        onClickToPrintSelectedReceipts={() => handleClickPrint()}\n        onClickToEditSelectedReceipts={() => handleClickToEditMultiple()}\n        receiptsSelected={receiptsSelected}\n      />\n\n      {\n        receiptsByMonth && [...receiptsByMonth.keys()].map((keyName, index) => {\n\n          const receipts: Receipt[] = receiptsByMonth.get(keyName) || [];\n          const friendlyTitle = friendlyYearAndMonthAsText(keyName) || \"Área de trabalho (sem data ou clonado)\";\n          \n          return (\n            <ByMonthReceiptCard\n              title={friendlyTitle}\n              receipts={receipts}\n              enableSelection={selectMode}\n              receiptsSelected={receiptsSelected}\n              payerNameFiltering={payerNameFiltering}\n              onRemove={handleRemoveReceipt}\n              onSelectionChange={handleSelectionChange}\n              onSelectAll={handleSelectAll}\n            />\n          )\n        })\n      } \n    </div>\n  );\n}\n\nexport default ReceiptCardsPage;","class Receipt {\n  id: number | undefined;\n  payerName?: string;\n  payerAddress?: string;\n  referrerTo?: string;\n  paidValue?: number;\n  paidValueAsText?: string;\n  date?: Date;\n  payeeName?: string;\n  payeeCpfOrRg?: string;\n  payeeAddress?: string;\n\n  get dateAsTimeStamp() {\n    if (this.date) {\n      const d: Date = new Date(this.date);\n      return d.getTime();\n    }\n    return 9007199254740991;\n  }\n}\n\n\nexport default Receipt;","import React, { useState, useEffect } from 'react';\n\nimport Receipt from '../../db/Receipt'\nimport Database from '../../db/Database';\n\ninterface NewEditReceiptPageProps {\n  receiptId?: number,\n  toClone?: boolean\n  database: Database\n}\n\nconst NewEditReceiptPage = (props: NewEditReceiptPageProps) => {\n\n  const database = props.database;\n  const [receipt, setReceipt] = useState<any>(new Receipt());\n  const [screenMode, setScreenMode] = useState(\"create\")\n\n  useEffect(() => {\n    if (props.receiptId) {\n      if (props.toClone) {\n        setScreenMode(\"clone\");\n      } else {\n        setScreenMode(\"edit\");\n      }\n\n      database.getReceipt(props.receiptId)\n        .then((receipt) => {\n          setReceipt(receipt);\n        })\n        .catch((exception) => {\n          alert(\"Não foi possível carregar o recibo.\");\n          console.log(exception);\n        });\n    } else {\n      setScreenMode(\"create\");\n    }\n  }, [props.receiptId]);\n  \n  const cancel = function() {\n    window.location.hash = \"#receipt-list\";\n  };\n\n  const done = async function() {\n    const receiptModel = new Receipt();\n    \n    receiptModel.payerName = receipt.payerName;\n    receiptModel.payerAddress = receipt.payerAddress;\n    receiptModel.referrerTo = receipt.referrerTo;\n    receiptModel.paidValue = receipt.paidValue;\n    receiptModel.paidValueAsText = receipt.paidValueAsText;\n    receiptModel.date = receipt.date;\n    receiptModel.payeeName = receipt.payeeName;\n    receiptModel.payeeCpfOrRg = receipt.payeeCpfOrRg;\n    receiptModel.payeeAddress = receipt.payeeAddress;\n\n    if (screenMode === \"clone\") {\n      await database.addReceipt(receiptModel);\n    }\n    if (screenMode === \"edit\") {\n      await database.updateReceipt(receiptModel, props.receiptId!);\n    }\n    if (screenMode === \"create\") {\n      await database.addReceipt(receiptModel);\n    }\n    window.location.hash = \"#receipt-list\";\n  };\n\n  const handleChange = function(e: any) {\n    const {name, value} = e.target;\n\n    setReceipt((prevState: any) => {\n      let receipt = { ...prevState }; \n      receipt[name] = value;\n      return receipt;\n    })\n  };\n\n  return (\n    <div className=\"new-receipt\">\n      <header className=\"top-app-bar\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={() => (window.history.back())}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          {screenMode===\"create\" && \"Criando\"}\n          {screenMode===\"edit\" && \"Editando\"}\n          {screenMode===\"clone\" && \"Clonando\"}\n        </div>\n\n        {screenMode==\"create\" && \n        <div className=\"top-app-bar__right-part\">\n          <a onClick={() => cancel()}>\n            <i className=\"fas fa-times top-app-bar__icon\"></i>\n          </a>\n        </div>}\n      </header>\n\n      <form className=\"receipt-form\" name=\"receipt-form\" \n        action=\"javascript:void(0);\"\n        noValidate >\n        {/* <label htmlFor={\"receiptNumber\"}>Numero</label>\n        <input \n          type=\"text\" \n          name={\"receiptNumber\"} \n          placeholder=\"\" \n          id={\"receiptNumber\"}\n          /> */}\n\n        <div className=\"receipt-payer\">\n          \n          <h5>Recebido de</h5>\n\n          <label htmlFor={\"payerName\"}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerName\"} \n            placeholder=\"\" \n            id={\"payerName\"}\n            value={receipt.payerName} \n            onChange={handleChange}\n            autoFocus\n            />\n\n          <label htmlFor={\"referrerTo\" }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo\" } \n            placeholder=\"\" \n            id={\"referrerTo\" }\n            value={receipt.referrerTo} \n            onChange={handleChange}\n            />\n\n          <label htmlFor={\"paidValue\"}>Valor</label>\n          <input \n            className=\"u-full-width\" \n            type=\"number\"   \n            name={\"paidValue\"} \n            placeholder=\"\" \n            id={\"paidValue\"}\n            value={receipt.paidValue} \n            onChange={handleChange}\n            />\n          </div>\n\n          <label htmlFor={\"payerAddress\"}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress\"} \n            placeholder=\"\" \n            id={\"payerAddress\"}\n            value={receipt.payerAddress} \n            onChange={handleChange}\n            />\n          <div className=\"receipt-header\">\n          \n          {/* <label htmlFor={\"paidValueAsText\"}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText\"} \n            placeholder=\"\" \n            id={\"paidValueAsText\"}\n            value={receipt.paidValueAsText} onChange={(e) => receipt.paidValueAsText = e.target.value}/> */}\n\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date\"}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"date\"  \n            name={\"date\"} \n            placeholder=\"\" \n            id={\"date\"}\n            value={receipt.date} \n            onChange={handleChange}\n            />\n        </div>\n\n        \n        <div className=\"receipt-payee top-padding\">\n          <h5>Recebido por</h5>\n          <div className=\"emitentCpf\">\n            <div>\n              <label htmlFor={\"payeeName\"}>Emitente</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\" \n                name={\"payeeName\"} \n                placeholder=\"\" \n                id={\"payeeName\"}\n                value={receipt.payeeName}\n                onChange={handleChange}\n                />\n            </div>\n            <div>\n              <label htmlFor={\"payeeCpfOrRg\"}>CPF/RG</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\"   \n                name={\"payeeCpfOrRg\"} \n                placeholder=\"\" \n                id={\"payeeCpfOrRg\"}\n                value={receipt.payeeCpfOrRg} \n                onChange={handleChange}\n                />\n            </div>\n          </div>\n\n          <label htmlFor={\"payeeAddress\"}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeAddress\"} \n            placeholder=\"\" \n            id={\"payeeAddress\"}\n            value={receipt.payeeAddress} \n            onChange={handleChange}\n            />\n\n          {/* <label htmlFor={\"payeeSignature\"}>Assinatura</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeSignature\"} \n            placeholder=\"\" \n            id={\"payeeSignature\"}\n            /> */}\n        </div>\n\n        <div className=\"action-bar\">\n          <button onClick={() => done()}>\n            Pronto\n          </button>\n        </div>\n      </form>\n\n    </div>\n  );\n}\n\nexport default NewEditReceiptPage;","import React from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './Receipt.css';\n\nconst Receipt = observer((props) => {\n\n    return (\n      <div className=\"receipt-container\">\n        \n        <div className=\"receipt-header\">\n          <span>RECIBO</span>\n        \n          <div>\n            <label htmlFor={\"receiptNumber-\" + props.index}>Numero</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\" \n              name={\"receiptNumber-\" + props.index} \n              placeholder=\"\" \n              id={\"receiptNumber-\" + props.index}\n              />\n          </div>\n          \n          <div>\n            <label htmlFor={\"paidValue-\" + props.index}>Valor</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\"   \n              name={\"paidValue-\" + props.index} \n              placeholder=\"\" \n              id={\"paidValue-\" + props.index}\n              value={props.receipt.paidValue} onChange={(e) => props.receipt.paidValue = e.target.value}/>\n          </div>\n        </div>\n\n        <div className=\"receipt-payer\">\n          <label htmlFor={\"payer-\" + props.index}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payer-\" + props.index} \n            placeholder=\"\" \n            id={\"payer-\" + props.index}\n            value={props.receipt.payer} onChange={(e) => props.receipt.payer = e.target.value}/>\n\n          <label htmlFor={\"payerAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payerAddress-\" + props.index}\n            value={props.receipt.payerAddress} onChange={(e) => props.receipt.payerAddress = e.target.value}/>\n          \n          <label htmlFor={\"paidValueAsText-\" + props.index}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText-\" + props.index} \n            placeholder=\"\" \n            id={\"paidValueAsText-\" + props.index}\n            value={props.receipt.paidValueAsText} onChange={(e) => props.receipt.paidValueAsText = e.target.value}/>\n\n          <label htmlFor={\"referrerTo-\" + props.index }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo-\" + props.index } \n            placeholder=\"\" \n            id={\"referrerTo-\" + props.index }\n            value={props.receipt.referrerTo} onChange={(e) => props.receipt.referrerTo = e.target.value}/>\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date-\" + props.index}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"date-\" + props.index} \n            placeholder=\"\" \n            id={\"date-\" + props.index}\n            value={props.date} \n            readOnly/>\n        </div>\n\n        <div className=\"receipt-payee\">\n          <div className=\"emitentCpf\">\n            <div>\n              <label htmlFor={\"payee-\" + props.index}>Emitente</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\" \n                name={\"payee-\" + props.index} \n                placeholder=\"\" \n                id={\"payee-\" + props.index}\n                value={props.payee}\n                readOnly/>\n            </div>\n            <div>\n              <label htmlFor={\"payeeCpfOrRg-\" + props.index}>CPF/RG</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\"   \n                name={\"payeeCpfOrRg-\" + props.index} \n                placeholder=\"\" \n                id={\"payeeCpfOrRg-\" + props.index}\n                value={props.payeeCpfOrRg} \n                readOnly/>\n            </div>\n          </div>\n\n          <label htmlFor={\"payeeAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payeeAddress-\" + props.index}\n            value={props.payeeAddress} \n            readOnly/>\n\n          <label htmlFor={\"payeeSignature-\" + props.index}>Assinatura</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeSignature-\" + props.index} \n            placeholder=\"\" \n            id={\"payeeSignature-\" + props.index}\n            />\n        </div>\n      </div>\n    );\n  }\n)\nexport default Receipt;","import React from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './Receipt.css';\n\nconst ReceiptStub = observer((props) => {\n\n    return (\n      <div className=\"receipt-container\">\n        \n        <div className=\"receipt-header\">\n          <div>\n            <label htmlFor={\"receiptNumber-\" + props.index}>Numero</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\" \n              name={\"receiptNumber-\" + props.index} \n              placeholder=\"\" \n              id={\"receiptNumber-\" + props.index}\n              />\n          </div>\n          \n          <div>\n            <label htmlFor={\"paidValue-\" + props.index}>Valor</label>\n            <input \n              className=\"u-full-width\" \n              type=\"text\"   \n              name={\"paidValue-\" + props.index} \n              placeholder=\"\" \n              id={\"paidValue-\" + props.index}\n              value={props.receipt.paidValue} onChange={(e) => props.receipt.paidValue = e.target.value}/>\n          </div>\n        </div>\n\n        <div className=\"receipt-payer\">\n          <label htmlFor={\"payer-\" + props.index}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payer-\" + props.index} \n            placeholder=\"\" \n            id={\"payer-\" + props.index}\n            value={props.receipt.payer} onChange={(e) => props.receipt.payer = e.target.value}/>\n\n          <label htmlFor={\"payerAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payerAddress-\" + props.index}\n            value={props.receipt.payerAddress} onChange={(e) => props.receipt.payerAddress = e.target.value}/>\n          \n          <label htmlFor={\"paidValueAsText-\" + props.index}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText-\" + props.index} \n            placeholder=\"\" \n            id={\"paidValueAsText-\" + props.index}\n            value={props.receipt.paidValueAsText} onChange={(e) => props.receipt.paidValueAsText = e.target.value}/>\n\n          <label htmlFor={\"referrerTo-\" + props.index }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo-\" + props.index } \n            placeholder=\"\" \n            id={\"referrerTo-\" + props.index }\n            value={props.receipt.referrerTo} onChange={(e) => props.receipt.referrerTo = e.target.value}/>\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date-\" + props.index}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"date-\" + props.index} \n            placeholder=\"\" \n            id={\"date-\" + props.index}\n            value={props.date} \n            readOnly/>\n        </div>\n\n      </div>\n    );\n  }\n)\nexport default ReceiptStub;","import React, { useState, useEffect } from 'react';\nimport Receipt from '../../components/receipt/Receipt';\nimport ReceiptStub from '../../components/receipt/ReceiptStub';\nimport Database from '../../db/Database';\n\ninterface ReceiptsToPrintPageProps {\n  database: Database\n  receiptIds: [number]\n}\n\nconst ReceiptsToPrintPage = (props: ReceiptsToPrintPageProps) => {\n  const database = props.database;\n  const [receipts, setReceipts] = useState<any[]>([]);\n\n  useEffect(() => {\n    async function fetchReceipts() {\n      const receipts = await database.getReceipts(props.receiptIds);\n      setReceipts(receipts);\n    };\n    fetchReceipts();\n  }, []);\n\n  return (\n    <div className=\"receipt-to-print-list\">\n\n      <header className=\"top-app-bar no-printable\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={() => (window.history.back())}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          Imprimir\n        </div>\n      </header>\n      \n      <div className=\"action-top-bar\">\n        <button className=\"button-primary no-printable\" onClick={window.print}>\n          Imprimir\n        </button>\n      </div>\n      \n      <div className=\"\">\n        <h2>Canhotos</h2>\n        {receipts.map((receipt) => (\n          <div key={receipt.id}>\n            <ReceiptStub\n              key={receipt.id}\n              index={receipt.id}\n              payee={receipt.payeeName}\n              payeeCpfOrRg={receipt.payeeCpfOrRg}\n              payeeAddress={receipt.payeeAddress}\n              date={receipt.date}\n              receipt={receipt}\n            />\n          </div>\n        ))} \n\n        <h2>Recibos</h2>\n        {receipts.map((receipt) => (\n          <div key={receipt.id}>\n            <Receipt\n              key={receipt.id}\n              index={receipt.id}\n              payee={receipt.payeeName}\n              payeeCpfOrRg={receipt.payeeCpfOrRg}\n              payeeAddress={receipt.payeeAddress}\n              date={receipt.date}\n              receipt={receipt}\n            />\n          </div>\n        ))} \n      </div>\n    </div>\n  );\n}\n\nexport default ReceiptsToPrintPage;","import React from 'react';\nimport MultiEditionSettings from '../../db/MultiEditionSettings';\nimport {Field, Setting} from './MultiEditionSettingsPage';\n\ninterface MultiEditionSettingsFormProps {\n  fieldsSettings: MultiEditionSettings;\n  stepSetting: Setting;\n  otherSetting: Setting\n  onChange(field: Field, stepSetting: Setting, otherSetting: Setting): void; \n  children: any;\n}\n\nconst MultiEditionSettingsForm = (props: MultiEditionSettingsFormProps) => {\n  \n  const fieldsArray = [\n    {id: \"payerName\", label: \"Recebi (emos) de\", field: Field.PayerName},\n    {id: \"referrerTo\", label: \"Referente\", field: Field.ReferrerTo},\n    {id: \"paidValue\", label: \"Valor\", field: Field.PaidValue},\n    {id: \"payerAddress\", label: \"Endereço\", field: Field.PayerAddress},\n    {id: \"date\", label: \"Data\", field: Field.Date},\n    {id: \"payeeName\", label: \"Emitente\", field: Field.PayeeName},\n    {id: \"payeeCpfOrRg\", label: \"CPF/RG\", field: Field.PayeeCpfOrRg}\n  ];\n\n  return (\n    <form name={\"multipleedit-form-\" + props.stepSetting}\n      action=\"javascript:void(0);\"\n      noValidate >\n      \n      {fieldsArray.map((field) => {\n        return (\n        <div>\n          <label htmlFor={field.id}>{field.label}</label>\n          <input \n            name={field.id}\n            id={field.id}\n            type=\"checkbox\"   \n            checked={props.fieldsSettings.getFieldSetting(field.field) === props.stepSetting}\n            onChange={() => props.onChange(field.field, props.stepSetting, props.otherSetting)}\n            disabled={props.fieldsSettings.getFieldSetting(field.field) === props.otherSetting}\n            />\n        </div>\n        )\n      })}\n      \n      <div className=\"action-bar\">\n        {props.children}\n        {/* <button onClick={() => setStep(2)}>\n          Continuar\n        </button> */}\n      </div>\n    </form>\n  )\n}\n\nexport default MultiEditionSettingsForm;","import React, {useState, useEffect} from 'react';\nimport Database from '../../db/Database';\n\nimport MultiEditionSettingsForm from './MultiEditionSettingForm';\nimport { Field, Setting } from '../../db/MultiEditionSettings';\nimport MultiEditionSettings from '../../db/MultiEditionSettings';\n\ninterface MultiEditionSettingsPageProps {\n  database: Database;\n  nextPageHash?: string;\n}\n\nconst MultiEditionSettingsPage = (props: MultiEditionSettingsPageProps) => {\n  const [multiEditionSettings, setMultiEditionSettings] = useState<MultiEditionSettings>(new MultiEditionSettings());\n\n  const [step, setStep] = useState<number>(1);\n  \n  useEffect(() => {\n    props.database.getMultiEditionSettings()\n    .then((multiEditionSettings) => {\n      setMultiEditionSettings(multiEditionSettings);\n    })\n    .catch(() => {\n      console.error('Fail to load fieldsSettings');\n    })\n  }, [])\n\n  function setFieldSetting(field: Field, setting: Setting) {\n    const newMESettings = MultiEditionSettings.Instance(multiEditionSettings.fieldSettings);\n    newMESettings.setFieldSetting(field, setting);\n    setMultiEditionSettings(newMESettings);\n  }\n\n  function handleOnChange(field: Field, stepSetting: Setting, otherSetting: Setting) {\n    const setting = multiEditionSettings.getFieldSetting(field);\n    \n    if (setting === stepSetting) {\n      setFieldSetting(field, Setting.None);\n    }\n\n    if (setting === otherSetting) {\n      setFieldSetting(field, stepSetting);\n    }\n\n    if (setting === Setting.None) {\n      setFieldSetting(field, stepSetting);\n    }\n  }\n  \n  function handleClickOnBack() {\n    if (step == 1) {\n      window.history.back();\n    } else {\n      setStep(step - 1);\n    }\n  }\n\n  function handleClickOnClose() {\n    window.history.back();\n  }\n\n  function handleSaveAndNext() {\n    props.database.saveMultiEditionSettings(multiEditionSettings)\n      .then(() => {\n        if (props.nextPageHash) {\n          window.location.hash = props.nextPageHash\n        } else {\n          window.history.back();\n        }\n      })\n      .catch((err) => {\n        alert(\"Erro ao tentar gravar.\")\n        console.log(err);\n      })\n  }\n\n  return (\n   <div>\n     <header className=\"top-app-bar\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={handleClickOnBack}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          {step===1 && \"1 de 2 Campos de referência\"}\n          {step===2 && \"2 de 2 Campos a mudar\"}\n        </div>\n\n        <div className=\"top-app-bar__right-part\">\n          <a onClick={handleClickOnClose}>\n            <i className=\"fas fa-times top-app-bar__icon\"></i>\n          </a>\n        </div>\n      </header>\n\n      {step===1 &&\n      <div>\n        <p></p>\n        <p>Selecione as informações que irão te ajudar a identificar qual recibo você estará editando.</p>\n        <MultiEditionSettingsForm\n          fieldsSettings={multiEditionSettings}\n          stepSetting={Setting.ToIdentify}\n          otherSetting={Setting.ToUpdate}\n          onChange={handleOnChange}\n        >\n          <div className=\"action-bar\">\n            <button onClick={() => setStep(2)}>\n              Continuar\n            </button>\n          </div>\n        </MultiEditionSettingsForm>\n      </div>\n      }\n\n      {step===2 &&\n      <div>\n        <p></p>\n        <p>Selecione quais as informações que você quer atualizar.</p>\n        \n        <MultiEditionSettingsForm\n          fieldsSettings={multiEditionSettings}\n          stepSetting={Setting.ToUpdate}\n          otherSetting={Setting.ToIdentify}\n          onChange={handleOnChange}\n        >\n          <div className=\"action-bar\">\n            <button onClick={handleSaveAndNext}>\n              Salvar e seguir\n            </button>\n          </div>\n        </MultiEditionSettingsForm>\n      </div>\n      }\n   </div>\n  )\n}\n\nexport {Field, Setting}\nexport default MultiEditionSettingsPage;","import React from 'react';\n\ninterface ReceiptFormInputProps {\n  id: string,\n  label: string,\n  value: string,\n  type: string,\n  onChange(e: any): void\n  readonly?: boolean\n}\n\nconst ReceiptFormInput = (props: ReceiptFormInputProps) => {\n  return (\n    <div>\n      {!props.readonly && (\n        <div>\n          <label htmlFor={props.id}>{props.label}</label>\n          <input \n          className=\"u-full-width\" \n          type={props.type}   \n          name={props.id} \n          placeholder=\"\" \n          id={props.id}\n          value={props.value} \n          onChange={props.onChange}\n          autoFocus\n          />\n        </div>\n      )}\n\n      {props.readonly && (\n        <div>\n          <label htmlFor={props.id}>{props.label}</label>\n          <span>{props.value}</span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ReceiptFormInput;","import React, { useState, useEffect } from 'react';\nimport Receipt from '../../db/Receipt';\nimport ReceiptFormInput from './ReceiptFormInput';\nimport { Field, Setting } from '../../pages/MultiEditionSettings/MultiEditionSettingsPage';\n\ninterface ReceiptFormProps {\n  receipt: Receipt;\n  onChange(receipt: Receipt): void;\n  fieldsToIdentify: Array<Field>;\n  fieldsToUpdate: Array<Field>;\n}\n\nconst ReceiptForm = (props: ReceiptFormProps) => {\n  const [receipt, setReceipt] = useState<any>(props.receipt || new Receipt());\n\n  useEffect(() => {\n    setReceipt(props.receipt);\n  }, [props.receipt.id])\n  \n  const handleChange = function(e: any) {\n    const {name, value} = e.target;\n\n    setReceipt((prevState: any) => {\n      let receipt = { ...prevState }; \n      receipt[name] = value;\n      return receipt;\n    })\n\n    const receiptModel = new Receipt();\n    receiptModel.id = receipt.id;\n    receiptModel.payerName = receipt.payerName;\n    receiptModel.payerAddress = receipt.payerAddress;\n    receiptModel.referrerTo = receipt.referrerTo;\n    receiptModel.paidValue = receipt.paidValue;\n    receiptModel.paidValueAsText = receipt.paidValueAsText;\n    receiptModel.date = receipt.date;\n    receiptModel.payeeName = receipt.payeeName;\n    receiptModel.payeeCpfOrRg = receipt.payeeCpfOrRg;\n    receiptModel.payeeAddress = receipt.payeeAddress;\n    \n    props.onChange(receiptModel);\n  };\n\n  const mapFieldsData = new Map<Field, any>([\n    [Field.PayerName, {id: \"payerName\", label: \"Recebi (emos) de\", value: receipt.payerName, type: \"text\"}],\n    [Field.ReferrerTo, {id: \"referrerTo\", label: \"Referente\", value: receipt.referrerTo, type: \"text\"}],\n    [Field.PaidValue, {id: \"paidValue\", label: \"Valor\", value: receipt.paidValue, type: \"text\"}],\n    [Field.PayerAddress, {id: \"payerAddress\", label: \"Endereço\", value: receipt.payerAddress, type: \"text\"}],\n    [Field.Date, {id: \"date\", label: \"Data\", value: receipt.date, type: \"date\"}],\n    [Field.PayeeName, {id: \"payeeName\", label: \"Emitente\", value: receipt.payeeName, type: \"text\"}],\n    [Field.PayeeCpfOrRg, {id: \"payeeCpfOrRg\", label: \"CPF/RG\", value: receipt.payeeCpfOrRg, type: \"text\"}]\n  ]);\n\n  function getField(field: Field, readonly: boolean) {\n    const fieldData = mapFieldsData.get(field);\n    \n    return (\n      <ReceiptFormInput\n        id={fieldData.id}\n        label={fieldData.label}\n        value={fieldData.value}\n        type={fieldData.type}\n        onChange={handleChange}\n        readonly={readonly}\n      />\n    )\n  }\n\n  return (\n    <form className=\"receipt-form\" name=\"receipt-form\" \n      action=\"javascript:void(0);\"\n      noValidate >\n     \n      {props.fieldsToIdentify.map(function(field: Field) {\n        return getField(field, true);\n      })}\n\n      {props.fieldsToUpdate.map(function(field: Field) {\n        return getField(field, false);\n      })}\n\n      {/* botão de persistir e seguir para o proximo */}\n    </form>\n  )\n};\n\nexport default ReceiptForm;","import React, {useState, useEffect} from 'react';\nimport Database from '../../db/Database';\nimport ReceiptForm from '../../components/receiptform/ReceiptForm';\nimport Receipt from '../../db/Receipt';\nimport MultiEditionSettings from '../../db/MultiEditionSettings'\n\ninterface MultiEditionPageProps {\n  database: Database;\n  receiptIds: [number];\n  currentIndex: number;\n}\n\nconst MultiEditionPage = (props: MultiEditionPageProps) => {\n  const [loading, setLoading] = useState(true);\n\n  const [receipt, setReceipt] = useState<Receipt>();\n  const [multiEditionSettings, setMultiEditionSettings] = \n    useState<MultiEditionSettings>(new MultiEditionSettings());\n\n  useEffect(() => {\n    props.database.getMultiEditionSettings()\n    .then((multiEditionSettings) => {\n      setMultiEditionSettings(multiEditionSettings);\n    })\n    .catch((err) => {\n      console.error('Fail to load fieldsSettings', err);\n    })\n\n    props.database.getReceipt(props.receiptIds[props.currentIndex])\n      .then((receipt) => {\n        setReceipt(receipt);\n      })\n      .catch((err) => {\n        console.error('Fail to load fieldsSettings', err);\n      })\n      .finally(() => {\n        setLoading(false);\n      })\n  }, [props.currentIndex])\n  \n  async function next() {\n    await props.database.updateReceipt(receipt!, receipt!.id!);\n    const nextIndex = props.currentIndex + 1;\n    if (nextIndex < props.receiptIds.length) {\n      window.location.hash = `#multi-edition?receiptIds=${JSON.stringify(props.receiptIds)}&current=${nextIndex}`;\n    } else {\n      window.location.hash = '#receipt-list';\n    }\n  }\n\n  return (\n    <div>\n      <header className=\"top-app-bar\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={() => (window.history.back())}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          Editando {props.currentIndex + 1} de {props.receiptIds.length}\n        </div>\n\n        <div className=\"top-app-bar__right-part\">\n        </div>\n      </header>\n      \n      {loading && (\n        <span>Loading</span>\n      )}\n\n      {!loading && (\n        <div>\n          <ReceiptForm\n            receipt={receipt!}\n            onChange={(receipt) => setReceipt(receipt)}\n            fieldsToIdentify={multiEditionSettings.fieldsToIdentify()}\n            fieldsToUpdate={multiEditionSettings.fieldsToUpdate()}\n          />\n\n          <div className=\"action-bar\">\n            <button onClick={next}>\n              Salvar e próximo\n            </button>\n          </div>\n        </div>\n      )}\n   </div>\n  )\n  \n  \n};\n\nexport default MultiEditionPage;","import React, {useState, useEffect} from 'react';\n\n\ninterface SettingsPageProps {\n}\n\nconst SettingsPage = (props: SettingsPageProps) => {\n\n  return (\n   <div>\n     <header className=\"top-app-bar\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={() => (window.history.back())}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          Configurações\n        </div>\n\n        <div className=\"top-app-bar__right-part\">\n        </div>\n      </header>\n\n      <p></p>\n      <button onClick={() => window.location.hash = \"#multi-edition-settings\"}>\n        Configurar campos de edição multipla.\n      </button>\n   </div>\n  )\n}\n\nexport default SettingsPage;","class UserSetting {\n  id?: string;\n  value?: string;\n}\n\n\nexport default UserSetting;","import Receipt  from './Receipt';\nimport {Field, Setting} from '../pages/MultiEditionSettings/MultiEditionSettingsPage';\nimport UserSetting from './UserSetting';\nimport MultiEditionSettings from './MultiEditionSettings';\n\nclass Database {\n  \n  #db: any;\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const dbOpenReq = indexedDB.open('EasyReceipts', 1);\n  \n      dbOpenReq.onerror = (err) => {\n        console.error('error creating/connecting to db', err);\n        reject('Failed to connected/create/update DB');\n      };\n  \n      dbOpenReq.onsuccess = (event: any) => {\n        this.#db = event.target?.result;\n        console.info('connected successfuly to DB')\n        resolve(\"Connected\");\n      };\n  \n      dbOpenReq.onupgradeneeded = (event: any) => {\n        this.#db = event.target?.result;\n  \n        this.#db.createObjectStore('receipt', {\n          autoIncrement: true\n        });\n        \n        const userSettingStore = this.#db.createObjectStore('userSetting', {keyPath: 'id'});\n        userSettingStore.createIndex(\"value\", \"value\", { unique: false });\n      };\n    });\n  }\n\n  executeWithinTransaction(table: string, changes: {(objectStore: IDBObjectStore) : IDBRequest}) {\n    return new Promise((resolve, reject) => {\n      const transaction = this.#db.transaction([table], 'readwrite');\n      const objectStore = transaction.objectStore(table);\n      \n      const request = changes.apply(undefined, [objectStore]);\n      \n      request.onerror = function(event: any) {\n        console.error(`Error on executing transaction on table ${table}`);\n        reject();\n      };\n      \n      request.onsuccess = function(event: any) {\n        resolve(true);\n      };\n    })\n  }\n\n  fetchById <Type> (table: string, id: any) : Promise<Type | undefined>{\n    return new Promise((resolve, reject) => {\n      var transaction = this.#db.transaction([table]);\n      var objectStore = transaction.objectStore(table);\n      \n      var request = objectStore.get(id);\n      \n      request.onerror = function(event: any) {\n        console.error(`Error on fiding ${id} on table ${table}`);\n        reject();\n      };\n      \n      request.onsuccess = function(event: any) {\n        if (!request.result) {\n          resolve(undefined);\n        } else {\n          const result = request.result;\n          result.id = id;\n          resolve(result as Type);\n        }\n      };\n    })\n  }\n\n  async saveMultiEditionSettings(multiEditionSettings: MultiEditionSettings) {\n    const userSettingME = await this.fetchById('userSetting', 'multi-edition');\n    \n    return this.executeWithinTransaction('userSetting', (objectStore: IDBObjectStore) => {\n      const userSetting = new UserSetting();\n      userSetting.id = 'multi-edition';\n      userSetting.value = JSON.stringify(Array.from(multiEditionSettings.fieldSettings));\n\n      var request;\n      if (!userSettingME) {\n        request = objectStore.add(userSetting);\n      } else {\n        request = objectStore.put(userSetting);\n      }\n      return request;\n    })\n  }\n\n  getMultiEditionSettings() {\n    return new Promise<MultiEditionSettings>(async (resolve, reject) => {\n      const userSetting = await this.fetchById<UserSetting>('userSetting', 'multi-edition');\n\n      if (!userSetting) {\n        resolve(new MultiEditionSettings());\n      } else {\n        resolve(MultiEditionSettings.Instance(new Map<Field, Setting>(JSON.parse(userSetting.value || ''))));\n      }\n    })\n  }\n\n  addReceipt(receipt: Receipt) {\n    return this.executeWithinTransaction('receipt', (objectStore: IDBObjectStore) => {\n      return objectStore.add(receipt);\n    })\n  };\n\n  updateReceipt(receipt: Receipt, id: number) {\n    if (!id) {\n      throw new Error('Id must not be undefined!')\n    }\n    return this.executeWithinTransaction('receipt', (objectStore: IDBObjectStore) => {\n      return objectStore.put(receipt, id);\n    })\n  }\n\n  deleteReceipt(id: number) {\n    return this.executeWithinTransaction('receipt', (objectStore: IDBObjectStore) => {\n      return objectStore.delete(id);\n    })\n  };\n\n  batchDelete(ids: IterableIterator<number>) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      let nextId = ids.next();\n      while (!nextId.done) {\n        transaction.objectStore('receipt').delete(nextId.value);;\n        nextId = ids.next();\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on deleting batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  batchAdd(receipts: IterableIterator<Receipt>) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      let nextReceipt = receipts.next();\n      while (!nextReceipt.done) {\n        transaction.objectStore('receipt').add(nextReceipt.value);;\n        nextReceipt = receipts.next();\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on adding batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  arrayAdd(receipts: Receipt[]) {\n    return new Promise<void>((resolve, reject) => {\n      const transaction = this.#db.transaction(['receipt'], \"readwrite\");\n      \n      for (let i = 0; i < receipts.length; i++) {\n        transaction.objectStore('receipt').add(receipts[i]);;\n      }\n\n      transaction.oncomplete = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      transaction.onerror = function(event: any) {\n        console.error('Error on adding batch of receipts');\n        reject();\n      };\n    })\n  };\n\n  //TODO EVOLUIR PARA TRATAR CASOS DE ERRO\n  getReceipts(ids: [number]) {    \n    return new Promise<Receipt[]>((resolve, reject) => {\n      const receipts =  new Array<Receipt>();\n      \n      ids.map((id: number, index: number) => {\n        this.getReceipt(id)\n          .then((receipt) => {\n            receipts.push(receipt);\n            if (index === ids.length - 1) {\n              resolve(receipts);\n            }\n          })\n      })\n    })\n  }\n  //TODO: ADD class type RECEIPT when returning a receipt\n  getReceipt(id: number) {\n    return new Promise<Receipt>(async (resolve, reject) => {\n      const receipt = await this.fetchById<Receipt>('receipt', id);\n\n      if (!receipt) {\n        console.warn('Receipt not found');\n        resolve(new Receipt());\n      } else {\n        resolve(receipt);\n      }\n    })\n  };\n\n  // TODO RETURN RECEIPT OBJECT LIST\n  getAllReceipts() {\n    return new Promise<Receipt[]>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt']);\n      var objectStore = transaction.objectStore('receipt');\n      var receipts: Receipt[] = [];\n\n      objectStore.openCursor().onsuccess = function(event: any) {\n        var cursor = event.target.result;\n        if (cursor) {\n          const receiptModel = new Receipt();\n    \n          receiptModel.payerName = cursor.value.payerName;\n          receiptModel.payerAddress = cursor.value.payerAddress;\n          receiptModel.referrerTo = cursor.value.referrerTo;\n          receiptModel.paidValue = cursor.value.paidValue;\n          receiptModel.paidValueAsText = cursor.value.paidValueAsText;\n          receiptModel.date = cursor.value.date;\n          receiptModel.payeeName = cursor.value.payeeName;\n          receiptModel.payeeCpfOrRg = cursor.value.payeeCpfOrRg;\n          receiptModel.payeeAddress = cursor.value.payeeAddress;\n          receiptModel.id = cursor.key;\n          \n          receipts.push(receiptModel);\n          cursor.continue();\n        }\n        else {\n          console.log(\"No more entries!\");\n          resolve(receipts);\n        }\n      };\n    })\n  }\n\n  db() {\n    return this.#db;\n  }\n}\n\n//await database.connect();\nexport default Database;\n\n","import React, {useState, useEffect} from 'react';\nimport './css/Normalize.css';\nimport './css/SkeletonCustomizedByMe.css';\nimport './css/Common.css';\nimport './css/App.css';\n\nimport ReceiptCardsPage from './pages/ListReceiptCards/ListReceiptCardPage';\nimport NewEditReceiptPage from './pages/NewEditReceipt/NewEditReceiptPage';\nimport ReceiptsToPrintPage from './pages/ReceiptsToPrint/ReceiptsToPrintPage';\nimport MultipleEditionSettings from './pages/MultiEditionSettings/MultiEditionSettingsPage';\nimport MultiEditionPage from './pages/MultiEdition/MultiEditionPage';\nimport SettingsPage from './pages/Settings/SettingsPage';\n\nimport Database from './db/Database';\n\ndeclare global {\n  interface Window { Database: any; }\n}      \n\n// #receipt-list\n// #receipt\n// #receipt/102\n// #receipt-clone/100\n// #receipts-to-print?receiptIds=[1,2,3,4,5,6]\n\ninterface RouteTo {\n  path: string;\n  pathId: string;\n  queryString: Map<string,string>;\n}\n\nfunction pathSplitted() {\n  const hash = window.location.hash.substr(1);\n  \n  var params: Map<string,string> = new Map();\n  \n  const splitted = hash.split('/');\n  let path = splitted[0] || '';\n  let pathId = splitted[1] || '';\n  \n  if (hash.includes('?')) {\n    const secondSplit = hash.split('?');\n    path = secondSplit[0];\n  \n    const hashQueryString = secondSplit[1] || '';\n    hashQueryString.split('&').map(hk => { \n      let temp = hk.split('='); \n      params.set(temp[0], temp[1]);\n    });\n  }\n\n  return {\n    path: path,\n    pathId: pathId,\n    queryString: params\n  } as  RouteTo\n}\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(pathSplitted().path);\n  const [identifier, setIdentifier] = useState(parseInt(pathSplitted().pathId));\n  const [hashQueryString, setHashQueryString] = useState<Map<string,string>>(pathSplitted().queryString);\n  function locationHashChanged() {\n    const object = pathSplitted();\n    setCurrentPage(object.path);\n    setIdentifier(parseInt(object.pathId));\n    setHashQueryString(object.queryString);\n  }\n  window.onhashchange = locationHashChanged;\n\n  const [database, setDatabase] = useState<Database>(new Database);\n  \n  useEffect(() => {\n    async function connectDB() {\n      await database.connect();\n      setLoading(false);\n\n      window.Database = database;\n    };\n    connectDB();\n  }, []);\n\n  return (\n    <div className=\"rootApp\">\n      <main>\n        {\n          (() => {\n\n            if (loading) {\n              return <span>Loading</span>\n            }\n\n            if (!currentPage ||  currentPage === 'receipt-list') {\n              return <ReceiptCardsPage \n                database={database}>\n              </ReceiptCardsPage>\n            }\n\n            if (currentPage === 'receipt-clone' && identifier) {\n              return <NewEditReceiptPage\n                receiptId={identifier}\n                database={database}\n                toClone\n              />\n            }\n\n            if (currentPage === 'receipt' && identifier) {\n              return <NewEditReceiptPage\n                receiptId={identifier}\n                database={database}\n              />\n            }\n\n            if (currentPage === 'receipt') {\n              return <NewEditReceiptPage\n                database={database}\n              />\n            }\n            \n            const receiptIds = hashQueryString.get('receiptIds');\n            if (currentPage === 'receipts-to-print' && receiptIds != undefined) {\n              return <ReceiptsToPrintPage \n                database={database}\n                receiptIds={JSON.parse(receiptIds)}\n                />\n            }\n\n            const current = hashQueryString.get('current');\n            if (currentPage === 'multi-edition' && receiptIds != undefined) {\n              return <MultiEditionPage\n                database={database}\n                receiptIds={JSON.parse(receiptIds)}\n                currentIndex={current ? parseInt(current) : 0}\n                />\n            }\n\n            if (currentPage === 'multi-edition-settings') {\n              return <MultipleEditionSettings \n                database={database}\n                />\n            }\n\n            if (currentPage === 'settings') {\n              return <SettingsPage/>\n            }\n\n            return \"NOTFOUND\"\n          })()\n        }\n      </main>\n\n      <footer className=\"bottom-app-bar\">\n        <a href=\"#receipt-list\" className=\"bottom-app-bar_icon\">\n            <i className={\"fas fa-list \" \n            + (currentPage == 'receipt-list' || currentPage == '' ? 'opacity-half' : '')}></i>\n            <span>Lista</span>\n        </a>\n        <a href=\"#receipt\" className=\"bottom-app-bar_icon\">\n          <i className={\"fas fa-plus-square \" + (currentPage == 'receipt' ? 'opacity-half' : '')}></i>\n          <span>Novo</span>\n        </a>\n        <a href=\"#settings\" className=\"bottom-app-bar_icon\">\n          <i className={\"fas fa-cogs \" + (currentPage == 'settings' ? 'opacity-half' : '')}></i>\n          <span>Configurações</span>\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}