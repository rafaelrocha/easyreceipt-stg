{"version":3,"sources":["components/receiptcard/ReceiptCard.tsx","pages/ListReceiptCards/ReceiptCards.tsx","db/Receipt.tsx","pages/NewEditReceipt/NewEditReceipt.tsx","components/receipt/Receipt.js","components/receipt/ReceiptStub.js","pages/ReceiptsToPrint/ReceiptsToPrint.tsx","db/Database.tsx","App.tsx","index.tsx"],"names":["ReceiptCard","observer","props","className","receipt","payerName","referrerTo","paidValue","href","index","onClick","window","confirm","removeReceipt","ReceiptCards","database","useState","receipts","setReceipts","useEffect","a","getAllReceipts","fetchReceipts","payerNameFiltering","setPayerNameFiltering","id","deleteReceipt","then","catch","exception","alert","console","log","type","name","placeholder","value","onChange","e","target","map","includes","key","payee","payeeName","payeeCpfOrRg","payeeAddress","date","Receipt","payerAddress","paidValueAsText","NewEditReceipt","setReceipt","isEditing","setIsEditing","receiptId","getReceipt","done","receiptModel","updateReceipt","addReceipt","location","hash","handleChange","prevState","history","back","action","noValidate","htmlFor","autoFocus","payer","readOnly","ReceiptStub","ReceiptsToPrint","print","Database","Promise","resolve","reject","dbOpenReq","indexedDB","open","onerror","err","error","onsuccess","event","result","info","onupgradeneeded","createObjectStore","autoIncrement","transaction","oncomplete","objectStore","add","put","request","delete","get","warn","openCursor","cursor","push","continue","this","pathSplitted","splitted","substr","split","first","second","App","loading","setLoading","currentPage","setCurrentPage","parseInt","identifier","setIdentifier","onhashchange","connect","connectDB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ocA6CeA,G,MAxCKC,aAAS,SAACC,GAE1B,OACE,yBAAKC,UAAU,gBACb,wBAAIA,UAAU,uBAAuBD,EAAME,QAAQC,WAAa,OAEhE,yBAAKF,UAAU,yBACb,2BAAID,EAAME,QAAQE,YAAc,OAChC,0BAAMH,UAAU,uBAAhB,MAA0CD,EAAME,QAAQG,WAAa,MAGvE,yBAAKJ,UAAU,wBACb,yBAAKA,UAAU,wBACb,+CAGF,yBAAKA,UAAU,mBAEf,yBAAKA,UAAU,4BACb,uBAAGA,UAAU,uBAAuBK,KAAM,YAAcN,EAAMO,OAC5D,uBAAGN,UAAU,iBAEf,uBAAGA,UAAU,wBACX,uBAAGA,UAAU,kBAEf,uBAAGA,UAAU,uBAAuBO,QAAS,YAE5B,IADAC,OAAOC,QAAQ,0CAE5BV,EAAMW,cAAcX,EAAMO,SAG5B,uBAAGN,UAAU,yBCmDZW,G,MAlFM,SAACZ,GACpB,IAAMa,EAAWb,EAAMa,SADY,EAEHC,mBAAgB,IAFb,mBAE5BC,EAF4B,KAElBC,EAFkB,KAInCC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACyBL,EAASM,iBADlC,OACQJ,EADR,OAEEC,EAAYD,GAFd,4CADc,uBAAC,WAAD,wBAKdK,KACC,IAVgC,MAYgBN,mBAAS,IAZzB,mBAY7BO,EAZ6B,KAYTC,EAZS,KAcnC,SAASX,EAAcY,GAGrBV,EAASW,cAAcD,GACpBE,KADH,sBACQ,4BAAAP,EAAA,sEACmBL,EAASM,iBAD5B,OACEJ,EADF,OAEJC,EAAYD,GAFR,4CAILW,OAAM,SAACC,GACNC,MAAM,mEACNC,QAAQC,IAAIH,MAIlB,OACE,yBAAK1B,UAAU,iBAEb,4BAAQA,UAAU,eAChB,yBAAKA,UAAU,2BACb,2BACE,uBAAGA,UAAU,kBAIjB,yBAAKA,UAAU,sBAAf,iBAIA,yBAAKA,UAAU,2BACb,2BACI8B,KAAK,SACLC,KAAK,SACLC,YAAY,oBACZV,GAAG,SACHtB,UAAU,SACViC,MAAOb,EAAoBc,SAAU,SAACC,GAAD,OAAOd,EAAsBc,EAAEC,OAAOH,YAKnF,yBAAKjC,UAAU,2BAGbc,EAASuB,KAAI,SAACpC,GAEd,GAAKA,EAAQC,UAAUoC,SAASlB,GAIhC,OAAO,kBAAC,EAAD,CACHmB,IAAKtC,EAAQqB,GACbhB,MAAOL,EAAQqB,GACfkB,MAAOvC,EAAQwC,UACfC,aAAczC,EAAQyC,aACtBC,aAAc1C,EAAQ0C,aACtBC,KAAM3C,EAAQ2C,KACd3C,QAASA,EAETS,cAAeA,W,uBC/DZmC,E,sCAbbvB,Q,OACApB,UAAoB,G,KACpB4C,aAAuB,G,KACvB3C,WAAqB,G,KACrBC,UAAoB,G,KACpB2C,gBAA0B,G,KAC1BH,KAAe,G,KACfH,UAAoB,G,KACpBC,aAAuB,G,KACvBC,aAAuB,ICkOVK,EAhOQ,SAACjD,GAEtB,IAAMa,EAAWb,EAAMa,SAF8B,EAGvBC,mBAAc,IAAIgC,GAHK,mBAG9C5C,EAH8C,KAGrCgD,EAHqC,OAInBpC,oBAAS,GAJU,mBAI9CqC,EAJ8C,KAInCC,EAJmC,KAMrDnC,qBAAU,WACJjB,EAAMqD,YACRD,GAAa,GACbvC,EAASyC,WAAWtD,EAAMqD,WACvB5B,MAAK,SAACvB,GACLgD,EAAWhD,MAEZwB,OAAM,SAACC,GACNC,MAAM,6CACNC,QAAQC,IAAIH,SAGjB,CAAC3B,EAAMqD,YAEV,IAIME,EAAI,uCAAG,4BAAArC,EAAA,0DACLsC,EAAe,IAAIV,GAEZ3C,UAAYD,EAAQC,UACjCqD,EAAaT,aAAe7C,EAAQ6C,aACpCS,EAAapD,WAAaF,EAAQE,WAClCoD,EAAanD,UAAYH,EAAQG,UACjCmD,EAAaR,gBAAkB9C,EAAQ8C,gBACvCQ,EAAaX,KAAO3C,EAAQ2C,KAC5BW,EAAad,UAAYxC,EAAQwC,UACjCc,EAAab,aAAezC,EAAQyC,aACpCa,EAAaZ,aAAe1C,EAAQ0C,cAEhCO,EAbO,kCAcHtC,EAAS4C,cAAcD,EAAcxD,EAAMqD,WAdxC,iDAgBHxC,EAAS6C,WAAWF,GAhBjB,QAkBX/C,OAAOkD,SAASC,KAAO,gBAlBZ,4CAAH,qDAqBJC,EAAe,SAASzB,GAAS,IAAD,EACdA,EAAEC,OAAjBL,EAD6B,EAC7BA,KAAME,EADuB,EACvBA,MAEbgB,GAAW,SAACY,GACV,IAAI5D,EAAO,eAAQ4D,GAEnB,OADA5D,EAAQ8B,GAAQE,EACThC,MAIX,OACE,yBAAKD,UAAU,eACb,4BAAQA,UAAU,eAChB,yBAAKA,UAAU,2BACb,uBAAGO,QAAS,kBAAOC,OAAOsD,QAAQC,SAChC,uBAAG/D,UAAU,wBAIjB,yBAAKA,UAAU,sBAAf,WAIEkD,GACF,yBAAKlD,UAAU,2BACb,uBAAGO,QAAS,WAjDlBC,OAAOkD,SAASC,KAAO,kBAkDf,uBAAG3D,UAAU,sCAKnB,0BAAMA,UAAU,eAAe+B,KAAK,eAClCiC,OAAO,sBACPC,YAAU,GASV,yBAAKjE,UAAU,iBAEb,2CAEA,2BAAOkE,QAAS,aAAhB,oBACA,2BACElE,UAAU,eACV8B,KAAK,OACLC,KAAM,YACNC,YAAY,GACZV,GAAI,YACJW,MAAOhC,EAAQC,UACfgC,SAAU0B,EACVO,WAAS,IAGX,2BAAOD,QAAS,cAAhB,aACA,2BACElE,UAAU,eACV8B,KAAK,OACLC,KAAM,aACNC,YAAY,GACZV,GAAI,aACJW,MAAOhC,EAAQE,WACf+B,SAAU0B,IAGZ,2BAAOM,QAAS,aAAhB,SACA,2BACElE,UAAU,eACV8B,KAAK,SACLC,KAAM,YACNC,YAAY,GACZV,GAAI,YACJW,MAAOhC,EAAQG,UACf8B,SAAU0B,KAIZ,2BAAOM,QAAS,gBAAhB,eACA,2BACElE,UAAU,eACV8B,KAAK,OACLC,KAAM,eACNC,YAAY,GACZV,GAAI,eACJW,MAAOhC,EAAQ6C,aACfZ,SAAU0B,IAEZ,yBAAK5D,UAAU,mBAajB,yBAAKA,UAAU,gBACb,2BAAOkE,QAAS,QAAhB,QACA,2BACElE,UAAU,eACV8B,KAAK,OACLC,KAAM,OACNC,YAAY,GACZV,GAAI,OACJW,MAAOhC,EAAQ2C,KACfV,SAAU0B,KAKd,yBAAK5D,UAAU,6BACb,4CACA,yBAAKA,UAAU,cACb,6BACE,2BAAOkE,QAAS,aAAhB,YACA,2BACElE,UAAU,eACV8B,KAAK,OACLC,KAAM,YACNC,YAAY,GACZV,GAAI,YACJW,MAAOhC,EAAQwC,UACfP,SAAU0B,KAGd,6BACE,2BAAOM,QAAS,gBAAhB,UACA,2BACElE,UAAU,eACV8B,KAAK,OACLC,KAAM,eACNC,YAAY,GACZV,GAAI,eACJW,MAAOhC,EAAQyC,aACfR,SAAU0B,MAKhB,2BAAOM,QAAS,gBAAhB,eACA,2BACElE,UAAU,eACV8B,KAAK,OACLC,KAAM,eACNC,YAAY,GACZV,GAAI,eACJW,MAAOhC,EAAQ0C,aACfT,SAAU0B,KAad,yBAAK5D,UAAU,cACb,4BAAQO,QAAS,kBAAM+C,MAAvB,cC7FKT,G,MAhIC/C,aAAS,SAACC,GAEtB,OACE,yBAAKC,UAAU,qBAEb,yBAAKA,UAAU,kBACb,wCAEA,6BACE,2BAAOkE,QAAS,iBAAmBnE,EAAMO,OAAzC,UACA,2BACEwB,KAAK,OACLC,KAAM,iBAAmBhC,EAAMO,MAC/B0B,YAAY,GACZV,GAAI,iBAAmBvB,EAAMO,SAIjC,6BACE,2BAAO4D,QAAS,aAAenE,EAAMO,OAArC,SACA,2BACEwB,KAAK,OACLC,KAAM,aAAehC,EAAMO,MAC3B0B,YAAY,GACZV,GAAI,aAAevB,EAAMO,MACzB2B,MAAOlC,EAAME,QAAQG,UAAW8B,SAAU,SAACC,GAAD,OAAOpC,EAAME,QAAQG,UAAY+B,EAAEC,OAAOH,WAI1F,yBAAKjC,UAAU,iBACb,2BAAOkE,QAAS,SAAWnE,EAAMO,OAAjC,oBACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,SAAWhC,EAAMO,MACvB0B,YAAY,GACZV,GAAI,SAAWvB,EAAMO,MACrB2B,MAAOlC,EAAME,QAAQmE,MAAOlC,SAAU,SAACC,GAAD,OAAOpC,EAAME,QAAQmE,MAAQjC,EAAEC,OAAOH,SAE9E,2BAAOiC,QAAS,gBAAkBnE,EAAMO,OAAxC,eACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,gBAAkBhC,EAAMO,MAC9B0B,YAAY,GACZV,GAAI,gBAAkBvB,EAAMO,MAC5B2B,MAAOlC,EAAME,QAAQ6C,aAAcZ,SAAU,SAACC,GAAD,OAAOpC,EAAME,QAAQ6C,aAAeX,EAAEC,OAAOH,SAE5F,2BAAOiC,QAAS,mBAAqBnE,EAAMO,OAA3C,uBACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,mBAAqBhC,EAAMO,MACjC0B,YAAY,GACZV,GAAI,mBAAqBvB,EAAMO,MAC/B2B,MAAOlC,EAAME,QAAQ8C,gBAAiBb,SAAU,SAACC,GAAD,OAAOpC,EAAME,QAAQ8C,gBAAkBZ,EAAEC,OAAOH,SAElG,2BAAOiC,QAAS,cAAgBnE,EAAMO,OAAtC,aACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,cAAgBhC,EAAMO,MAC5B0B,YAAY,GACZV,GAAI,cAAgBvB,EAAMO,MAC1B2B,MAAOlC,EAAME,QAAQE,WAAY+B,SAAU,SAACC,GAAD,OAAOpC,EAAME,QAAQE,WAAagC,EAAEC,OAAOH,UAG1F,yBAAKjC,UAAU,gBACb,2BAAOkE,QAAS,QAAUnE,EAAMO,OAAhC,QACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,QAAUhC,EAAMO,MACtB0B,YAAY,GACZV,GAAI,QAAUvB,EAAMO,MACpB2B,MAAOlC,EAAM6C,KACbyB,UAAQ,KAGZ,yBAAKrE,UAAU,iBACb,yBAAKA,UAAU,cACb,6BACE,2BAAOkE,QAAS,SAAWnE,EAAMO,OAAjC,YACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,SAAWhC,EAAMO,MACvB0B,YAAY,GACZV,GAAI,SAAWvB,EAAMO,MACrB2B,MAAOlC,EAAMyC,MACb6B,UAAQ,KAEZ,6BACE,2BAAOH,QAAS,gBAAkBnE,EAAMO,OAAxC,UACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,gBAAkBhC,EAAMO,MAC9B0B,YAAY,GACZV,GAAI,gBAAkBvB,EAAMO,MAC5B2B,MAAOlC,EAAM2C,aACb2B,UAAQ,MAId,2BAAOH,QAAS,gBAAkBnE,EAAMO,OAAxC,eACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,gBAAkBhC,EAAMO,MAC9B0B,YAAY,GACZV,GAAI,gBAAkBvB,EAAMO,MAC5B2B,MAAOlC,EAAM4C,aACb0B,UAAQ,IAEV,2BAAOH,QAAS,kBAAoBnE,EAAMO,OAA1C,cACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,kBAAoBhC,EAAMO,MAChC0B,YAAY,GACZV,GAAI,kBAAoBvB,EAAMO,cCxC3BgE,EAjFKxE,aAAS,SAACC,GAE1B,OACE,yBAAKC,UAAU,qBAEb,yBAAKA,UAAU,kBACb,6BACE,2BAAOkE,QAAS,iBAAmBnE,EAAMO,OAAzC,UACA,2BACEwB,KAAK,OACLC,KAAM,iBAAmBhC,EAAMO,MAC/B0B,YAAY,GACZV,GAAI,iBAAmBvB,EAAMO,SAIjC,6BACE,2BAAO4D,QAAS,aAAenE,EAAMO,OAArC,SACA,2BACEwB,KAAK,OACLC,KAAM,aAAehC,EAAMO,MAC3B0B,YAAY,GACZV,GAAI,aAAevB,EAAMO,MACzB2B,MAAOlC,EAAME,QAAQG,UAAW8B,SAAU,SAACC,GAAD,OAAOpC,EAAME,QAAQG,UAAY+B,EAAEC,OAAOH,WAI1F,yBAAKjC,UAAU,iBACb,2BAAOkE,QAAS,SAAWnE,EAAMO,OAAjC,oBACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,SAAWhC,EAAMO,MACvB0B,YAAY,GACZV,GAAI,SAAWvB,EAAMO,MACrB2B,MAAOlC,EAAME,QAAQmE,MAAOlC,SAAU,SAACC,GAAD,OAAOpC,EAAME,QAAQmE,MAAQjC,EAAEC,OAAOH,SAE9E,2BAAOiC,QAAS,gBAAkBnE,EAAMO,OAAxC,eACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,gBAAkBhC,EAAMO,MAC9B0B,YAAY,GACZV,GAAI,gBAAkBvB,EAAMO,MAC5B2B,MAAOlC,EAAME,QAAQ6C,aAAcZ,SAAU,SAACC,GAAD,OAAOpC,EAAME,QAAQ6C,aAAeX,EAAEC,OAAOH,SAE5F,2BAAOiC,QAAS,mBAAqBnE,EAAMO,OAA3C,uBACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,mBAAqBhC,EAAMO,MACjC0B,YAAY,GACZV,GAAI,mBAAqBvB,EAAMO,MAC/B2B,MAAOlC,EAAME,QAAQ8C,gBAAiBb,SAAU,SAACC,GAAD,OAAOpC,EAAME,QAAQ8C,gBAAkBZ,EAAEC,OAAOH,SAElG,2BAAOiC,QAAS,cAAgBnE,EAAMO,OAAtC,aACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,cAAgBhC,EAAMO,MAC5B0B,YAAY,GACZV,GAAI,cAAgBvB,EAAMO,MAC1B2B,MAAOlC,EAAME,QAAQE,WAAY+B,SAAU,SAACC,GAAD,OAAOpC,EAAME,QAAQE,WAAagC,EAAEC,OAAOH,UAG1F,yBAAKjC,UAAU,gBACb,2BAAOkE,QAAS,QAAUnE,EAAMO,OAAhC,QACA,2BACEN,UAAU,eACV8B,KAAK,OACLC,KAAM,QAAUhC,EAAMO,MACtB0B,YAAY,GACZV,GAAI,QAAUvB,EAAMO,MACpB2B,MAAOlC,EAAM6C,KACbyB,UAAQ,SCALE,G,MApES,SAACxE,GACvB,IAAMa,EAAWb,EAAMa,SADgC,EAEvBC,mBAAgB,IAFO,mBAEhDC,EAFgD,KAEtCC,EAFsC,KAYvD,OARAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACyBL,EAASM,iBADlC,OACQJ,EADR,OAEEC,EAAYD,GAFd,4CADc,uBAAC,WAAD,wBAKdK,KACC,IAGD,yBAAKnB,UAAU,yBAEb,4BAAQA,UAAU,4BAChB,yBAAKA,UAAU,2BACb,uBAAGO,QAAS,kBAAOC,OAAOsD,QAAQC,SAChC,uBAAG/D,UAAU,wBAIjB,yBAAKA,UAAU,sBAAf,aAKF,yBAAKA,UAAU,kBACb,4BAAQA,UAAU,8BAA8BO,QAASC,OAAOgE,OAAhE,aAKF,yBAAKxE,UAAU,IACb,wCACCc,EAASuB,KAAI,SAACpC,GAAD,OACZ,yBAAKsC,IAAKtC,EAAQqB,IAChB,kBAAC,EAAD,CACEiB,IAAKtC,EAAQqB,GACbhB,MAAOL,EAAQqB,GACfkB,MAAOvC,EAAQwC,UACfC,aAAczC,EAAQyC,aACtBC,aAAc1C,EAAQ0C,aACtBC,KAAM3C,EAAQ2C,KACd3C,QAASA,QAKf,uCACCa,EAASuB,KAAI,SAACpC,GAAD,OACZ,yBAAKsC,IAAKtC,EAAQqB,IAChB,kBAAC,EAAD,CACEiB,IAAKtC,EAAQqB,GACbhB,MAAOL,EAAQqB,GACfkB,MAAOvC,EAAQwC,UACfC,aAAczC,EAAQyC,aACtBC,aAAc1C,EAAQ0C,aACtBC,KAAM3C,EAAQ2C,KACd3C,QAASA,Y,2CC0ERwE,E,2JA1IF,IAAD,OACR,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAYC,UAAUC,KAAK,eAAgB,GAEjDF,EAAUG,QAAU,SAACC,GACnBrD,QAAQsD,MAAM,kCAAmCD,GACjDL,EAAO,yCAGTC,EAAUM,UAAY,SAACC,GAAgB,IAAD,EACpC,cAAI,GAAJ,aAAWA,EAAMhD,cAAjB,aAAW,EAAciD,OACzBzD,QAAQ0D,KAAK,+BACbX,EAAQ,cAGVE,EAAUU,gBAAkB,SAACH,GAAgB,IAAD,EAC1C,cAAI,GAAJ,aAAWA,EAAMhD,cAAjB,aAAW,EAAciD,OAEzB,cAAI,GAAJ,GAASG,kBAAkB,UAAW,CACpCC,eAAe,U,iCAMZxF,GAAmB,IAAD,OAC3B,OAAO,IAAIyE,SAAc,SAACC,EAASC,GACjC,IAAIc,EAAc,cAAI,GAAJ,GAASA,YAAY,CAAC,WAAY,aAEpDA,EAAYC,WAAa,SAASP,GAChCxD,QAAQC,IAAI,6BAA8BuD,IAG5CM,EAAYV,QAAU,SAASI,GAC7BxD,QAAQC,IAAI,2BAA4BuD,GACxCR,EAAO,kBAGSc,EAAYE,YAAY,WAChBC,IAAI5F,GACtBkF,UAAY,SAASC,GAC3BxD,QAAQC,IAAI,kBAAmBuD,GAC/BT,U,oCAMQ1E,EAAkBqB,GAAa,IAAD,OAC1C,OAAO,IAAIoD,SAAc,SAACC,EAASC,GACjC,IAAIc,EAAc,cAAI,GAAJ,GAASA,YAAY,CAAC,WAAY,aAEpDA,EAAYC,WAAa,SAASP,GAChCxD,QAAQC,IAAI,gCAAiCuD,IAG/CM,EAAYV,QAAU,SAASI,GAC7BxD,QAAQC,IAAI,kCAAmCuD,GAC/CR,EAAO,qBAGSc,EAAYE,YAAY,WAChBE,IAAI7F,EAASqB,GAC/B6D,UAAY,SAASC,GAC3BxD,QAAQC,IAAI,kBAAmBuD,GAC/BT,U,oCAKQrD,GAAa,IAAD,OACxB,OAAO,IAAIoD,SAAc,SAACC,EAASC,GACjC,IAAImB,EAAU,cAAI,GAAJ,GAASL,YAAY,CAAC,WAAY,aAC3CE,YAAY,WACZI,OAAO1E,GAEZyE,EAAQZ,UAAY,SAASC,GAE3BT,KAEFoB,EAAQf,QAAU,SAASI,GACzBxD,QAAQsD,MAAM,6BACdN,U,iCAMKtD,GAAa,IAAD,OACrB,OAAO,IAAIoD,SAAa,SAACC,EAASC,GAChC,IAEImB,EAFc,cAAI,GAAJ,GAASL,YAAY,CAAC,YACVE,YAAY,WAChBK,IAAI3E,GAC9ByE,EAAQf,QAAU,SAASI,GACzBxD,QAAQsD,MAAM,2BACdN,KAEFmB,EAAQZ,UAAY,SAASC,GAEtBW,EAAQV,SACXzD,QAAQsE,KAAK,qBACbvB,EAAQ,KAEVA,EAAQoB,EAAQV,c,uCAMJ,IAAD,OACf,OAAO,IAAIX,SAAe,SAACC,EAASC,GAClC,IACIgB,EADc,cAAI,GAAJ,GAASF,YAAY,CAAC,YACVE,YAAY,WACtC9E,EAAkB,GAEtB8E,EAAYO,aAAahB,UAAY,SAASC,GAC5C,IAAIgB,EAAShB,EAAMhD,OAAOiD,OACtBe,GACcA,EAAOnE,MACfX,GAAK8E,EAAO7D,IAEpBzB,EAASuF,KAAKD,EAAOnE,OACrBmE,EAAOE,aAGP1E,QAAQC,IAAI,oBACZ8C,EAAQ7D,U,2BAOd,OAAO,YAAAyF,KAAP,U,KC3HJ,SAASC,IACP,IAAMC,EAAWjG,OAAOkD,SAASC,KAAK+C,OAAO,GAAGC,MAAM,KACtD,MAAO,CACLC,MAAOH,EAAS,IAAM,GACtBI,OAAQJ,EAAS,IAAM,IAI3B,IA8EeK,EA9EH,WAAO,IAAD,EAEcjG,oBAAS,GAFvB,mBAETkG,EAFS,KAEAC,EAFA,OAGsBnG,mBAAS2F,IAAeI,OAH9C,mBAGTK,EAHS,KAGIC,EAHJ,OAIoBrG,mBAASsG,SAASX,IAAeK,SAJrD,mBAITO,EAJS,KAIGC,EAJH,KAShB7G,OAAO8G,aAJP,WACEJ,EAAeV,IAAeI,OAC9BS,EAAcF,SAASX,IAAeK,UAPxB,MAWgBhG,mBAAmB,IAAI4D,GAXvC,mBAWT7D,EAXS,UAuBhB,OAVAI,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sEACQL,EAAS2G,UADjB,OAEEP,GAAW,GAFb,4CADc,uBAAC,WAAD,wBAOdQ,KACC,IAGD,yBAAKxH,UAAU,WACb,8BAIU+G,EACK,yCAGJE,GAAgC,iBAAhBA,EAMD,YAAhBA,GAA6BG,EAExB,kBAAC,EAAD,CACLhE,UAAWgE,EACXxG,SAAUA,IAIM,YAAhBqG,EACK,kBAAC,EAAD,CACLrG,SAAUA,IAIM,sBAAhBqG,EACK,kBAAC,EAAD,CACLrG,SAAUA,IAGP,WAxBE,kBAAC,EAAD,CACLA,SAAUA,KA4BpB,4BAAQZ,UAAU,kBAChB,uBAAGK,KAAK,iBACN,uBAAGL,UAAU,iBAEf,uBAAGK,KAAK,YACN,uBAAGL,UAAU,wBAEf,uBAAGK,KAAK,sBACN,uBAAGL,UAAU,qBC1FvByH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.0b7a296c.chunk.js","sourcesContent":["import React from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './ReceiptCard.css';\n\nconst ReceiptCard = observer((props: any) => {\n\n    return (\n      <div className=\"receipt-card\">\n        <h3 className=\"receipt-card__title\">{props.receipt.payerName || \"...\"}</h3>\n        \n        <div className=\"receipt-card__content\">\n          <p>{props.receipt.referrerTo || \"...\"}</p>\n          <span className=\"receipt-card__price\">R$ {props.receipt.paidValue || \"?\"}</span>\n        </div>\n\n        <div className=\"receipt-card__bottom\">\n          <div className=\"receipt-card__number\">\n            <span>Nº 121212</span>\n          </div>\n\n          <div className=\"line-separator\"></div>\n\n          <div className=\"receipt-card__action-bar\">\n            <a className=\"receipt-card__button\" href={\"#receipt/\" + props.index}>\n              <i className=\"fas fa-edit\"></i>\n            </a>\n            <a className=\"receipt-card__button\">\n              <i className=\"fas fa-print\"></i>\n            </a>\n            <a className=\"receipt-card__button\" onClick={() => {\n              const answer = window.confirm(\"Realmente deseja remover esse recibo?\");\n              if (answer === true) {\n                props.removeReceipt(props.index)};\n              }\n            }>\n              <i className=\"fas fa-trash\"></i>\n            </a>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n)\nexport default ReceiptCard;","import React, { useState, useEffect } from 'react';\nimport ReceiptCard from '../../components/receiptcard/ReceiptCard';\n\nimport './ReceiptCards.css';\n\nconst ReceiptCards = (props: any) => {\n  const database = props.database;\n  const [receipts, setReceipts] = useState<any[]>([]);\n\n  useEffect(() => {\n    async function fetchReceipts() {\n      const receipts = await database.getAllReceipts();\n      setReceipts(receipts);\n    };\n    fetchReceipts();\n  }, []);\n\n  const[payerNameFiltering, setPayerNameFiltering] = useState(\"\");\n\n  function removeReceipt(id: number) {\n    // TODO deletion is not working\n    // TODO GOOD CASE FOR UNIT TEST, SUCCESS MEAN DELETED AND NOT FOUND??\n    database.deleteReceipt(id)\n      .then(async() => {\n        const receipts = await database.getAllReceipts();\n        setReceipts(receipts);\n      })\n      .catch((exception: any) => {\n        alert(\"Não foi possível deletar o recibo por um erro inesperado.\");\n        console.log(exception);\n      })\n  }\n\n  return (\n    <div className=\"receipts-card\">\n      \n      <header className=\"top-app-bar\">\n        <div className=\"top-app-bar__navigation\">\n          <a>\n            <i className=\"fas fa-home\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          Recibos Facil\n        </div>\n        \n        <div className=\"top-app-bar__right-part\">\n          <input \n              type=\"search\"\n              name=\"search\" \n              placeholder=\"Pesquise por nome\" \n              id=\"search\"\n              className=\"search\"\n              value={payerNameFiltering} onChange={(e) => setPayerNameFiltering(e.target.value)}\n              />\n        </div>\n      </header>\n\n      <div className=\"receipts-card-container\">\n\n      {\n        receipts.map((receipt) => {\n        \n        if (!receipt.payerName.includes(payerNameFiltering)) {\n          return;\n        }\n\n        return <ReceiptCard\n            key={receipt.id}\n            index={receipt.id}\n            payee={receipt.payeeName}\n            payeeCpfOrRg={receipt.payeeCpfOrRg}\n            payeeAddress={receipt.payeeAddress}\n            date={receipt.date}\n            receipt={receipt}\n\n            removeReceipt={removeReceipt}\n          />\n        })\n      } \n      \n      </div>\n    </div>\n  );\n}\n\nexport default ReceiptCards;","class Receipt {\n  id: number | undefined;\n  payerName: string = '';\n  payerAddress: string = '';\n  referrerTo: string = '';\n  paidValue: string = '';\n  paidValueAsText: string = '';\n  date: string = '';\n  payeeName: string = '';\n  payeeCpfOrRg: string = '';\n  payeeAddress: string = '';\n}\n\n\nexport default Receipt;","import React, { useState, useEffect } from 'react';\n\nimport './NewEditReceipt.css';\n\nimport Receipt from '../../db/Receipt'\nimport Database from '../../db/Database';\n\ninterface NewEditReceiptProps {\n  receiptId?: number,\n  database: Database\n}\n\nconst NewEditReceipt = (props: NewEditReceiptProps) => {\n\n  const database = props.database;\n  const [receipt, setReceipt] = useState<any>(new Receipt());\n  const [isEditing, setIsEditing] = useState(false)\n\n  useEffect(() => {\n    if (props.receiptId) {\n      setIsEditing(true);\n      database.getReceipt(props.receiptId)\n        .then((receipt) => {\n          setReceipt(receipt);\n        })\n        .catch((exception) => {\n          alert(\"Não foi possível carregar o recibo.\");\n          console.log(exception);\n        });\n    };\n  }, [props.receiptId]);\n  \n  const cancel = function() {\n    window.location.hash = \"#receipt-list\";\n  };\n\n  const done = async function() {\n    const receiptModel = new Receipt();\n    \n    receiptModel.payerName = receipt.payerName;\n    receiptModel.payerAddress = receipt.payerAddress;\n    receiptModel.referrerTo = receipt.referrerTo;\n    receiptModel.paidValue = receipt.paidValue;\n    receiptModel.paidValueAsText = receipt.paidValueAsText;\n    receiptModel.date = receipt.date;\n    receiptModel.payeeName = receipt.payeeName;\n    receiptModel.payeeCpfOrRg = receipt.payeeCpfOrRg;\n    receiptModel.payeeAddress = receipt.payeeAddress;\n\n    if (isEditing) {\n      await database.updateReceipt(receiptModel, props.receiptId!);\n    } else {\n      await database.addReceipt(receiptModel);\n    }\n    window.location.hash = \"#receipt-list\";\n  };\n\n  const handleChange = function(e: any) {\n    const {name, value} = e.target;\n\n    setReceipt((prevState: any) => {\n      let receipt = { ...prevState }; \n      receipt[name] = value;\n      return receipt;\n    })\n  };\n\n  return (\n    <div className=\"new-receipt\">\n      <header className=\"top-app-bar\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={() => (window.history.back())}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          Recibo\n        </div>\n\n        {!isEditing && \n        <div className=\"top-app-bar__right-part\">\n          <a onClick={() => cancel()}>\n            <i className=\"fas fa-times top-app-bar__icon\"></i>\n          </a>\n        </div>}\n      </header>\n\n      <form className=\"receipt-form\" name=\"receipt-form\" \n        action=\"javascript:void(0);\"\n        noValidate >\n        {/* <label htmlFor={\"receiptNumber\"}>Numero</label>\n        <input \n          type=\"text\" \n          name={\"receiptNumber\"} \n          placeholder=\"\" \n          id={\"receiptNumber\"}\n          /> */}\n\n        <div className=\"receipt-payer\">\n          \n          <h3>Recebido de</h3>\n\n          <label htmlFor={\"payerName\"}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerName\"} \n            placeholder=\"\" \n            id={\"payerName\"}\n            value={receipt.payerName} \n            onChange={handleChange}\n            autoFocus\n            />\n\n          <label htmlFor={\"referrerTo\" }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo\" } \n            placeholder=\"\" \n            id={\"referrerTo\" }\n            value={receipt.referrerTo} \n            onChange={handleChange}\n            />\n\n          <label htmlFor={\"paidValue\"}>Valor</label>\n          <input \n            className=\"u-full-width\" \n            type=\"number\"   \n            name={\"paidValue\"} \n            placeholder=\"\" \n            id={\"paidValue\"}\n            value={receipt.paidValue} \n            onChange={handleChange}\n            />\n          </div>\n\n          <label htmlFor={\"payerAddress\"}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress\"} \n            placeholder=\"\" \n            id={\"payerAddress\"}\n            value={receipt.payerAddress} \n            onChange={handleChange}\n            />\n          <div className=\"receipt-header\">\n          \n          {/* <label htmlFor={\"paidValueAsText\"}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText\"} \n            placeholder=\"\" \n            id={\"paidValueAsText\"}\n            value={receipt.paidValueAsText} onChange={(e) => receipt.paidValueAsText = e.target.value}/> */}\n\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date\"}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"date\"  \n            name={\"date\"} \n            placeholder=\"\" \n            id={\"date\"}\n            value={receipt.date} \n            onChange={handleChange}\n            />\n        </div>\n\n        \n        <div className=\"receipt-payee top-padding\">\n          <h3>Recebido por</h3>\n          <div className=\"emitentCpf\">\n            <div>\n              <label htmlFor={\"payeeName\"}>Emitente</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\" \n                name={\"payeeName\"} \n                placeholder=\"\" \n                id={\"payeeName\"}\n                value={receipt.payeeName}\n                onChange={handleChange}\n                />\n            </div>\n            <div>\n              <label htmlFor={\"payeeCpfOrRg\"}>CPF/RG</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\"   \n                name={\"payeeCpfOrRg\"} \n                placeholder=\"\" \n                id={\"payeeCpfOrRg\"}\n                value={receipt.payeeCpfOrRg} \n                onChange={handleChange}\n                />\n            </div>\n          </div>\n\n          <label htmlFor={\"payeeAddress\"}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeAddress\"} \n            placeholder=\"\" \n            id={\"payeeAddress\"}\n            value={receipt.payeeAddress} \n            onChange={handleChange}\n            />\n\n          {/* <label htmlFor={\"payeeSignature\"}>Assinatura</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeSignature\"} \n            placeholder=\"\" \n            id={\"payeeSignature\"}\n            /> */}\n        </div>\n\n        <div className=\"action-bar\">\n          <button onClick={() => done()}>\n            Pronto\n          </button>\n        </div>\n      </form>\n\n    </div>\n  );\n}\n\nexport default NewEditReceipt;","import React from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './Receipt.css';\n\nconst Receipt = observer((props) => {\n\n    return (\n      <div className=\"receipt-container\">\n        \n        <div className=\"receipt-header\">\n          <span>RECIBO</span>\n        \n          <div>\n            <label htmlFor={\"receiptNumber-\" + props.index}>Numero</label>\n            <input \n              type=\"text\" \n              name={\"receiptNumber-\" + props.index} \n              placeholder=\"\" \n              id={\"receiptNumber-\" + props.index}\n              />\n          </div>\n          \n          <div>\n            <label htmlFor={\"paidValue-\" + props.index}>Valor</label>\n            <input \n              type=\"text\"   \n              name={\"paidValue-\" + props.index} \n              placeholder=\"\" \n              id={\"paidValue-\" + props.index}\n              value={props.receipt.paidValue} onChange={(e) => props.receipt.paidValue = e.target.value}/>\n          </div>\n        </div>\n\n        <div className=\"receipt-payer\">\n          <label htmlFor={\"payer-\" + props.index}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payer-\" + props.index} \n            placeholder=\"\" \n            id={\"payer-\" + props.index}\n            value={props.receipt.payer} onChange={(e) => props.receipt.payer = e.target.value}/>\n\n          <label htmlFor={\"payerAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payerAddress-\" + props.index}\n            value={props.receipt.payerAddress} onChange={(e) => props.receipt.payerAddress = e.target.value}/>\n          \n          <label htmlFor={\"paidValueAsText-\" + props.index}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText-\" + props.index} \n            placeholder=\"\" \n            id={\"paidValueAsText-\" + props.index}\n            value={props.receipt.paidValueAsText} onChange={(e) => props.receipt.paidValueAsText = e.target.value}/>\n\n          <label htmlFor={\"referrerTo-\" + props.index }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo-\" + props.index } \n            placeholder=\"\" \n            id={\"referrerTo-\" + props.index }\n            value={props.receipt.referrerTo} onChange={(e) => props.receipt.referrerTo = e.target.value}/>\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date-\" + props.index}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"date-\" + props.index} \n            placeholder=\"\" \n            id={\"date-\" + props.index}\n            value={props.date} \n            readOnly/>\n        </div>\n\n        <div className=\"receipt-payee\">\n          <div className=\"emitentCpf\">\n            <div>\n              <label htmlFor={\"payee-\" + props.index}>Emitente</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\" \n                name={\"payee-\" + props.index} \n                placeholder=\"\" \n                id={\"payee-\" + props.index}\n                value={props.payee}\n                readOnly/>\n            </div>\n            <div>\n              <label htmlFor={\"payeeCpfOrRg-\" + props.index}>CPF/RG</label>\n              <input \n                className=\"u-full-width\" \n                type=\"text\"   \n                name={\"payeeCpfOrRg-\" + props.index} \n                placeholder=\"\" \n                id={\"payeeCpfOrRg-\" + props.index}\n                value={props.payeeCpfOrRg} \n                readOnly/>\n            </div>\n          </div>\n\n          <label htmlFor={\"payeeAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payeeAddress-\" + props.index}\n            value={props.payeeAddress} \n            readOnly/>\n\n          <label htmlFor={\"payeeSignature-\" + props.index}>Assinatura</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payeeSignature-\" + props.index} \n            placeholder=\"\" \n            id={\"payeeSignature-\" + props.index}\n            />\n        </div>\n      </div>\n    );\n  }\n)\nexport default Receipt;","import React from 'react';\nimport { observer } from \"mobx-react\";\n\nimport './Receipt.css';\n\nconst ReceiptStub = observer((props) => {\n\n    return (\n      <div className=\"receipt-container\">\n        \n        <div className=\"receipt-header\">\n          <div>\n            <label htmlFor={\"receiptNumber-\" + props.index}>Numero</label>\n            <input \n              type=\"text\" \n              name={\"receiptNumber-\" + props.index} \n              placeholder=\"\" \n              id={\"receiptNumber-\" + props.index}\n              />\n          </div>\n          \n          <div>\n            <label htmlFor={\"paidValue-\" + props.index}>Valor</label>\n            <input \n              type=\"text\"   \n              name={\"paidValue-\" + props.index} \n              placeholder=\"\" \n              id={\"paidValue-\" + props.index}\n              value={props.receipt.paidValue} onChange={(e) => props.receipt.paidValue = e.target.value}/>\n          </div>\n        </div>\n\n        <div className=\"receipt-payer\">\n          <label htmlFor={\"payer-\" + props.index}>Recebi (emos) de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payer-\" + props.index} \n            placeholder=\"\" \n            id={\"payer-\" + props.index}\n            value={props.receipt.payer} onChange={(e) => props.receipt.payer = e.target.value}/>\n\n          <label htmlFor={\"payerAddress-\" + props.index}>Endereço</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"payerAddress-\" + props.index} \n            placeholder=\"\" \n            id={\"payerAddress-\" + props.index}\n            value={props.receipt.payerAddress} onChange={(e) => props.receipt.payerAddress = e.target.value}/>\n          \n          <label htmlFor={\"paidValueAsText-\" + props.index}>A importância de</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"paidValueAsText-\" + props.index} \n            placeholder=\"\" \n            id={\"paidValueAsText-\" + props.index}\n            value={props.receipt.paidValueAsText} onChange={(e) => props.receipt.paidValueAsText = e.target.value}/>\n\n          <label htmlFor={\"referrerTo-\" + props.index }>Referente</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"referrerTo-\" + props.index } \n            placeholder=\"\" \n            id={\"referrerTo-\" + props.index }\n            value={props.receipt.referrerTo} onChange={(e) => props.receipt.referrerTo = e.target.value}/>\n        </div>\n\n        <div className=\"receipt-date\">\n          <label htmlFor={\"date-\" + props.index}>Data</label>\n          <input \n            className=\"u-full-width\" \n            type=\"text\"   \n            name={\"date-\" + props.index} \n            placeholder=\"\" \n            id={\"date-\" + props.index}\n            value={props.date} \n            readOnly/>\n        </div>\n\n      </div>\n    );\n  }\n)\nexport default ReceiptStub;","import React, { useState, useEffect } from 'react';\nimport Receipt from '../../components/receipt/Receipt';\nimport ReceiptStub from '../../components/receipt/ReceiptStub';\nimport Database from '../../db/Database';\n\nimport './ReceiptsToPrint.css';\n\ninterface ReceiptsToPrintProps {\n  database: Database\n}\n\nconst ReceiptsToPrint = (props: ReceiptsToPrintProps) => {\n  const database = props.database;\n  const [receipts, setReceipts] = useState<any[]>([]);\n\n  useEffect(() => {\n    async function fetchReceipts() {\n      const receipts = await database.getAllReceipts();\n      setReceipts(receipts);\n    };\n    fetchReceipts();\n  }, []);\n\n  return (\n    <div className=\"receipt-to-print-list\">\n\n      <header className=\"top-app-bar no-printable\">\n        <div className=\"top-app-bar__navigation\">\n          <a onClick={() => (window.history.back())}>\n            <i className=\"fas fa-arrow-left\"></i>\n          </a>\n        </div>\n\n        <div className=\"top-app-bar__title\">\n          Imprimir\n        </div>\n      </header>\n      \n      <div className=\"action-top-bar\">\n        <button className=\"button-primary no-printable\" onClick={window.print}>\n          Imprimir\n        </button>\n      </div>\n      \n      <div className=\"\">\n        <h2>Canhotos</h2>\n        {receipts.map((receipt) => (\n          <div key={receipt.id}>\n            <ReceiptStub\n              key={receipt.id}\n              index={receipt.id}\n              payee={receipt.payeeName}\n              payeeCpfOrRg={receipt.payeeCpfOrRg}\n              payeeAddress={receipt.payeeAddress}\n              date={receipt.date}\n              receipt={receipt}\n            />\n          </div>\n        ))} \n\n        <h2>Recibos</h2>\n        {receipts.map((receipt) => (\n          <div key={receipt.id}>\n            <Receipt\n              key={receipt.id}\n              index={receipt.id}\n              payee={receipt.payeeName}\n              payeeCpfOrRg={receipt.payeeCpfOrRg}\n              payeeAddress={receipt.payeeAddress}\n              date={receipt.date}\n              receipt={receipt}\n            />\n          </div>\n        ))} \n      </div>\n    </div>\n  );\n}\n\nexport default ReceiptsToPrint;","import Receipt  from './Receipt';\n\nclass Database {\n  \n  #db: any;\n\n  connect() {\n    return new Promise((resolve, reject) => {\n      const dbOpenReq = indexedDB.open('EasyReceipts', 1);\n  \n      dbOpenReq.onerror = (err) => {\n        console.error('error creating/connecting to db', err);\n        reject('Failed to connected/create/update DB');\n      };\n  \n      dbOpenReq.onsuccess = (event: any) => {\n        this.#db = event.target?.result;\n        console.info('connected successfuly to DB')\n        resolve(\"Connected\");\n      };\n  \n      dbOpenReq.onupgradeneeded = (event: any) => {\n        this.#db = event.target?.result;\n  \n        this.#db.createObjectStore('receipt', {\n          autoIncrement: true\n        });\n      };\n    });\n  }\n\n  addReceipt(receipt: Receipt) {\n    return new Promise<void>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt'], \"readwrite\");\n\n      transaction.oncomplete = function(event: any) {\n        console.log(\"Transaction do add is done\", event);\n      };\n\n      transaction.onerror = function(event: any) {\n        console.log(\"Transaction to add erros\", event);\n        reject('Failed to add');\n      };\n\n      var objectStore = transaction.objectStore('receipt');\n      var request = objectStore.add(receipt);\n      request.onsuccess = function(event: any) {\n        console.log(\"Receipt created\", event);\n        resolve();\n      };\n    });\n  };\n\n\n  updateReceipt(receipt: Receipt, id: number) {\n    return new Promise<void>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt'], \"readwrite\");\n\n      transaction.oncomplete = function(event: any) {\n        console.log(\"Transaction do update is done\", event);\n      };\n\n      transaction.onerror = function(event: any) {\n        console.log(\"Transaction to update has erros\", event);\n        reject('Failed to update');\n      };\n\n      var objectStore = transaction.objectStore('receipt');\n      var request = objectStore.put(receipt, id);\n      request.onsuccess = function(event: any) {\n        console.log(\"Receipt created\", event);\n        resolve();\n      };\n    });\n  }\n\n  deleteReceipt(id: number) {\n    return new Promise<void>((resolve, reject) => {\n      var request = this.#db.transaction(['receipt'], \"readwrite\")\n          .objectStore('receipt')\n          .delete(id);\n\n      request.onsuccess = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        resolve();        \n      };\n      request.onerror = function(event: any) {\n        console.error('Error on deleting receipt');\n        reject();\n      };\n    })\n  };\n\n  //TODO: ADD class type RECEIPT when returning a receipt\n  getReceipt(id: number) {\n    return new Promise<any>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt']);\n      var objectStore = transaction.objectStore('receipt');\n      var request = objectStore.get(id);\n      request.onerror = function(event: any) {\n        console.error('Error on fiding receipt');\n        reject();\n      };\n      request.onsuccess = function(event: any) {\n        //GOOD CASE TO UNIT TESTE, SUCCESS FOR DELETE OR FOR NOT FOUND?\n        if (!request.result) {\n          console.warn('Receipt not found');\n          resolve({});\n        }\n        resolve(request.result);\n      };\n    })\n  }\n\n  // TODO RETURN RECEIPT OBJECT LIST\n  getAllReceipts() {\n    return new Promise<any[]>((resolve, reject) => {\n      var transaction = this.#db.transaction(['receipt']);\n      var objectStore = transaction.objectStore('receipt');\n      var receipts: any[] = [];\n\n      objectStore.openCursor().onsuccess = function(event: any) {\n        var cursor = event.target.result;\n        if (cursor) {\n          const receipt = cursor.value;\n          receipt.id = cursor.key;\n\n          receipts.push(cursor.value);\n          cursor.continue();\n        }\n        else {\n          console.log(\"No more entries!\");\n          resolve(receipts);\n        }\n      };\n    })\n  }\n\n  db() {\n    return this.#db;\n  }\n}\n\n//await database.connect();\nexport default Database;\n\n","import React, {useState, useEffect} from 'react';\nimport './css/Normalize.css';\nimport './css/Skeleton.css';\nimport './css/Common.css';\nimport './css/App.css';\n\nimport ReceiptCards from './pages/ListReceiptCards/ReceiptCards';\nimport NewEditReceipt from './pages/NewEditReceipt/NewEditReceipt';\nimport ReceiptsToPrint from './pages/ReceiptsToPrint/ReceiptsToPrint';\n\nimport Database from './db/Database';\n\n// declare global {\n//   interface Window { Database: any; }\n// }      \n\nfunction pathSplitted() {\n  const splitted = window.location.hash.substr(1).split('/');\n  return {\n    first: splitted[0] || '',\n    second: splitted[1] || ''\n  }\n}\n\nconst App = () => {\n\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(pathSplitted().first);\n  const [identifier, setIdentifier] = useState(parseInt(pathSplitted().second));\n  function locationHashChanged() {\n    setCurrentPage(pathSplitted().first);\n    setIdentifier(parseInt(pathSplitted().second));\n  }\n  window.onhashchange = locationHashChanged;\n\n  const [database, setDatabase] = useState<Database>(new Database);\n  \n  useEffect(() => {\n    async function connectDB() {\n      await database.connect();\n      setLoading(false);\n\n      // window.Database = database;\n    };\n    connectDB();\n  }, []);\n\n  return (\n    <div className=\"rootApp\">\n      <main>\n        {\n          (() => {\n\n            if (loading) {\n              return <span>Loading</span>\n            }\n\n            if (!currentPage ||  currentPage === 'receipt-list') {\n              return <ReceiptCards \n                database={database}>\n              </ReceiptCards>\n            }\n\n            if (currentPage === 'receipt' && identifier) {\n              // TODO edit is not working\n              return <NewEditReceipt\n                receiptId={identifier}\n                database={database}\n              />\n            }\n\n            if (currentPage === 'receipt') {\n              return <NewEditReceipt\n                database={database}\n              />\n            }\n\n            if (currentPage === 'receipts-to-print') {\n              return <ReceiptsToPrint \n                database={database}/>\n            }\n\n            return \"NOTFOUND\"\n          })()\n        }\n      </main>\n\n      <footer className=\"bottom-app-bar\">\n        <a href=\"#receipt-list\">\n          <i className=\"fas fa-list\"></i>\n        </a>\n        <a href=\"#receipt\">\n          <i className=\"fas fa-plus-square\"></i>\n        </a>\n        <a href=\"#receipts-to-print\">\n          <i className=\"fas fa-print\"></i>\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}